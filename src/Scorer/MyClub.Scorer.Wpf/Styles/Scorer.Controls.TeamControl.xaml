<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:MyClub.Scorer.Wpf.Controls"
                    xmlns:entities="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities"
                    xmlns:entitiesInterfaces="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities.Interfaces"
                    xmlns:my="http://mynet.com/xaml/themes"
                    xmlns:p="clr-namespace:MyClub.Scorer.Wpf.Parameters"
                    xmlns:s="clr-namespace:MyClub.Scorer.Wpf.Selectors">

    <ResourceDictionary.MergedDictionaries>
        <my:SharedResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Themes/MyNet.Styles.xaml" />
        <my:SharedResourceDictionary Source="pack://application:,,,/Scorer;component/Styles/Scorer.Controls.TeamButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Scorer.Styles.PictureControl.Team" TargetType="{x:Type my:PictureControl}" BasedOn="{StaticResource MyNet.Styles.PictureControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <my:PackIcon Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type my:PictureControl}}}"
                                 Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type my:PictureControl}}}"
                                 Kind="ShieldFavorite"
                                 Visibility="{Binding Image, RelativeSource={RelativeSource AncestorType={x:Type my:PictureControl}}, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25" />
        <Setter Property="Image" Value="{Binding Logo, UpdateSourceTrigger=PropertyChanged, Converter={x:Static my:BytesToImageConverter.Default}}" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Width" Value="25" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Default}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Scorer.Styles.TeamControl.Horizontal" TargetType="{x:Type ctrl:TeamControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="LogoSize" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:TeamControl}">
                    <DockPanel>
                        <!-- Qualification state -->
                        <my:PackIcon x:Name="icon"
                                     Width="14"
                                     Height="14"
                                     Margin="{StaticResource MyNet.Margins.Default.Right}"
                                     DockPanel.Dock="Left"
                                     Foreground="{DynamicResource MyNet.Brushes.Gold}"
                                     Kind="Star"
                                     ToolTip="{my:Resource Qualified}">
                            <my:PackIcon.Visibility>
                                <Binding Converter="{x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}" Path="QualificationState" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <x:Array Type="{x:Type entities:QualificationState}">
                                            <entities:QualificationState>IsQualified</entities:QualificationState>
                                            <entities:QualificationState>IsTemporaryQualified</entities:QualificationState>
                                        </x:Array>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </my:PackIcon.Visibility>
                        </my:PackIcon>

                        <!-- Logo -->
                        <ContentControl x:Name="logo"
                                        Margin="{StaticResource MyNet.Margins.Default.Left}"
                                        Content="{TemplateBinding Team}"
                                        DockPanel.Dock="Right">
                            <ContentControl.ContentTemplateSelector>
                                <s:TeamDataTemplateSelector>
                                    <s:TeamDataTemplateSelector.TeamTemplate>
                                        <DataTemplate>
                                            <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}"
                                                               Width="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                               Height="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                               DataContext="{Binding}" />
                                        </DataTemplate>
                                    </s:TeamDataTemplateSelector.TeamTemplate>
                                    <s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                        <DataTemplate>
                                            <my:PackIcon Width="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                         Height="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                         Kind="Shield"
                                                         Opacity="{StaticResource MyNet.Opacity.Overlay}" />
                                        </DataTemplate>
                                    </s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                </s:TeamDataTemplateSelector>
                            </ContentControl.ContentTemplateSelector>
                        </ContentControl>

                        <!-- Team -->
                        <ContentControl x:Name="team" HorizontalAlignment="Right" Content="{TemplateBinding Team}">
                            <ContentControl.ContentTemplateSelector>
                                <s:TeamDataTemplateSelector>
                                    <s:TeamDataTemplateSelector.TeamTemplate>
                                        <DataTemplate>
                                            <ctrl:TeamButton Item="{Binding}" ShowShortName="{Binding ShowShortName, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}" TextWrapping="{Binding TextWrapping, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}" />
                                        </DataTemplate>
                                    </s:TeamDataTemplateSelector.TeamTemplate>
                                    <s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                        <DataTemplate>
                                            <TextBlock x:Name="name"
                                                       Style="{StaticResource MyNet.Styles.TextBlock.Ghost}"
                                                       Text="{Binding Name}"
                                                       TextWrapping="{Binding TextWrapping, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}" />
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding ShowShortName, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}" Value="True">
                                                    <Setter TargetName="name" Property="Text" Value="{Binding ShortName}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}" Value="Center">
                                                    <Setter TargetName="name" Property="TextAlignment" Value="Center" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                </s:TeamDataTemplateSelector>
                            </ContentControl.ContentTemplateSelector>
                        </ContentControl>

                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="QualificationState" Value="IsTemporaryQualified">
                            <Setter TargetName="icon" Property="Kind" Value="FavoriteHalfFull" />
                            <Setter TargetName="icon" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            <Setter TargetName="icon" Property="ToolTip" Value="{my:Resource TemporaryQualified}" />
                        </Trigger>
                        <Trigger Property="IsAway" Value="True">
                            <Setter TargetName="icon" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="icon" Property="Margin" Value="{StaticResource MyNet.Margins.Default.Left}" />
                            <Setter TargetName="logo" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="logo" Property="Margin" Value="{StaticResource MyNet.Margins.Default.Right}" />
                            <Setter TargetName="team" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Scorer.Styles.TeamControl.Horizontal.Small" TargetType="{x:Type ctrl:TeamControl}" BasedOn="{StaticResource Scorer.Styles.TeamControl.Horizontal}">
        <Setter Property="LogoSize" Value="19" />
    </Style>

    <Style x:Key="Scorer.Styles.TeamControl.Horizontal.Large" TargetType="{x:Type ctrl:TeamControl}" BasedOn="{StaticResource Scorer.Styles.TeamControl.Horizontal}">
        <Setter Property="LogoSize" Value="40" />
    </Style>

    <Style x:Key="Scorer.Styles.TeamControl.Vertical" TargetType="{x:Type ctrl:TeamControl}" BasedOn="{StaticResource Scorer.Styles.TeamControl.Horizontal}">
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Caption}" />
        <Setter Property="LogoSize" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:TeamControl}">
                    <my:SimpleStackPanel>

                        <!-- Logo -->
                        <ContentControl x:Name="logo" Content="{TemplateBinding Team}">
                            <ContentControl.ContentTemplateSelector>
                                <s:TeamDataTemplateSelector>
                                    <s:TeamDataTemplateSelector.TeamTemplate>
                                        <DataTemplate>
                                            <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}"
                                                               Width="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                               Height="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                               DataContext="{Binding}" />
                                        </DataTemplate>
                                    </s:TeamDataTemplateSelector.TeamTemplate>
                                    <s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                        <DataTemplate>
                                            <my:PackIcon Width="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                         Height="{Binding LogoSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                         Kind="Shield"
                                                         Opacity="{StaticResource MyNet.Opacity.Overlay}" />
                                        </DataTemplate>
                                    </s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                </s:TeamDataTemplateSelector>
                            </ContentControl.ContentTemplateSelector>
                        </ContentControl>

                        <DockPanel>
                            <!-- Qualification state -->
                            <my:PackIcon x:Name="icon"
                                         Width="14"
                                         Height="14"
                                         Margin="{StaticResource MyNet.Margins.Default.Right}"
                                         DockPanel.Dock="Left"
                                         Foreground="{DynamicResource MyNet.Brushes.Gold}"
                                         Kind="Star"
                                         ToolTip="{my:Resource Qualified}">
                                <my:PackIcon.Visibility>
                                    <Binding Converter="{x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}" Path="QualificationState" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <x:Array Type="{x:Type entities:QualificationState}">
                                                <entities:QualificationState>IsQualified</entities:QualificationState>
                                                <entities:QualificationState>IsTemporaryQualified</entities:QualificationState>
                                            </x:Array>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </my:PackIcon.Visibility>
                            </my:PackIcon>

                            <!-- Team -->
                            <ContentControl x:Name="team" HorizontalAlignment="Center" Content="{TemplateBinding Team}">
                                <ContentControl.ContentTemplateSelector>
                                    <s:TeamDataTemplateSelector>
                                        <s:TeamDataTemplateSelector.TeamTemplate>
                                            <DataTemplate>
                                                <ctrl:TeamButton HorizontalAlignment="Center"
                                                                 Item="{Binding}"
                                                                 ShowShortName="{Binding ShowShortName, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                                 TextWrapping="{Binding TextWrapping, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}"
                                                                 Typography.Capitals="AllSmallCaps" />
                                            </DataTemplate>
                                        </s:TeamDataTemplateSelector.TeamTemplate>
                                        <s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                            <DataTemplate>
                                                <TextBlock x:Name="name" HorizontalAlignment="Center" TextAlignment="Center"
                                                       Style="{StaticResource MyNet.Styles.TextBlock.Ghost}"
                                                       Text="{Binding Name}" Typography.Capitals="AllSmallCaps"
                                                       TextWrapping="{Binding TextWrapping, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}" />
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding ShowShortName, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TeamControl}}}" Value="True">
                                                        <Setter TargetName="name" Property="Text" Value="{Binding ShortName}" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </s:TeamDataTemplateSelector.VirtualTeamTemplate>
                                    </s:TeamDataTemplateSelector>
                                </ContentControl.ContentTemplateSelector>
                            </ContentControl>
                        </DockPanel>

                    </my:SimpleStackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="QualificationState" Value="IsTemporaryQualified">
                            <Setter TargetName="icon" Property="Kind" Value="FavoriteHalfFull" />
                            <Setter TargetName="icon" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            <Setter TargetName="icon" Property="ToolTip" Value="{my:Resource TemporaryQualified}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Scorer.Styles.TeamControl.Vertical.Large" TargetType="{x:Type ctrl:TeamControl}" BasedOn="{StaticResource Scorer.Styles.TeamControl.Vertical}">
        <Setter Property="LogoSize" Value="80" />
    </Style>

</ResourceDictionary>