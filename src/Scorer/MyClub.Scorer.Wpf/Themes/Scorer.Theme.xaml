<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dial="clr-namespace:MyNet.UI.Dialogs;assembly=MyNet.UI"
                    xmlns:entities="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities"
                    xmlns:entitiesInterfaces="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities.Interfaces"
                    xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
                    xmlns:filters="clr-namespace:MyClub.Scorer.Wpf.Filters"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:my="http://mynet.com/xaml/themes"
                    xmlns:s="clr-namespace:MyClub.Scorer.Wpf.Selectors"
                    xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.MessageBox">

    <ResourceDictionary.MergedDictionaries>
        <my:SharedResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Themes/MyNet.Styles.xaml" />
        <my:SharedResourceDictionary Source="pack://application:,,,/Scorer;component/Themes/Scorer.Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Default -->
    <Style TargetType="{x:Type my:BusyControl}" BasedOn="{StaticResource MyNet.Styles.BusyControl.Accent}" />

    <!-- MessageBox -->
    <DataTemplate DataType="{x:Type vm:RemoveTeamsMessageBoxViewModel}">
        <Grid Width="400" MinHeight="80">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <my:PackIcon x:Name="Icon"
                         Grid.RowSpan="3"
                         Grid.Column="0"
                         Width="60"
                         Height="60"
                         VerticalAlignment="Center" />

            <DockPanel Grid.Column="1" Margin="{StaticResource MyNet.Margins.Medium.Left}">
                <TextBlock VerticalAlignment="Center"
                           DockPanel.Dock="Top"
                           Text="{Binding Message, Mode=OneTime}"
                           TextWrapping="Wrap" />
                <CheckBox Grid.Row="2"
                          Grid.Column="1"
                          Content="{my:Resource RemoveStadiumOfTeam}"
                          IsChecked="{Binding RemoveStadium}" />
            </DockPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Static dial:MessageSeverity.Success}">
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Positive}" />
                <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.CheckCircle}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Static dial:MessageSeverity.Error}">
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Negative}" />
                <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.RemoveCircle}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Static dial:MessageSeverity.Warning}">
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Warning}" />
                <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.WarningCircle}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Static dial:MessageSeverity.Information}">
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Information}" />
                <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.InformationCircle}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Static dial:MessageSeverity.Question}">
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Information}" />
                <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.QuestionMarkCircle}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Severity}" Value="{x:Static dial:MessageSeverity.Custom}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Team -->
    <DataTemplate x:Key="Scorer.DataTemplates.Team.ComboBox" DataType="{x:Type entities:TeamViewModel}">
        <DockPanel>
            <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}"
                               Width="17"
                               Height="17"
                               Margin="{StaticResource MyNet.Margins.Default.Right}"
                               DataContext="{Binding}"
                               DockPanel.Dock="Left" />
            <TextBlock Text="{Binding Name}" />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="Scorer.DataTemplates.VirtualTeam.ComboBox" DataType="{x:Type entitiesInterfaces:IVirtualTeamViewModel}">
        <DockPanel>
            <my:PackIcon Width="17"
                         Height="17"
                         Margin="{StaticResource MyNet.Margins.Default.Right}"
                         DockPanel.Dock="Left"
                         Kind="Shield"
                         Opacity="{StaticResource MyNet.Opacity.Overlay}" />
            <TextBlock Text="{Binding Name}" />
        </DockPanel>
    </DataTemplate>

    <s:TeamDataTemplateSelector x:Key="Scorer.DataTemplateSelectors.Team.ComboBox" TeamTemplate="{StaticResource Scorer.DataTemplates.Team.ComboBox}" VirtualTeamTemplate="{StaticResource Scorer.DataTemplates.VirtualTeam.ComboBox}" />

    <!-- Stadium -->
    <DataTemplate DataType="{x:Type entities:StadiumWrapper}">
        <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Large}">
            <my:PackIcon Tag="{Binding Availability}">
                <my:PackIcon.Style>
                    <Style TargetType="{x:Type my:PackIcon}" BasedOn="{StaticResource MyNet.Styles.PackIcon}">
                        <Setter Property="Height" Value="18" />
                        <Setter Property="Width" Value="18" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Unknown">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsAvailable">
                                <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Positive}" />
                                <Setter Property="Kind" Value="CheckCircle" />
                                <Setter Property="ToolTip" Value="{my:Resource StadiumAvailableAtDate}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsBusy">
                                <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Negative}" />
                                <Setter Property="Kind" Value="CloseCircle" />
                                <Setter Property="ToolTip" Value="{my:Resource StadiumUnavailableAtDate}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsPartiallyBusy">
                                <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Warning}" />
                                <Setter Property="Kind" Value="WarningCircle" />
                                <Setter Property="ToolTip" Value="{my:Resource StadiumPartiallyUnavailableAtDate}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </my:PackIcon.Style>
            </my:PackIcon>
            <TextBlock Text="{Binding Stadium.DisplayName}" />
        </my:SimpleStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type entities:AutomaticStadiumWrapper}">
        <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Large}">
            <my:PackIcon Width="18" Height="18" Kind="Magic" />
            <TextBlock Text="{my:Resource Automatic}" />
        </my:SimpleStackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type entities:NoStadiumWrapper}">
        <my:SimpleStackPanel Opacity="{StaticResource MyNet.Opacity.Secondary}" Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Large}">
            <my:PackIcon Width="18" Height="18" Kind="NullOff" />
            <TextBlock Text="{my:Resource NoneMale}" />
        </my:SimpleStackPanel>
    </DataTemplate>
    
    <!-- Filters -->
    <DataTemplate DataType="{x:Type filters:MatchTeamFilterViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Filled}"
                      Grid.Column="0"
                      Width="Auto"
                      HorizontalAlignment="Stretch"
                      my:HintAssist.Hint="{my:Resource Team}"
                      my:HintAssist.IsFloating="True"
                      my:ItemsControlAssist.SortingProperty="Name"
                      my:TextFieldAssist.HasClearButton="True"
                      IsEnabled="{Binding IsReadOnly, Converter={x:Static my:NotBooleanConverter.Default}}"
                      IsReadOnly="{Binding IsReadOnly}"
                      ItemTemplateSelector="{StaticResource Scorer.DataTemplateSelectors.Team.ComboBox}"
                      ItemsSource="{Binding AvailableValues}"
                      SelectedValue="{Binding Value, Mode=TwoWay}" />

            <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}"
                     Grid.Column="2"
                     Margin="{StaticResource MyNet.Margins.Medium.Left}"
                     VerticalAlignment="Stretch"
                     IsEnabled="{Binding Value, Converter={x:Static my:NullToBooleanConverter.FalseIfNull}}"
                     SelectedValue="{Binding VenueFilter.Value}"
                     SelectedValuePath="DataContext"
                     SelectionMode="Single"
                     Visibility="{Binding ShowVenueFilter, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                <ListBoxItem Content="{my:MediumIcon Kind=Home}" DataContext="{x:Static enums:VenueContext.Home}" ToolTip="{my:Resource LocationHome}" />
                <ListBoxItem Content="{my:MediumIcon Kind=NullOff}" DataContext="{x:Null}" Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                <ListBoxItem Content="{my:MediumIcon Kind=Plane}" DataContext="{x:Static enums:VenueContext.Away}" ToolTip="{my:Resource LocationAway}" />
            </ListBox>
        </Grid>
    </DataTemplate>

</ResourceDictionary>