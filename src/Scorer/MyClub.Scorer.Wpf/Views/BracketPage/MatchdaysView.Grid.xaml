<UserControl x:Class="MyClub.Scorer.Wpf.Views.BracketPage.MatchdaysGridView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctrl="clr-namespace:MyClub.Scorer.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.BracketPage"
             xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.BracketPage"
             d:DataContext="{d:DesignInstance Type=vm:MatchdaysViewModel}"
             my:InputAssist.PropagateInWindow="True"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <DataTemplate x:Key="Scorer.DataTemplates.ListBoxItem.Matchday">
            <Grid Width="400">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--  Name  -->
                <TextBlock HorizontalAlignment="Center" FontSize="{StaticResource MyNet.Font.Size.Caption}" Text="{Binding Item.Name}" />

                <!--  Matches  -->
                <ItemsControl Grid.Row="2" AlternationCount="2" ItemsSource="{Binding Item.Matches}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="border" Padding="{StaticResource MyNet.Margins.Small}">
                                <ctrl:MatchControl Style="{StaticResource Scorer.Styles.MatchControl.Small}" EnableContextMenu="False" Match="{Binding}" />
                            </Border>
                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter TargetName="border" Property="Background" Value="{my:BrushBinding InheritPath=(TextElement.Foreground), Opacity=0.03}" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!--  Actions  -->
                <my:SimpleStackPanel Grid.Row="4"
                                     HorizontalAlignment="Right"
                                     Orientation="Horizontal"
                                     Spacing="{StaticResource MyNet.Margin.Small}">

                    <!--  Item ToolBar  -->
                    <v:MatchdayToolBar x:Name="ToolBar"
                                       Padding="0"
                                       DataContext="{Binding Item}"
                                       RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}"
                                       Visibility="Hidden" />

                    <!--  Selection  -->
                    <CheckBox x:Name="Selection"
                              Style="{StaticResource MyNet.Styles.CheckBox.Circle}"
                              BorderBrush="{my:BrushBinding SelfPath=(TextElement.Foreground),
                                                            Opacity={StaticResource MyNet.Opacity.Secondary}}"
                              Focusable="False"
                              IsChecked="{Binding IsSelected}"
                              IsTabStop="False"
                              Visibility="Hidden" />
                </my:SimpleStackPanel>

            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
                        <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <ListBox Style="{StaticResource MyNet.Styles.ListBox.Cards}" ItemTemplate="{StaticResource Scorer.DataTemplates.ListBoxItem.Matchday}" ItemsSource="{Binding Wrappers}">
        <i:Interaction.Behaviors>
            <my:ListBoxSelectOnMouseOverBehavior ShowSelectionArea="False" />
        </i:Interaction.Behaviors>
        <ListBox.ItemContainerStyle>
            <Style BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Card}" TargetType="{x:Type ListBoxItem}">
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                <Setter Property="IsEnabled" Value="{Binding IsSelectable}" />
            </Style>
        </ListBox.ItemContainerStyle>
    </ListBox>
</UserControl>