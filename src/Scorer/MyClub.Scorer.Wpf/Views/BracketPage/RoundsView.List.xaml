<UserControl x:Class="MyClub.Scorer.Wpf.Views.BracketPage.RoundsListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctrl="clr-namespace:MyClub.Scorer.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:entities="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.BracketPage"
             xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.BracketPage"
             d:DataContext="{d:DesignInstance Type=vm:RoundsViewModel}"
             my:InputAssist.PropagateInWindow="True"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <DockPanel>

        <!-- ToolBar -->
        <my:CommandsBar Margin="0 0 150 10" DockPanel.Dock="Top">

            <my:CommandsBar.LeftCommands>
                <ToolBar Style="{StaticResource MyNet.Styles.ToolBar.Transparent}">
                    <Button my:IconAssist.Icon="{my:Icon Kind=DesktopClassic}"
                            Command="{Binding OpenBuildAssistantCommand}"
                            Content="{my:Resource Build}"
                            ToolTip="Ctrl+B" />
                </ToolBar>
            </my:CommandsBar.LeftCommands>

            <my:SelectionCommandsBar Style="{StaticResource MyNet.Styles.SelectionCommandsBar}" SelectedCount="{Binding SelectedWrappers.Count}" UnselectAllCommand="{Binding ClearSelectionCommand}">
                <Button my:ToolTipAssist.Content="{my:ShortcutResource Edit, ShortcutKey=Ctrl+E}" Command="{Binding EditSelectedItemCommand}" Content="{my:MediumIcon Kind=Edit}" />
                <Button my:ThemeAssist.IsMouseOverBackground="{DynamicResource MyNet.Brushes.Negative}"
                        my:ThemeAssist.IsMouseOverForeground="{DynamicResource MyNet.Brushes.White}"
                        my:ToolTipAssist.Content="{my:ShortcutResource Remove,
                                                                       ShortcutKey=InputDelete}"
                        Command="{Binding RemoveSelectedItemsCommand}"
                        Content="{my:MediumIcon Kind=Trash}" />
            </my:SelectionCommandsBar>

            <my:CommandsBar.RightCommands>
                <ToolBar Style="{StaticResource MyNet.Styles.ToolBar.Transparent}">
                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource Scorer.DataTemplates.List.Count.Selectable}" />
                </ToolBar>
            </my:CommandsBar.RightCommands>

        </my:CommandsBar>
        <DockPanel>

            <!-- Rounds -->
            <my:Card Width="270"
                     Margin="{StaticResource MyNet.Margins.Medium.Right}"
                     Padding="0"
                     HorizontalAlignment="Left"
                     DockPanel.Dock="Left">
                <ListBox ItemsSource="{Binding Wrappers}" SelectionMode="Extended">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MyNet.Styles.ListBoxItem}">
                            <Setter Property="Height" Value="50" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Default}">
                                <TextBlock Text="{Binding Item.Name}" />
                                <!--<TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{Binding Item.Name}" />-->
                            </my:SimpleStackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </my:Card>

            <!-- Details -->
            <my:TransitioningContent Content="{Binding DetailsViewModel}" TriggerObject="{Binding SelectedItem}">
                <my:TransitioningContent.Style>
                    <Style TargetType="{x:Type my:TransitioningContent}" BasedOn="{StaticResource MyNet.Styles.TransitioningContent}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <v:RoundDetailsView />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedWrappers.Count, Converter={x:Static my:CountToBooleanConverter.Any}}" Value="False">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentControl ContentTemplate="{StaticResource MyNet.DataTemplates.NoItems.Medium}" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedWrappers.Count, Converter={x:Static my:CountToBooleanConverter.Many}}" Value="True">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentControl ContentTemplate="{StaticResource MyNet.DataTemplates.ManyItems.Medium}" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </my:TransitioningContent.Style>
            </my:TransitioningContent>
        </DockPanel>
    </DockPanel>
</UserControl>