<UserControl x:Class="MyClub.Scorer.Wpf.Views.BracketPage.StagesYearView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctrl="clr-namespace:MyClub.Scorer.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:entities="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.BracketPage"
             xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.BracketPage"
             d:DataContext="{d:DesignInstance Type=vm:StagesViewModel`1}"
             my:InputAssist.PropagateInWindow="True"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <DataTemplate x:Key="Scorer.DataTemplates.ColumnHeader">
            <TextBlock HorizontalAlignment="Center"
                       Opacity="{StaticResource MyNet.Opacity.Secondary}"
                       Text="{my:DisplayDateTime Format=MMMM,
                                                 Casing=AllCaps}"
                       Typography.Capitals="AllSmallCaps" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type entities:MatchdayViewModel}">
            <TextBlock Text="{Binding Name}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type entities:RoundStageViewModel}">
            <DockPanel>
                <TextBlock Margin="{StaticResource MyNet.Margins.Default.Right}" Text="{Binding Stage.Name}" />
                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="(" Visibility="{Binding ShowName, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{Binding ShortName}" Visibility="{Binding ShowName, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text=")" Visibility="{Binding ShowName, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
            </DockPanel>
        </DataTemplate>

        <Style x:Key="Scorer.Styles.ListBoxItem.Stage.Alternate" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Is Postponed -->
                            <Path Grid.Column="1"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Data="M 32 0 V -32 H 0 Z"
                                  Fill="{DynamicResource MyNet.Brushes.Warning}"
                                  Stretch="Uniform"
                                  ToolTip="{my:Resource Postponed}"
                                  Visibility="{Binding Item.IsPostponed, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                            <!-- Selection -->
                            <CheckBox x:Name="selection"
                                      Style="{StaticResource MyNet.Styles.CheckBox.Circle}"
                                      HorizontalAlignment="Center"
                                      BorderBrush="{my:BrushBinding SelfPath=(TextElement.Foreground),
                                                                    Opacity={StaticResource MyNet.Opacity.Secondary}}"
                                      IsChecked="{Binding IsSelected}"
                                      Visibility="Hidden" />

                            <Grid Grid.Column="1" Margin="13 0 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- Stage -->
                                <ContentControl Grid.Column="0" VerticalAlignment="Center" Content="{Binding Item}" />

                                <!-- ToolBar -->
                                <ContentControl x:Name="ToolBar"
                                                Grid.Column="1"
                                                VerticalAlignment="Center"
                                                Content="{Binding Item}"
                                                Visibility="Collapsed">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type entities:MatchdayViewModel}">
                                            <v:MatchdayToolBar Style="{StaticResource MyNet.Styles.ToolBar.Tools}" RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}" />
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type entities:RoundStageViewModel}">
                                            <v:RoundStageToolBar Style="{StaticResource MyNet.Styles.ToolBar.Tools}" RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}" />
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>
                            </Grid>
                        </Grid>
                        <DataTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
                                    <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                <Setter TargetName="selection" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="selection" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyNet.Styles.FocusVisualStyle.Rectangle.Margin}" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="BackBorder" ClipToBounds="{TemplateBinding ClipToBounds}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Normal" />
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Unselected" />
                                </VisualStateGroup>
                                <VisualStateGroup Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" To="Unfocused" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="column1" Width="40" />
                                        <ColumnDefinition x:Name="column2" Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Path Grid.Column="1"
                                          Data="M 10 0 V 10 H 0 Z"
                                          Fill="{TemplateBinding Background}"
                                          Stretch="Fill" />
                                    <Border Grid.Column="2" Background="{TemplateBinding Background}" />

                                </Grid>
                                <Border x:Name="MouseOverBorder"
                                        Background="{TemplateBinding my:ListBoxItemAssist.IsMouseOverBackground}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Opacity="0"
                                        SnapsToDevicePixels="True" />
                                <Border x:Name="SelectedBorder"
                                        Background="{TemplateBinding my:ListBoxItemAssist.IsSelectedBackground}"
                                        BorderBrush="{TemplateBinding my:ListBoxItemAssist.IsSelectedBorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Opacity="0"
                                        RenderTransformOrigin="0.5,0.5" />
                                <my:Ripple x:Name="Ripple"
                                           Padding="{TemplateBinding Padding}"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                           Feedback="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           RecognizesAccessKey="False"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="column1" Property="Width" Value="0" />
                                <Setter TargetName="column2" Property="Width" Value="0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="column1" Property="Width" Value="0" />
                                <Setter TargetName="column2" Property="Width" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="my:ListBoxItemAssist.IsMouseOverBackground" Value="{my:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Hovered}}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedBackground" Value="{my:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Checked}}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedBorderBrush" Value="Transparent" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedForeground" Value="{my:BrushBinding SelfPath=Background, Contrast=True}" />
            <Setter Property="my:RippleAssist.Feedback" Value="{my:BrushBinding SelfPath=Foreground}" />
            <Setter Property="my:ToolTipAssist.Content" Value="{Binding Item.Matches}" />
            <Setter Property="my:ToolTipAssist.ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}"
                                      Width="400"
                                      MaxHeight="300"
                                      AlternationCount="2"
                                      ItemsSource="{Binding}">
                            <my:ItemsControlAssist.EmptyTemplate>
                                <ControlTemplate>
                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Ghost}" HorizontalAlignment="Center" Text="{my:Resource NoData}" />
                                </ControlTemplate>
                            </my:ItemsControlAssist.EmptyTemplate>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border x:Name="border" Padding="{StaticResource MyNet.Margins.Small}">
                                        <ctrl:MatchControl Style="{StaticResource Scorer.Styles.MatchControl.Small}" Match="{Binding}" />
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter TargetName="border" Property="Background" Value="{my:BrushBinding InheritPath=(TextElement.Foreground), Opacity=0.03}" />
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="my:ToolTipAssist.PlacementMode" Value="TopAndAlignCentres" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Foreground" Value="{Binding Path=(my:ListBoxItemAssist.IsSelectedForeground), RelativeSource={RelativeSource Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="Scorer.DataTemplates.Stage">
            <Grid>

                <!-- Is Postponed -->
                <Path HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Data="M 20 0 V -20 H 0 Z"
                      Fill="{DynamicResource MyNet.Brushes.Warning}"
                      Stretch="Uniform"
                      ToolTip="{my:Resource Postponed}"
                      Visibility="{Binding Item.IsPostponed, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                <Grid Margin="{StaticResource MyNet.Margins.Default}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid Width="25">
                        <CheckBox x:Name="Selection"
                                  Style="{StaticResource MyNet.Styles.CheckBox.Circle}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  BorderBrush="{my:BrushBinding SelfPath=(TextElement.Foreground),
                                                                Opacity={StaticResource MyNet.Opacity.Secondary}}"
                                  IsChecked="{Binding IsSelected}"
                                  Visibility="Hidden" />
                        <my:PackIcon x:Name="Icon"
                                     Width="18"
                                     Height="18"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Kind="Soccer" />
                    </Grid>

                    <!-- Stage -->
                    <ContentControl Grid.Column="2" VerticalAlignment="Center" Content="{Binding Item}" />

                    <!-- ToolBar -->
                    <ContentControl x:Name="ToolBar"
                                    Grid.Column="4"
                                    VerticalAlignment="Center"
                                    Content="{Binding Item}"
                                    Visibility="Collapsed">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type entities:MatchdayViewModel}">
                                <v:MatchdayToolBar Style="{StaticResource MyNet.Styles.ToolBar.Tools}" RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type entities:RoundStageViewModel}">
                                <v:RoundStageToolBar Style="{StaticResource MyNet.Styles.ToolBar.Tools}" RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}" />
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>

                </Grid>
            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Item.IsPostponed}" Value="True">
                    <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Warning}" />
                    <Setter TargetName="Icon" Property="Kind" Value="ProgressQuestion" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
                        <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="Scorer.Styles.ListBoxItem.Stage.Alternate.DropDown" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Card}">
            <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
            <Setter Property="Height" Value="34" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Width" Value="250" />
            <Setter Property="my:IconAssist.Alignment" Value="Left" />
            <Setter Property="my:IconAssist.Margin" Value="{StaticResource MyNet.Margins.Default.Right}" />
            <Setter Property="my:IconAssist.Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
            <Setter Property="my:ListBoxItemAssist.IsMouseOverBackground" Value="{my:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Hovered}}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedBackground" Value="{my:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Checked}}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedForeground" Value="{my:BrushBinding SelfPath=Foreground}" />
            <Setter Property="my:ListBoxItemAssist.ShowSelection" Value="True" />
            <Setter Property="my:ThemeAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
            <Setter Property="my:ToolTipAssist.Content" Value="{Binding Item.Matches}" />
            <Setter Property="my:ToolTipAssist.ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}"
                                      Width="400"
                                      MaxHeight="300"
                                      AlternationCount="2"
                                      ItemsSource="{Binding}">
                            <my:ItemsControlAssist.EmptyTemplate>
                                <ControlTemplate>
                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Ghost}" HorizontalAlignment="Center" Text="{my:Resource NoData}" />
                                </ControlTemplate>
                            </my:ItemsControlAssist.EmptyTemplate>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border x:Name="border" Padding="{StaticResource MyNet.Margins.Small}">
                                        <ctrl:MatchControl Style="{StaticResource Scorer.Styles.MatchControl.Small}" Match="{Binding}" />
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter TargetName="border" Property="Background" Value="{my:BrushBinding InheritPath=(TextElement.Foreground), Opacity=0.03}" />
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="my:ToolTipAssist.PlacementMode" Value="TopAndAlignCentres" />
        </Style>

        <Style x:Key="Scorer.Styles.CalendarItem" TargetType="{x:Type my:CalendarItem}" BasedOn="{StaticResource MyNet.Styles.CalendarItem.DaysByYear}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type my:CalendarItem}">
                        <Border Margin="{TemplateBinding Margin}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Normal" />
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{StaticResource MyNet.Opacity.Hovered}"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{StaticResource MyNet.Opacity.Checked}"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Unselected" />
                                    <VisualState Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.03"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="base">
                                <Border Background="{TemplateBinding Background}" />
                                <Border x:Name="MouseOverBorder" Background="{TemplateBinding Foreground}" Opacity="0" />

                                <Border x:Name="SelectedBorder"
                                        Background="{TemplateBinding Foreground}"
                                        Opacity="0"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1" />
                                    </Border.RenderTransform>
                                </Border>
                                <my:Ripple Padding="{TemplateBinding Padding}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Feedback="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid>
                                        <ContentPresenter x:Name="DayText"
                                                          Margin="{StaticResource MyNet.Margins.Default}"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                                        <my:DropDownButton Padding="7 2"
                                                           HorizontalAlignment="Stretch"
                                                           VerticalAlignment="Stretch"
                                                           HorizontalContentAlignment="Stretch"
                                                           my:ThemeAssist.CornerRadius="0"
                                                           my:ThemeAssist.IsCheckedBackground="{my:BrushBinding SelfPath=(my:ThemeAssist.IsMouseOverBackground)}"
                                                           my:ThemeAssist.IsCheckedForeground="{my:BrushBinding SelfPath=(my:ThemeAssist.IsMouseOverForeground)}"
                                                           DropDownButtonPosition="Left"
                                                           MaxPopupHeight="400"
                                                           PopupPadding="{StaticResource MyNet.Margins.Medium.Vertical}"
                                                           StaysOpen="True"
                                                           ToggleContent="{Binding Appointments.Count, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Visibility="{Binding Appointments.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotMany}}">
                                            <my:DropDownButton.Style>
                                                <Style TargetType="{x:Type my:DropDownButton}" BasedOn="{StaticResource MyNet.Styles.DropDownButton.Filled}">
                                                    <Setter Property="ShowDropDownButton" Value="False" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="ShowDropDownButton" Value="True" />
                                                        </Trigger>
                                                        <Trigger Property="IsPopupOpen" Value="True">
                                                            <Setter Property="ShowDropDownButton" Value="True" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </my:DropDownButton.Style>
                                            <my:DropDownButton.ToggleContentTemplate>
                                                <DataTemplate>
                                                    <TextBlock x:Name="text" Margin="45 0 0 0" Text="{my:Translation Format=XItems, Pluralize=True}" />
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding ShowDropDownButton, RelativeSource={RelativeSource AncestorType={x:Type my:DropDownButton}}}" Value="True">
                                                            <Setter TargetName="text" Property="Margin" Value="27 0 0 0" />
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </my:DropDownButton.ToggleContentTemplate>
                                            <my:DropDownButton.ButtonStyle>
                                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MyNet.Styles.ToggleButton.Filled}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border x:Name="BackBorder" ClipToBounds="{TemplateBinding ClipToBounds}" SnapsToDevicePixels="True">
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup Name="CommonStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                                                    <VisualTransition.GeneratedEasingFunction>
                                                                                        <CircleEase EasingMode="EaseOut" />
                                                                                    </VisualTransition.GeneratedEasingFunction>
                                                                                </VisualTransition>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState Name="Normal" />
                                                                            <VisualState Name="MouseOver">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                                     To="1"
                                                                                                     Duration="0" />
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup Name="CheckStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition GeneratedDuration="0:0:0.3" />
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState Name="Checked">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                                     To="1"
                                                                                                     Duration="0" />
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState Name="Unchecked" />
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup Name="FocusStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition GeneratedDuration="0:0:0.3" To="Unfocused" />
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState Name="Focused">
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                                     To="1"
                                                                                                     Duration="0" />
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState Name="Unfocused" />
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <Grid>
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition x:Name="column1" Width="40" />
                                                                                <ColumnDefinition x:Name="column2" Width="Auto" />
                                                                                <ColumnDefinition Width="*" />
                                                                            </Grid.ColumnDefinitions>
                                                                            <Path Grid.Column="1"
                                                                                  Data="M 10 0 V 10 H 0 Z"
                                                                                  Fill="{TemplateBinding Background}"
                                                                                  Stretch="Fill" />
                                                                            <Border Grid.Column="2" Background="{TemplateBinding Background}" />

                                                                        </Grid>
                                                                        <Border x:Name="MouseOverBorder"
                                                                                Background="{TemplateBinding my:ThemeAssist.IsMouseOverBackground}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                Opacity="0"
                                                                                SnapsToDevicePixels="True" />
                                                                        <Border x:Name="SelectedBorder"
                                                                                Background="{TemplateBinding my:ThemeAssist.IsCheckedBackground}"
                                                                                BorderBrush="{TemplateBinding my:ThemeAssist.IsCheckedBorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                Opacity="0"
                                                                                RenderTransformOrigin="0.5,0.5" />
                                                                        <my:Ripple x:Name="Ripple"
                                                                                   Padding="{TemplateBinding Padding}"
                                                                                   HorizontalAlignment="Stretch"
                                                                                   VerticalAlignment="Stretch"
                                                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                   Content="{TemplateBinding Content}"
                                                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                                   Feedback="{TemplateBinding Foreground}"
                                                                                   Focusable="False"
                                                                                   RecognizesAccessKey="False"
                                                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Grid>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="column1" Property="Width" Value="0" />
                                                                        <Setter TargetName="column2" Property="Width" Value="0" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="column1" Property="Width" Value="0" />
                                                                        <Setter TargetName="column2" Property="Width" Value="0" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </my:DropDownButton.ButtonStyle>
                                            <Grid>
                                                <ListBox Style="{StaticResource MyNet.Styles.ListBox.Cards}"
                                                         ItemContainerStyle="{StaticResource Scorer.Styles.ListBoxItem.Stage.Alternate.DropDown}"
                                                         ItemTemplate="{StaticResource Scorer.DataTemplates.Stage}"
                                                         ItemsSource="{TemplateBinding Appointments}"
                                                         SelectionMode="Extended">

                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel IsItemsHost="True" />
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                </ListBox>
                                            </Grid>
                                        </my:DropDownButton>
                                        <Button x:Name="PART_AddButton"
                                                Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                                Grid.Column="1"
                                                Margin="{StaticResource MyNet.Margins.Default}"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Content="{my:ToolIcon Kind=Plus}"
                                                Visibility="Hidden" />
                                        <ListBox VerticalAlignment="Stretch"
                                                 ItemContainerStyle="{StaticResource Scorer.Styles.ListBoxItem.Stage.Alternate}"
                                                 ItemsSource="{TemplateBinding Appointments}"
                                                 SelectionMode="Extended"
                                                 Visibility="{Binding Appointments.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotOne}}">
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <DockPanel IsItemsHost="True" />
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                        </ListBox>
                                    </Grid>
                                </my:Ripple>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Owner.DatesSelectionMode, RelativeSource={RelativeSource Self}}" Value="None">
                                <Setter Property="my:RippleAssist.IsDisabled" Value="True" />
                            </DataTrigger>
                            <Trigger Property="IsNow" Value="True">
                                <Setter TargetName="DayText" Property="TextElement.FontWeight" Value="Bold" />
                                <Setter TargetName="DayText" Property="TextElement.Foreground" Value="{Binding Path=(my:HeaderAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter TargetName="base" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PART_AddButton" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Owner.AddCommand, RelativeSource={RelativeSource Self}, Converter={x:Static my:NullToBooleanConverter.TrueIfNull}}" Value="True">
                                <Setter TargetName="PART_AddButton" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent}" />
            <Style.Triggers>
                <Trigger Property="IsNow" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
                </Trigger>
                <Trigger Property="IsLastOfWeek" Value="True">
                    <Setter Property="Background" Value="{my:BrushBinding SelfPath=Foreground, Opacity=0.05}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Scorer.Styles.ContentControl.Calendar.DaysByYear.Week" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource MyNet.Styles.ContentControl.Calendar.DaysByYear.Week}">
            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Checked}" />
        </Style>

    </UserControl.Resources>

    <my:CalendarDaysByYear my:HeaderAssist.Background="Transparent"
                           AddCommand="{Binding AddToDateCommand}"
                           Appointments="{Binding Wrappers}"
                           AppointmentsDisplayMode="Cell"
                           AppointmentsMargin="0"
                           BorderThickness="0"
                           CalendarItemStyle="{StaticResource Scorer.Styles.CalendarItem}"
                           ColumnHeaderTemplate="{StaticResource Scorer.DataTemplates.ColumnHeader}"
                           DatesSelectionMode="None"
                           DisplayDate="{Binding Display.Mode.DisplayDate}"
                           LastDayOfWeekIsHighlighted="True"
                           ScrollViewer.VerticalScrollBarVisibility="Auto"
                           SelectionMode="Extended"
                           ShowHeader="False"
                           WeekStyle="{StaticResource Scorer.Styles.ContentControl.Calendar.DaysByYear.Week}" />
</UserControl>
