<UserControl x:Class="MyClub.Scorer.Wpf.Views.BuildAssistant.LeagueBuildAssistantParametersView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:edition="clr-namespace:MyClub.Scorer.Wpf.Views.Edition"
                  xmlns:editionVm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Edition"
                  xmlns:enums="clr-namespace:MyClub.Scorer.Domain.Enums;assembly=MyClub.Scorer.Domain"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:my="http://mynet.com/xaml/themes"
                  xmlns:units="clr-namespace:MyNet.Utilities.Units;assembly=MyNet.Utilities"
                  xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.BuildAssistant"
                  xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.BuildAssistant"
                  d:DataContext="{d:DesignInstance Type=vm:LeagueBuildAssistantParametersViewModel}"
                  mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <my:DynamicScrollViewer>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="340" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="170" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Algorithm -->
                <my:SimpleStackPanel>

                    <!-- Type -->
                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                              my:HeaderAssist.Alignment="Top"
                              my:HeaderAssist.HorizontalAlignment="Left"
                              my:HeaderAssist.Size="40"
                              Header="{my:Resource WhichAlgorithm}">
                        <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Default}">
                            <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}" SelectedValue="{Binding Algorythm}" SelectedValuePath="DataContext">
                                <ListBoxItem Width="160" my:IconAssist.Icon="{my:Icon Kind=AccountSwitch, Size=20}" DataContext="{x:Static enums:ChampionshipAlgorithm.RoundRobin}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBlock Text="{my:Resource ChampionshipAlgorithmRoundRobin}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource ChampionshipAlgorithmRoundRobin}"
                                                           PopupContent="{my:Resource RoundRobinDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </ListBoxItem>
                                <ListBoxItem Width="160"
                                             my:IconAssist.Icon="{my:MediumIcon Kind=Numeric9Plus}"
                                             DataContext="{x:Static enums:ChampionshipAlgorithm.SwissSystem}"
                                             IsEnabled="{Binding Data.CanUseSwissSystem, Source={StaticResource Proxy}}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBlock Text="{my:Resource ChampionshipAlgorithmSwissSystem}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource ChampionshipAlgorithmSwissSystem}"
                                                           PopupContent="{my:Resource SwissSystemDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </ListBoxItem>
                            </ListBox>
                            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}"
                                       Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                       Text="{my:Resource CannotUseSwissSystem}"
                                       Visibility="{Binding CanUseSwissSystem, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                        </my:SimpleStackPanel>
                    </GroupBox>

                    <!-- Algorithm options -->
                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                              my:HeaderAssist.Alignment="Top"
                              my:HeaderAssist.HorizontalAlignment="Left"
                              my:HeaderAssist.Size="40"
                              Header="{my:Resource NumberOfMatchesBetweenTeams}"
                              Visibility="{Binding Algorythm, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static enums:ChampionshipAlgorithm.RoundRobin}}">
                        <my:SimpleStackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon}" Command="{Binding RemoveMatchBetweenTeamsCommand}" Content="{my:ToolIcon Kind=Minus}" />
                            <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}"
                                     my:ListBoxAssist.IsToggle="True"
                                     ItemsSource="{Binding MatchesBetweenTeams}"
                                     SelectionMode="Multiple">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Toggle}">
                                        <Setter Property="IsEnabled" Value="{Binding IsSelectable}" />
                                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                        <Setter Property="ToolTip" Value="{my:Translation Item, Format='MatchX'}" />
                                        <Setter Property="Width" Value="40" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="{my:Translation Item, Format='MatchXAbbr'}" />
                                            <Label Style="{StaticResource MyNet.Styles.Label.Elevation.Foreground}"
                                                   Width="13"
                                                   Height="13"
                                                   Margin="0 0 -10 -4"
                                                   Padding="0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   my:ThemeAssist.UniformCornerRadius="25"
                                                   Content="{my:Icon Kind=SwapHorizontalBold,
                                                                     Size=12}"
                                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                   ToolTip="{my:Resource InvertTeams}"
                                                   Visibility="{Binding IsSelected, Converter={x:Static my:BooleanToVisibilityConverter.HiddenIfFalse}}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon}" Command="{Binding AddMatchBetweenTeamsCommand}" Content="{my:ToolIcon Kind=Plus}" />
                        </my:SimpleStackPanel>
                    </GroupBox>
                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                              my:HeaderAssist.Alignment="Top"
                              my:HeaderAssist.HorizontalAlignment="Left"
                              my:HeaderAssist.Size="40"
                              Header="{my:Resource NumberOfMatchesByTeam}"
                              Visibility="{Binding Algorythm, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static enums:ChampionshipAlgorithm.SwissSystem}}">
                        <my:NumericUpDown Width="110"
                                          my:HintAssist.IsFloating="False"
                                          my:TextFieldAssist.SuffixText="{my:Resource MatchesOptionalPlural,
                                                                                      Casing=LowerCase}"
                                          Maximum="{Binding NumberOfTeams, Mode=OneWay, Converter={x:Static my:MathConverter.Subtract}, ConverterParameter=1}"
                                          Minimum="1"
                                          Value="{Binding NumberOfMatchesByTeam}" />
                    </GroupBox>
                </my:SimpleStackPanel>

                <!-- Scheduling parameters -->
                <GroupBox Grid.Row="2" my:IconAssist.Icon="{my:MediumIcon Kind=CalendarClock}" Header="{my:Resource SchedulingParameters}">
                    <my:SimpleStackPanel>

                        <!-- Start date -->
                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=CalendarStart}">
                            <my:SimpleStackPanel Orientation="Horizontal">
                                <DatePicker my:HintAssist.Hint="{my:Resource StartDate}" IsEnabled="{Binding AutomaticStartDate, Converter={x:Static my:NotBooleanConverter.Default}}" SelectedDate="{Binding StartDate}" />
                                <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Switch}" IsChecked="{Binding AutomaticStartDate}">
                                    <TextBlock Text="{my:Resource Automatic}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MyNet.Styles.TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AutomaticStartDate}" Value="False">
                                                        <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </ToggleButton>
                            </my:SimpleStackPanel>
                        </GroupBox>

                        <!-- End date -->
                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=CalendarEnd}">
                            <my:SimpleStackPanel Orientation="Horizontal">
                                <DatePicker my:HintAssist.Hint="{my:Resource EndDate}" IsEnabled="{Binding AutomaticEndDate, Converter={x:Static my:NotBooleanConverter.Default}}" SelectedDate="{Binding EndDate}" />
                                <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Switch}" IsChecked="{Binding AutomaticEndDate}">
                                    <TextBlock Text="{my:Resource Automatic}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MyNet.Styles.TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AutomaticEndDate}" Value="False">
                                                        <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </ToggleButton>
                            </my:SimpleStackPanel>
                        </GroupBox>

                        <!-- Default time -->
                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=Clock}">
                            <my:SimpleStackPanel Orientation="Horizontal">
                                <my:TimePicker my:HintAssist.Hint="{my:Resource DefaultTime}" SelectedTime="{my:Time StartTime}" />
                                <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                   my:HeaderAssist.Header="{my:Resource StartTime}"
                                                   PopupContent="{my:Resource StartTimeDescription}"
                                                   ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                            </my:SimpleStackPanel>
                        </GroupBox>

                        <!-- Rest time -->
                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=BedClock}">
                            <my:SimpleStackPanel Orientation="Horizontal">
                                <my:NumericUpDown my:HintAssist.Hint="{my:Resource Rest}" Minimum="0" Value="{my:NullableBinding RestTimeValue}" />
                                <ComboBox Width="{StaticResource MyNet.Widths.Control.Medium}"
                                          SelectedIndex="0"
                                          SelectedValue="{Binding RestTimeUnit}"
                                          SelectedValuePath="DataContext">
                                    <ComboBoxItem Content="{my:Resource TimeUnitSecond}" DataContext="{x:Static units:TimeUnit.Second}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitMinute}" DataContext="{x:Static units:TimeUnit.Minute}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitHour}" DataContext="{x:Static units:TimeUnit.Hour}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitDay}" DataContext="{x:Static units:TimeUnit.Day}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitMonth}" DataContext="{x:Static units:TimeUnit.Month}" />
                                </ComboBox>
                                <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                   my:HeaderAssist.Header="{my:Resource RestTime}"
                                                   PopupContent="{my:Resource RestTimeDescription}"
                                                   ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                            </my:SimpleStackPanel>
                        </GroupBox>

                        <!-- Rotation time -->
                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=ClockEnd}">
                            <my:SimpleStackPanel Orientation="Horizontal">
                                <my:NumericUpDown my:HintAssist.Hint="{my:Resource Rotation}" Minimum="0" Value="{my:NullableBinding RotationTimeValue}" />
                                <ComboBox Width="{StaticResource MyNet.Widths.Control.Medium}"
                                          SelectedIndex="0"
                                          SelectedValue="{Binding RotationTimeUnit}"
                                          SelectedValuePath="DataContext">
                                    <ComboBoxItem Content="{my:Resource TimeUnitSecond}" DataContext="{x:Static units:TimeUnit.Second}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitMinute}" DataContext="{x:Static units:TimeUnit.Minute}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitHour}" DataContext="{x:Static units:TimeUnit.Hour}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitDay}" DataContext="{x:Static units:TimeUnit.Day}" />
                                    <ComboBoxItem Content="{my:Resource TimeUnitMonth}" DataContext="{x:Static units:TimeUnit.Month}" />
                                </ComboBox>
                                <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                   my:HeaderAssist.Header="{my:Resource RotationTime}"
                                                   PopupContent="{my:Resource RotationTimeDescription}"
                                                   ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                            </my:SimpleStackPanel>
                        </GroupBox>
                    </my:SimpleStackPanel>
                </GroupBox>

                <!-- Match format -->
                <GroupBox Grid.Row="4"
                          VerticalAlignment="Top"
                          my:IconAssist.Icon="{my:MediumIcon Kind=TimerSettings}"
                          Header="{my:Resource MatchesFormat}">
                    <edition:EditableMatchFormatView DataContext="{Binding MatchFormat}" />
                </GroupBox>

            </Grid>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="535" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Dates -->
                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Bordered}" my:IconAssist.Icon="{my:MediumIcon Kind=CalendarSearch}" Header="{my:Translation NumberOfMatchdays, Format=XMatchdays, Pluralize=True}">
                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                              my:HeaderAssist.Alignment="Top"
                              my:HeaderAssist.HorizontalAlignment="Left"
                              my:HeaderAssist.Size="40"
                              Header="{my:Resource HowDefineDatesAndTimes}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!-- Method -->
                                <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}" SelectedValue="{Binding DatesSchedulingMethod}" SelectedValuePath="DataContext">
                                    <ListBoxItem Width="160" my:IconAssist.Icon="{my:MediumIcon Kind=CalendarClock}" DataContext="{x:Static editionVm:DatesSchedulingMethod.AsSoonAsPossible}">
                                        <my:SimpleStackPanel Orientation="Horizontal">
                                            <TextBlock Text="{my:Resource AsSoonAsPossible}" />
                                            <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                               my:HeaderAssist.Header="{my:Resource AsSoonAsPossible}"
                                                               PopupContent="{my:Resource DatesSchedulingMethodAsSoonAsPossibleDescription}"
                                                               ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                        </my:SimpleStackPanel>
                                    </ListBoxItem>
                                    <ListBoxItem Width="160" my:IconAssist.Icon="{my:MediumIcon Kind=CalendarCursor}" DataContext="{x:Static editionVm:DatesSchedulingMethod.Manual}">
                                        <my:SimpleStackPanel Orientation="Horizontal">
                                            <TextBlock Text="{my:Resource Manual}" />
                                            <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                               my:HeaderAssist.Header="{my:Resource Manual}"
                                                               PopupContent="{my:Resource DatesSchedulingMethodManualDescription}"
                                                               ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                        </my:SimpleStackPanel>
                                    </ListBoxItem>
                                    <ListBoxItem Width="160" my:IconAssist.Icon="{my:MediumIcon Kind=Magic}" DataContext="{x:Static editionVm:DatesSchedulingMethod.Automatic}">
                                        <my:SimpleStackPanel Orientation="Horizontal">
                                            <TextBlock Text="{my:Resource Automatic}" />
                                            <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                               my:HeaderAssist.Header="{my:Resource Automatic}"
                                                               PopupContent="{my:Resource DatesSchedulingMethodAutomaticDescription}"
                                                               ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                        </my:SimpleStackPanel>
                                    </ListBoxItem>
                                </ListBox>

                                <!-- Patterns -->
                                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Grid.Column="2" Header="{my:MediumIcon Kind=FormatText}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBox my:HintAssist.Hint="{my:Resource Name}" my:HintAssist.IsFloating="True" Text="{Binding NamePattern}" />
                                        <TextBox Width="{StaticResource MyNet.Widths.Control.Medium}"
                                                 my:HintAssist.Hint="{my:Resource ShortName}"
                                                 my:HintAssist.IsFloating="True"
                                                 Text="{Binding ShortNamePattern}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource Patterns}"
                                                           PopupContent="{my:Resource PatternsDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </GroupBox>
                            </Grid>

                            <!-- Method parameters -->
                            <v:DatesSchedulingAsSoonAsPossibleView Grid.Row="2" DataContext="{Binding AsSoonAsPossibleDatesSchedulingViewModel}" Visibility="{Binding Data.DatesSchedulingMethod, Source={StaticResource Proxy}, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static editionVm:DatesSchedulingMethod.AsSoonAsPossible}}" />
                            <v:DatesSchedulingManualView Grid.Row="2" DataContext="{Binding ManualDatesSchedulingViewModel}" Visibility="{Binding Data.DatesSchedulingMethod, Source={StaticResource Proxy}, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static editionVm:DatesSchedulingMethod.Manual}}" />
                            <v:DatesSchedulingAutomaticView Grid.Row="2" DataContext="{Binding AutomaticDatesSchedulingViewModel}" Visibility="{Binding Data.DatesSchedulingMethod, Source={StaticResource Proxy}, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static editionVm:DatesSchedulingMethod.Automatic}}" />
                        </Grid>
                    </GroupBox>
                </GroupBox>

                <!-- Stadiums -->
                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Bordered}"
                          Grid.Row="2"
                          my:IconAssist.Icon="{my:MediumIcon Kind=Stadium}"
                          Header="{my:Resource Stadiums}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="20" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="20" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- Method -->
                        <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}" SelectedValue="{Binding VenuesSchedulingMethod}" SelectedValuePath="DataContext">
                            <ListBoxItem Width="230" my:IconAssist.Icon="{my:MediumIcon Kind=CircleOffOutline}" DataContext="{x:Static vm:VenuesSchedulingMethod.None}">
                                <my:SimpleStackPanel Orientation="Horizontal">
                                    <TextBlock Text="{my:Resource NoAssignVenue}" />
                                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                       my:HeaderAssist.Header="{my:Resource None}"
                                                       PopupContent="{my:Resource VenuesSchedulingMethodNoneDescription}"
                                                       ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                </my:SimpleStackPanel>
                            </ListBoxItem>
                            <ListBoxItem Width="230" my:IconAssist.Icon="{my:MediumIcon Kind=HomeSwap}" DataContext="{x:Static vm:VenuesSchedulingMethod.UseHomeVenue}">
                                <my:SimpleStackPanel Orientation="Horizontal">
                                    <TextBlock Text="{my:Resource UseHomeVenue}" />
                                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                       my:HeaderAssist.Header="{my:Resource UseHomeVenue}"
                                                       PopupContent="{my:Resource VenueSchedulingMethodUseHomeVenueDescription}"
                                                       ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                </my:SimpleStackPanel>
                            </ListBoxItem>
                            <ListBoxItem Width="230"
                                         my:IconAssist.Icon="{my:MediumIcon Kind=CalendarClock}"
                                         DataContext="{x:Static vm:VenuesSchedulingMethod.AsSoonAsPossible}"
                                         Visibility="{Binding Data.DatesSchedulingMethod, Source={StaticResource Proxy}, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static editionVm:DatesSchedulingMethod.AsSoonAsPossible}}">
                                <my:SimpleStackPanel Orientation="Horizontal">
                                    <TextBlock Text="{my:Resource AsSoonAsPossible}" />
                                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                       my:HeaderAssist.Header="{my:Resource AsSoonAsPossible}"
                                                       PopupContent="{my:Resource VenuesSchedulingMethodAsSoonAsPossibleDescription}"
                                                       ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                </my:SimpleStackPanel>
                            </ListBoxItem>
                            <ListBoxItem Width="230" my:IconAssist.Icon="{my:MediumIcon Kind=Magic}" DataContext="{x:Static vm:VenuesSchedulingMethod.Automatic}">
                                <my:SimpleStackPanel Orientation="Horizontal">
                                    <TextBlock Text="{my:Resource Automatic}" />
                                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                       my:HeaderAssist.Header="{my:Resource Automatic}"
                                                       PopupContent="{my:Resource VenuesSchedulingMethodAutomaticDescription}"
                                                       ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                </my:SimpleStackPanel>
                            </ListBoxItem>
                        </ListBox>

                        <Grid Grid.Row="2" Visibility="{Binding DatesSchedulingMethod, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static editionVm:DatesSchedulingMethod.AsSoonAsPossible}}">
                            <my:SimpleStackPanel Orientation="Horizontal">
                                <my:SimpleStackPanel.Visibility>
                                    <Binding Converter="{x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}" Path="VenuesSchedulingMethod">
                                        <Binding.ConverterParameter>
                                            <x:Array Type="{x:Type vm:VenuesSchedulingMethod}">
                                                <x:Static Member="vm:VenuesSchedulingMethod.UseHomeVenue" />
                                                <x:Static Member="vm:VenuesSchedulingMethod.Automatic" />
                                            </x:Array>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </my:SimpleStackPanel.Visibility>
                                <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Switch}" Content="{my:Resource ScheduleVenuesBeforeDates}" IsChecked="{Binding ScheduleVenuesBeforeDates}" />
                                <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                   my:HeaderAssist.Header="{my:Resource ScheduleVenuesBeforeDates}"
                                                   PopupContent="{my:Resource ScheduleVenuesBeforeDatesDescription}"
                                                   ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                            </my:SimpleStackPanel>
                        </Grid>

                        <DockPanel Grid.Row="4" Visibility="{Binding VenuesSchedulingMethod, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static vm:VenuesSchedulingMethod.Automatic}}">
                            <edition:EditableAvailableVenueSchedulingRulesView DataContext="{Binding VenueRules}" />
                        </DockPanel>
                    </Grid>

                </GroupBox>
            </Grid>
        </Grid>
    </my:DynamicScrollViewer>
</UserControl>
