<my:ContentDialog x:Class="MyClub.Scorer.Wpf.Views.BuildAssistant.LeagueBuildAssistantView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:edition="clr-namespace:MyClub.Scorer.Wpf.Views.Edition"
                  xmlns:enums="clr-namespace:MyClub.Scorer.Domain.Enums;assembly=MyClub.Scorer.Domain"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:my="http://mynet.com/xaml/themes"
                  xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.BuildAssistant"
                  xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.BuildAssistant"
                  Style="{StaticResource MyNet.Styles.ContentDialog}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  d:DataContext="{d:DesignInstance Type=vm:LeagueBuildAssistantViewModel}"
                  BusyService="{Binding BusyService, Mode=OneWay}"
                  Header="{my:Resource BuildLeague}"
                  ShowCloseButton="True"
                  mc:Ignorable="d">
    <my:ContentDialog.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </my:ContentDialog.Resources>

    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Key="F5" Command="{Binding Data.ResetCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Data.SaveAndCloseAsyncCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="Esc" Command="{Binding Data.CancelCommand, Source={StaticResource Proxy}}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <my:ContentDialog.Footer>
        <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Style="{StaticResource MyNet.Styles.Button.Reset}" HorizontalAlignment="Right" Command="{Binding ResetCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Validate}" HorizontalAlignment="Right" Command="{Binding SaveAndCloseAsyncCommand}" />
        </my:SimpleStackPanel>
    </my:ContentDialog.Footer>

    <my:DynamicScrollViewer>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="170" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Algorithm -->
                <my:SimpleStackPanel>

                    <!-- Type -->
                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                              my:HeaderAssist.Alignment="Top"
                              my:HeaderAssist.HorizontalAlignment="Left"
                              my:HeaderAssist.Size="40"
                              Header="{my:Resource WhichAlgorithm}">
                        <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Default}">
                            <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}" SelectedValue="{Binding Algorythm}" SelectedValuePath="DataContext">
                                <ListBoxItem Width="160" my:IconAssist.Icon="{my:Icon Kind=AccountSwitch, Size=20}" DataContext="{x:Static enums:ChampionshipAlgorithm.RoundRobin}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBlock Text="{my:Resource ChampionshipAlgorithmRoundRobin}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource ChampionshipAlgorithmRoundRobin}"
                                                           PopupContent="{my:Resource RoundRobinDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </ListBoxItem>
                                <ListBoxItem Width="160"
                                             my:IconAssist.Icon="{my:MediumIcon Kind=Numeric9Plus}"
                                             DataContext="{x:Static enums:ChampionshipAlgorithm.SwissSystem}"
                                             IsEnabled="{Binding Data.CanUseSwissSystem, Source={StaticResource Proxy}}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBlock Text="{my:Resource ChampionshipAlgorithmSwissSystem}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource ChampionshipAlgorithmSwissSystem}"
                                                           PopupContent="{my:Resource SwissSystemDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </ListBoxItem>
                            </ListBox>
                            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}"
                                       Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                       Text="{my:Resource CannotUseSwissSystem}"
                                       Visibility="{Binding CanUseSwissSystem, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                        </my:SimpleStackPanel>
                    </GroupBox>

                    <!-- Algorithm options -->
                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                              my:HeaderAssist.Alignment="Top"
                              my:HeaderAssist.HorizontalAlignment="Left"
                              my:HeaderAssist.Size="40"
                              Header="{my:Resource NumberOfMatchesBetweenTeams}"
                              Visibility="{Binding Algorythm, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static enums:ChampionshipAlgorithm.RoundRobin}}">
                        <my:SimpleStackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon}" Command="{Binding RemoveMatchBetweenTeamsCommand}" Content="{my:ToolIcon Kind=Minus}" />
                            <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}"
                                     my:ListBoxAssist.IsToggle="True"
                                     ItemsSource="{Binding MatchesBetweenTeams}"
                                     SelectionMode="Multiple">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Toggle}">
                                        <Setter Property="IsEnabled" Value="{Binding IsSelectable}" />
                                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                        <Setter Property="ToolTip" Value="{my:Translation Item, Format='MatchX'}" />
                                        <Setter Property="Width" Value="40" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="{my:Translation Item, Format='MatchXAbbr'}" />
                                            <Label Style="{StaticResource MyNet.Styles.Label.Elevation.Foreground}"
                                                   Width="13"
                                                   Height="13"
                                                   Margin="0 0 -10 -4"
                                                   Padding="0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   my:ThemeAssist.UniformCornerRadius="25"
                                                   Content="{my:Icon Kind=SwapHorizontalBold,
                                                                     Size=12}"
                                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                   ToolTip="{my:Resource InvertTeams}"
                                                   Visibility="{Binding IsSelected, Converter={x:Static my:BooleanToVisibilityConverter.HiddenIfFalse}}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon}" Command="{Binding AddMatchBetweenTeamsCommand}" Content="{my:ToolIcon Kind=Plus}" />
                        </my:SimpleStackPanel>
                    </GroupBox>
                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                              my:HeaderAssist.Alignment="Top"
                              my:HeaderAssist.HorizontalAlignment="Left"
                              my:HeaderAssist.Size="40"
                              Header="{my:Resource NumberOfMatchesByTeam}"
                              Visibility="{Binding Algorythm, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static enums:ChampionshipAlgorithm.SwissSystem}}">
                        <my:NumericUpDown Width="110"
                                          my:HintAssist.IsFloating="False"
                                          my:TextFieldAssist.SuffixText="{my:Resource MatchesOptionalPlural,
                                                                                      Casing=LowerCase}"
                                          Maximum="{Binding NumberOfTeams, Mode=OneWay, Converter={x:Static my:MathConverter.Subtract}, ConverterParameter=1}"
                                          Minimum="1"
                                          Value="{Binding NumberOfMatchesByTeam}" />
                    </GroupBox>
                </my:SimpleStackPanel>

                <!-- Scheduling parameters -->
                <GroupBox Grid.Row="2" my:IconAssist.Icon="{my:MediumIcon Kind=CalendarClock}" Header="{my:Resource SchedulingParameters}">
                    <edition:EditableSchedulingParametersView DataContext="{Binding SchedulingParameters}" />
                </GroupBox>

                <!-- Match format -->
                <GroupBox Grid.Row="4"
                          VerticalAlignment="Top"
                          my:IconAssist.Icon="{my:MediumIcon Kind=TimerSettings}"
                          Header="{my:Resource MatchesFormat}">
                    <edition:EditableMatchFormatView DataContext="{Binding MatchFormat}" />
                </GroupBox>

            </Grid>

            <!-- Dates -->
            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Bordered}"
                      Grid.Column="2"
                      my:IconAssist.Icon="{my:MediumIcon Kind=CalendarSearch}"
                      Header="{my:Translation NumberOfMatchdays,
                                              Format=XMatchdays,
                                              Plural=True}">
                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}"
                          my:HeaderAssist.Alignment="Top"
                          my:HeaderAssist.HorizontalAlignment="Left"
                          my:HeaderAssist.Size="40"
                          Header="{my:Resource HowDefineDatesAndTimes}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="20" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Method -->
                            <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}" SelectedValue="{Binding BuildMethod}" SelectedValuePath="DataContext">
                                <ListBoxItem Width="160" my:IconAssist.Icon="{my:MediumIcon Kind=CalendarClock}" DataContext="{x:Static vm:BuildMethod.AsSoonAsPossible}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBlock Text="{my:Resource AsSoonAsPossible}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource AsSoonAsPossible}"
                                                           PopupContent="{my:Resource BuildMethodAsSoonAsPossibleDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </ListBoxItem>
                                <ListBoxItem Width="160" my:IconAssist.Icon="{my:MediumIcon Kind=CalendarCursor}" DataContext="{x:Static vm:BuildMethod.Manual}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBlock Text="{my:Resource Manual}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource Manual}"
                                                           PopupContent="{my:Resource BuildMethodDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </ListBoxItem>
                                <ListBoxItem Width="160" my:IconAssist.Icon="{my:MediumIcon Kind=Magic}" DataContext="{x:Static vm:BuildMethod.Automatic}">
                                    <my:SimpleStackPanel Orientation="Horizontal">
                                        <TextBlock Text="{my:Resource Automatic}" />
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}"
                                                           my:HeaderAssist.Header="{my:Resource Automatic}"
                                                           PopupContent="{my:Resource BuildMethodAutomaticDescription}"
                                                           ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                    </my:SimpleStackPanel>
                                </ListBoxItem>
                            </ListBox>

                            <!-- Patterns -->
                            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Grid.Column="2" Header="{my:MediumIcon Kind=FormatText}">
                                <my:SimpleStackPanel Orientation="Horizontal">
                                    <TextBox my:HintAssist.Hint="{my:Resource Name}" my:HintAssist.IsFloating="True" Text="{Binding NamePattern}" />
                                    <TextBox Width="{StaticResource MyNet.Widths.Control.Medium}"
                                             my:HintAssist.Hint="{my:Resource ShortName}"
                                             my:HintAssist.IsFloating="True"
                                             Text="{Binding ShortNamePattern}" />
                                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}" my:HeaderAssist.Header="{my:Resource Patterns}" PopupContent="{my:Resource PatternsDescription}" ToggleContent="{my:ToolIcon Kind=InformationCircle}" />
                                </my:SimpleStackPanel>
                            </GroupBox>
                        </Grid>

                        <!-- Method parameters -->
                        <v:BuildAsSoonAsPossibleView Grid.Row="2" DataContext="{Binding BuildAsSoonAsPossibleViewModel}" Visibility="{Binding Data.BuildMethod, Source={StaticResource Proxy}, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static vm:BuildMethod.AsSoonAsPossible}}" />
                        <v:BuildManualView Grid.Row="2" DataContext="{Binding BuildManualViewModel}" Visibility="{Binding Data.BuildMethod, Source={StaticResource Proxy}, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static vm:BuildMethod.Manual}}" />
                        <v:BuildAutomaticView Grid.Row="2" DataContext="{Binding BuildAutomaticViewModel}" Visibility="{Binding Data.BuildMethod, Source={StaticResource Proxy}, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static vm:BuildMethod.Automatic}}" />
                    </Grid>
                </GroupBox>
            </GroupBox>

            <!-- Stadiums -->
            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Bordered}"
                      Grid.RowSpan="3"
                      Grid.Column="2"
                      my:IconAssist.Icon="{my:MediumIcon Kind=Stadium}"
                      Header="{my:Resource Stadiums}"
                      Visibility="Collapsed" />
        </Grid>
    </my:DynamicScrollViewer>
</my:ContentDialog>
