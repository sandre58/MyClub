<UserControl x:Class="MyClub.Scorer.Wpf.Views.Edition.MatchEditionEventsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:MyClub.Scorer.Wpf.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.Edition"
             xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Edition"
             d:DataContext="{d:DesignInstance Type=vm:MatchEditionViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <Style x:Key="Scorer.Styles.ListBoxItem.Player" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Card}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Small.Vertical}" />
            <Setter Property="Padding" Value="{StaticResource MyNet.Margins.Default}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="my:IconAssist.Alignment" Value="Left" />
            <Setter Property="my:IconAssist.Margin" Value="{StaticResource MyNet.Margins.Default.Right}" />
            <Setter Property="my:IconAssist.Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
            <Setter Property="my:ListBoxItemAssist.IsMouseOverBackground" Value="{my:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Hovered}}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedBackground" Value="{DynamicResource MyNet.Brushes.Primary}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
            <Setter Property="my:ListBoxItemAssist.IsSelectedForeground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
            <Setter Property="my:ListBoxItemAssist.ShowSelection" Value="True" />
            <Setter Property="my:ThemeAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        </Style>

        <Style x:Key="Scorer.Styles.ListBox.Players" TargetType="{x:Type ListBox}" BasedOn="{StaticResource MyNet.Styles.ListBox.Cards}">
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource Scorer.Styles.ListBoxItem.Player}" />
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Player.Small}"
                                               Width="28"
                                               Height="28"
                                               DataContext="{Binding}" />

                            <StackPanel Grid.Column="2">
                                <TextBlock FontWeight="DemiBold" Text="{my:Translation LastName, Casing=AllCaps}" />
                                <TextBlock Text="{Binding FirstName}" />
                            </StackPanel>

                            <my:Card Style="{StaticResource MyNet.Styles.Card.Elevation}"
                                     Grid.Column="4"
                                     Width="13"
                                     Height="18"
                                     Margin="{StaticResource MyNet.Margins.Medium.Horizontal}"
                                     Padding="0"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Background="{Binding DataContext.Color, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={x:Static c:CardToBrushConverter.Default}}"
                                     Visibility="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1" IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MaxHeight" Value="400" />
            <Setter Property="my:ItemsControlAssist.SortingProperty" Value="LastName" />
        </Style>

        <DataTemplate x:Key="Scorer.DataTemplates.Card.Edition" DataType="{x:Type vm:EditableCardViewModel}">
            <Grid Width="450">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Color -->
                <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}"
                         Grid.Row="0"
                         HorizontalAlignment="Stretch"
                         my:IconAssist.Alignment="Top"
                         my:IconAssist.Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                         ItemsSource="{Binding Data.MatchRules.Cards, Source={StaticResource Proxy}, Mode=OneWay}"
                         SelectedValue="{Binding Color, UpdateSourceTrigger=PropertyChanged}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="{Binding Data.MatchRules.Cards.Count, Source={StaticResource Proxy}}" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Toggle}">
                            <Setter Property="my:ListBoxItemAssist.IsSelectedBackground" Value="{Binding Converter={x:Static c:CardToBrushConverter.Default}}" />
                            <Setter Property="my:ListBoxItemAssist.IsSelectedForeground" Value="{my:BrushBinding SelfPath=(my:ListBoxItemAssist.IsSelectedBackground), Contrast=True}" />
                            <Setter Property="my:ThemeAssist.IsCheckedBackground" Value="{Binding Converter={x:Static c:CardToBrushConverter.Default}}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="my:ThemeAssist.IsCheckedBackground" Value="{Binding Path=(my:ListBoxItemAssist.IsSelectedBackground), RelativeSource={RelativeSource Self}, Converter={x:Static my:BrushConverter.Darken}, ConverterParameter=2}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <my:SimpleStackPanel>
                                <my:Card Width="20"
                                         Height="30"
                                         Padding="0"
                                         HorizontalAlignment="Center"
                                         Background="{Binding Path=(my:ThemeAssist.IsCheckedBackground), RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" />
                                <TextBlock HorizontalAlignment="Center" Text="{my:Translation}" />
                            </my:SimpleStackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!-- Minute -->
                <DockPanel Grid.Row="2">
                    <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Icon}"
                                  Content="{my:MediumIcon Kind=Stopwatch}"
                                  DockPanel.Dock="Left"
                                  IsChecked="{Binding MinuteIsEnabled}"
                                  ToolTip="{my:Resource MinuteIsEnabled}" />
                    <my:NumericUpDown Width="70"
                                      DockPanel.Dock="Right"
                                      IsEnabled="{Binding MinuteIsEnabled}"
                                      Maximum="1000"
                                      Minimum="0"
                                      Value="{my:NullableBinding Minute}" />
                    <Slider Style="{StaticResource MyNet.Styles.Slider.Discrete}"
                            Margin="{StaticResource MyNet.Margins.Medium.Horizontal}"
                            HorizontalAlignment="Stretch"
                            IsEnabled="{Binding MinuteIsEnabled}"
                            Maximum="{Binding Data.MatchFormat.EffectiveTime, Source={StaticResource Proxy}}"
                            Minimum="0"
                            TickFrequency="5"
                            TickPlacement="TopLeft"
                            Value="{my:NullableBinding Minute}" />
                </DockPanel>

                <!-- Player -->
                <DockPanel Grid.Row="4">
                    <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Filled}"
                                  Margin="{StaticResource MyNet.Margins.Small.Bottom}"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch"
                                  my:IconAssist.Icon="{my:MediumIcon Kind=CircleOffOutline}"
                                  my:IconAssist.Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                  Command="{Binding ClearPlayerCommand}"
                                  Content="{my:Resource NoPlayer}"
                                  DockPanel.Dock="Top"
                                  FontStyle="Italic"
                                  IsChecked="{Binding Player, Mode=OneWay, Converter={x:Static my:NullToBooleanConverter.TrueIfNull}}"
                                  Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                    <ListBox Style="{StaticResource Scorer.Styles.ListBox.Players}" ItemsSource="{Binding Tag.Team.Players, RelativeSource={RelativeSource AncestorType={x:Type my:DropDownButton}}}" SelectedItem="{Binding Player}" />
                </DockPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Scorer.DataTemplates.Card" DataType="{x:Type vm:EditableCardViewModel}">
            <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Filled.Custom}"
                               Margin="{StaticResource MyNet.Margins.Small.Bottom}"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Stretch"
                               Background="{Binding Color, Converter={x:Static c:CardToBrushConverter.Default}}"
                               DropDownButtonOrientation="Right"
                               PlacementMode="RightAndAlignMiddles"
                               PopupContent="{Binding}"
                               PopupContentTemplate="{StaticResource Scorer.DataTemplates.Card.Edition}"
                               StaysOpen="True"
                               Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                               ToggleContent="{Binding}">
                <my:DropDownButton.ToggleContentTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Minute -->
                            <StackPanel HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal"
                                        Visibility="{Binding MinuteIsEnabled, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{Binding Minute}" />
                                <TextBlock Text="'" />
                            </StackPanel>

                            <!-- Icon -->
                            <my:Card Style="{StaticResource MyNet.Styles.Card.Elevation}"
                                     Grid.Column="2"
                                     Width="13"
                                     Height="18"
                                     Padding="0"
                                     HorizontalAlignment="Center"
                                     Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type my:DropDownButton}}, Converter={x:Static my:BrushConverter.Darken}, ConverterParameter=2}" />

                            <!-- Ghost -->
                            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Ghost}"
                                       Grid.Column="4"
                                       Text="{my:Resource NoPlayer}"
                                       Visibility="{Binding Player, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />

                            <!-- Player -->
                            <TextBlock Grid.Column="4" Text="{Binding Player.FullName}" Visibility="{Binding Player, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />

                            <!-- Remove -->
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                    Grid.Column="6"
                                    Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                    Command="{Binding Tag.RemoveCardCommand, RelativeSource={RelativeSource AncestorType={x:Type my:DropDownButton}}}"
                                    CommandParameter="{Binding}"
                                    Content="{my:ToolIcon Kind=Trash}"
                                    ToolTip="{my:Resource Remove}" />
                        </Grid>
                    </DataTemplate>
                </my:DropDownButton.ToggleContentTemplate>
            </my:DropDownButton>
        </DataTemplate>

        <DataTemplate x:Key="Scorer.DataTemplates.Opponent" DataType="{x:Type vm:EditableMatchOpponentViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                
                <!-- Team Name -->
                <TextBlock Text="{Binding Team.Name}" HorizontalAlignment="Center" Style="{StaticResource MyNet.Styles.TextBlock.Title}" />

                <!-- Team Logo -->
                <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}" Grid.Row="2"
                                   Width="100"
                                   Height="100"
                                   DataContext="{Binding Team}"
                                   Validation.ErrorTemplate="{x:Null}" />

                <!-- Cards -->
                <DockPanel Grid.Row="4">
                    <DockPanel Margin="{StaticResource MyNet.Margins.Small.Bottom}" DockPanel.Dock="Top">
                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Filled}"
                                           HorizontalContentAlignment="Stretch"
                                           my:ThemeAssist.CornerRadius="{StaticResource MyNet.CornerRadius.Container.Right}"
                                           DockPanel.Dock="Right"
                                           DropDownButtonOrientation="Right"
                                           IsPopupOpen="{Binding NewCardIsEditing}"
                                           PlacementMode="RightAndAlignMiddles"
                                           PopupContent="{Binding NewCard, Mode=OneWay}"
                                           PopupContentTemplate="{StaticResource Scorer.DataTemplates.Card.Edition}"
                                           StaysOpen="True"
                                           Tag="{Binding}" />
                        <ItemsControl ItemsSource="{Binding Data.MatchRules.Cards, Source={StaticResource Proxy}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding Data.MatchRules.Cards.Count, Source={StaticResource Proxy}}" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button x:Name="button"
                                            Style="{StaticResource MyNet.Styles.Button.Filled}"
                                            Margin="0 0 1 0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            my:IconAssist.Icon="{my:ToolIcon Kind=Plus}"
                                            my:ThemeAssist.CornerRadius="0"
                                            Command="{Binding DataContext.AddCardCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="{my:Translation}">
                                        <DockPanel>
                                            <my:Card Style="{StaticResource MyNet.Styles.Card.Elevation}"
                                                     Width="13"
                                                     Height="18"
                                                     Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                                     Padding="0"
                                                     HorizontalAlignment="Left"
                                                     Background="{Binding Converter={x:Static c:CardToBrushConverter.Default}}"
                                                     DockPanel.Dock="Left" />
                                            <TextBlock Text="{my:Translation}" />
                                        </DockPanel>
                                    </Button>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                            <Setter TargetName="button" Property="my:ThemeAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Container.Left}" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DockPanel>
                    <ItemsControl my:ItemsControlAssist.SortingProperty="Minute" ItemTemplate="{StaticResource Scorer.DataTemplates.Card}" ItemsSource="{Binding Cards}" />
                </DockPanel>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid Grid.Row="2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ContentControl Content="{Binding Home}" ContentTemplate="{StaticResource Scorer.DataTemplates.Opponent}" />
        <ContentControl Grid.Column="2" Content="{Binding Away}" ContentTemplate="{StaticResource Scorer.DataTemplates.Opponent}" />
    </Grid>


</UserControl>
