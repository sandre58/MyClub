<my:ContentDialog x:Class="MyClub.Scorer.Wpf.Views.Edition.MatchesEditionView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:ctrl="clr-namespace:MyClub.Scorer.Wpf.Controls"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:my="http://mynet.com/xaml/themes"
                  xmlns:units="clr-namespace:MyNet.Utilities.Units;assembly=MyNet.Utilities"
                  xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Edition"
                  Style="{StaticResource MyNet.Styles.ContentDialog}"
                  Width="550"
                  Height="200"
                  d:DataContext="{d:DesignInstance Type=vm:MatchesEditionViewModel}"
                  BusyService="{Binding BusyService, Mode=OneWay}"
                  mc:Ignorable="d">
    <my:ContentDialog.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </my:ContentDialog.Resources>

    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Data.SaveAndCloseAsyncCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="Esc" Command="{Binding Data.CancelCommand, Source={StaticResource Proxy}}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <my:ContentDialog.Footer>
        <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Style="{StaticResource MyNet.Styles.Button.Reset}" HorizontalAlignment="Right" Command="{Binding ResetCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Cancel}" HorizontalAlignment="Right" Command="{Binding CancelCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Validate}" HorizontalAlignment="Right" Command="{Binding SaveAndCloseAsyncCommand}" />
        </my:SimpleStackPanel>
    </my:ContentDialog.Footer>

    <my:ContentDialog.Header>
        <my:SimpleStackPanel VerticalAlignment="Center" Orientation="Horizontal">
            <TextBlock Text="{my:Translation Matches.Count, Format=XSelectedMatches, Plural=True}" />
            <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.MouseOver.Foreground}" PlacementMode="BottomAndAlignCentres" Visibility="{Binding Matches.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                <my:DropDownButton.ToggleContent>
                    <my:Icon Kind="InfoCircle" />
                </my:DropDownButton.ToggleContent>
                <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}"
                              Width="400"
                              AlternationCount="2"
                              ItemsSource="{Binding Matches}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="border" Padding="{StaticResource MyNet.Margins.Small}">
                                <ctrl:MatchControl Style="{StaticResource Scorer.Styles.MatchControl.Small}" IsEnabled="False" Match="{Binding}" />
                            </Border>
                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter TargetName="border" Property="Background" Value="{my:BrushBinding InheritPath=(TextElement.Foreground), Opacity=0.03}" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </my:DropDownButton>
        </my:SimpleStackPanel>
    </my:ContentDialog.Header>

    <my:SimpleStackPanel>

        <!--  Date  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=CalendarOutline}" Visibility="{Binding DateFormula, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static vm:EditionDateFormula.Date}}">
            <my:SimpleStackPanel Orientation="Horizontal">
                <DatePicker Width="110"
                            my:EditionAssist.EmptyText="{my:Resource Ignore}"
                            my:EditionAssist.MultipleEditableValue="{Binding Date, Mode=OneWay}"
                            my:HintAssist.HelperTextMargin="28 -48 0 0"
                            my:HintAssist.Hint="{my:Resource Date}"
                            SelectedDate="{Binding Date.Value, UpdateSourceTrigger=PropertyChanged}" />
                <my:TimePicker Width="90"
                               my:EditionAssist.EmptyText="{my:Resource Ignore}"
                               my:EditionAssist.MultipleEditableValue="{Binding Time, Mode=OneWay}"
                               my:HintAssist.HelperTextMargin="28 -48 0 0"
                               my:HintAssist.Hint="{my:Resource Time}"
                               SelectedTime="{Binding Time.Value, Converter={x:Static my:TimeSpanToDateTimeConverter.Default}, UpdateSourceTrigger=PropertyChanged}" />
            </my:SimpleStackPanel>
        </GroupBox>

        <!--  Offset  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=ClockPlus}" Visibility="{Binding DateFormula, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static vm:EditionDateFormula.Offset}}">
            <my:SimpleStackPanel Orientation="Horizontal">
                <my:NumericUpDown Width="100"
                                  my:EditionAssist.MultipleEditableValue="{Binding Offset, Mode=OneWay}"
                                  my:HintAssist.Hint="{my:Resource RescheduleOf}"
                                  Value="{Binding Offset.Value, UpdateSourceTrigger=PropertyChanged}" />
                <ComboBox Width="110"
                          IsEnabled="{Binding Offset.IsActive}"
                          IsReadOnly="{Binding Offset.IsActive, Converter={x:Static my:NotBooleanConverter.Default}}"
                          SelectedValue="{Binding OffsetUnit, Mode=TwoWay}"
                          SelectedValuePath="DataContext">
                    <ComboBox.Style>
                        <Style BasedOn="{StaticResource MyNet.Styles.ComboBox}" TargetType="{x:Type ComboBox}">
                            <Setter Property="my:HintAssist.IsFloating" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Offset.IsActive}" Value="False">
                                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                    <ComboBoxItem Content="{my:Resource TimeUnitMinute}" DataContext="{x:Static units:TimeUnit.Minute}" />
                    <ComboBoxItem Content="{my:Resource TimeUnitHour}" DataContext="{x:Static units:TimeUnit.Hour}" />
                    <ComboBoxItem Content="{my:Resource TimeUnitDay}" DataContext="{x:Static units:TimeUnit.Day}" />
                    <ComboBoxItem Content="{my:Resource TimeUnitWeek}" DataContext="{x:Static units:TimeUnit.Week}" />
                    <ComboBoxItem Content="{my:Resource TimeUnitMonth}" DataContext="{x:Static units:TimeUnit.Month}" />
                </ComboBox>
            </my:SimpleStackPanel>
        </GroupBox>

        <!--  Stadium  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=Stadium}">
            <my:SimpleStackPanel Orientation="Horizontal">
                <ComboBox Width="300"
                          my:EditionAssist.MultipleEditableValue="{Binding Stadium, Mode=OneWay}"
                          my:HintAssist.HelperTextMargin="28 -30 0 0"
                          my:HintAssist.Hint="{my:Resource Stadium}"
                          my:ItemsControlAssist.SortingProperty="Item.Address.City"
                          my:TextFieldAssist.HasClearButton="True"
                          ItemsSource="{Binding Stadiums}"
                          SelectedValue="{Binding Stadium.Value, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValuePath="Item">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <my:SimpleStackPanel Orientation="Horizontal">
                                <my:PackIcon Tag="{Binding Availability}">
                                    <my:PackIcon.Style>
                                        <Style BasedOn="{StaticResource MyNet.Styles.PackIcon}" TargetType="{x:Type my:PackIcon}">
                                            <Setter Property="Height" Value="16" />
                                            <Setter Property="Width" Value="16" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Unknown">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsAvailable">
                                                    <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Positive}" />
                                                    <Setter Property="Kind" Value="CheckCircle" />
                                                    <Setter Property="ToolTip" Value="{my:Resource StadiumAvailableAtDate}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsBusy">
                                                    <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Negative}" />
                                                    <Setter Property="Kind" Value="CloseCircle" />
                                                    <Setter Property="ToolTip" Value="{my:Resource StadiumUnavailableAtDate}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="IsPartiallyBusy">
                                                    <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Warning}" />
                                                    <Setter Property="Kind" Value="WarningCircle" />
                                                    <Setter Property="ToolTip" Value="{my:Resource StadiumPartiallyUnavailableAtDate}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </my:PackIcon.Style>
                                </my:PackIcon>
                                <TextBlock Text="{Binding Item.DisplayName}" />
                            </my:SimpleStackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Switch}"
                              my:ToggleButtonAssist.OnContent="{my:Resource NeutralVenue}"
                              IsChecked="{Binding NeutralVenue}"
                              Visibility="{Binding Stadium.IsActive, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Disabled}" Text="{my:Resource NeutralVenue}" />
                </ToggleButton>
            </my:SimpleStackPanel>
        </GroupBox>

    </my:SimpleStackPanel>
</my:ContentDialog>
