<UserControl x:Class="MyClub.Scorer.Wpf.Views.Import.StadiumsImportListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:loc="clr-namespace:MyNet.Utilities.Geography;assembly=MyNet.Utilities"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.Import"
             xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Import"
             d:DataContext="{d:DesignInstance Type=vm:StadiumsImportViewModel}"
             mc:Ignorable="d">

    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <Style x:Key="DataGridRowStyle" BasedOn="{StaticResource MyNet.Styles.DataGridRow}" TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Item.Import}" Value="False">
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="EnumMenuItemStyle" BasedOn="{StaticResource MyNet.Styles.MenuItem}" TargetType="{x:Type MenuItem}">
            <Setter Property="CommandParameter" Value="{Binding Value}" />
            <Setter Property="Header" Value="{Binding Display}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                    <Setter Property="Header" Value="{my:Resource None}" />
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                    <Setter Property="FontStyle" Value="Italic" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ContextMenu x:Key="DataGridContextMenu">

            <!--  Mode  -->
            <MenuItem Command="{Binding ImportCommand}" Header="{my:Resource Import}" />
            <MenuItem Command="{Binding DoNotImportCommand}" Header="{my:Resource DoNotImport}" />

        </ContextMenu>

    </UserControl.Resources>

    <DockPanel>

        <!--  Filters  -->
        <DockPanel Margin="{StaticResource MyNet.Margins.Medium}" DockPanel.Dock="Top">
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource Scorer.DataTemplates.List.Count}" DockPanel.Dock="Right" />
            <v:StadiumsImportSpeedFiltersView DataContext="{Binding Filters}" />
        </DockPanel>

        <DataGrid AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  ContextMenu="{StaticResource DataGridContextMenu}"
                  FrozenColumnCount="4"
                  HeadersVisibility="All"
                  ItemsSource="{Binding Wrappers}"
                  MinRowHeight="50"
                  RowHeaderWidth="45"
                  RowStyle="{StaticResource DataGridRowStyle}"
                  SelectionMode="Extended">
            <DataGrid.Resources>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                </Style>
            </DataGrid.Resources>
            <i:Interaction.Behaviors>
                <my:DataGridSelectionBehavior SelectedItems="{Binding SelectedRows}" />
            </i:Interaction.Behaviors>
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <my:PackIcon Width="25"
                                 Height="25"
                                 HorizontalAlignment="Center"
                                 Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                 Kind="Warning"
                                 Tag="{Binding DataContext.Warnings, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                 Visibility="{Binding DataContext.HasWarnings, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Converter={x:Static my:BooleanToVisibilityConverter.HiddenIfFalse}}">
                        <my:PackIcon.ToolTip>
                            <ToolTip>
                                <ItemsControl ItemsSource="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType={x:Type ToolTip}}}" />
                            </ToolTip>
                        </my:PackIcon.ToolTip>
                    </my:PackIcon>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                <my:DataGridCheckBoxColumn Binding="{Binding Item.Import, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource Scorer.Styles.CheckBox.Embedded.DataGrid.Import.Edition}" ElementStyle="{StaticResource Scorer.Styles.CheckBox.Embedded.DataGrid.Import}" />
                <my:DataGridTextColumn Width="200" Binding="{Binding Item.Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Name}" />
                <my:DataGridComboBoxColumn Width="110"
                                           Header="{my:Resource Ground}"
                                           ItemsSource="{my:EnumSource EnumType={x:Type enums:Ground}}"
                                           SelectedValueBinding="{Binding Item.Ground}"
                                           SelectedValuePath="Value" />
                <my:DataGridTextColumn Width="250" Binding="{Binding Item.Address, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Street}" />
                <my:DataGridTextColumn Width="100" Binding="{Binding Item.PostalCode, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource PostalCode}" />
                <my:DataGridTextColumn Width="150" Binding="{Binding Item.City, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource City}" />
                <my:DataGridComboBoxColumn Width="120"
                                           Header="{my:Resource Country}"
                                           IsEditable="True"
                                           ItemsSource="{my:EnumerationSource EnumType={x:Type loc:Country},
                                                                              OrderByDisplay=True}"
                                           SelectedValueBinding="{Binding Item.Country}"
                                           SelectedValuePath="Value" />
                <my:DataGridTextColumn Width="80" Binding="{Binding Item.Longitude, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Longitude}" />
                <my:DataGridTextColumn Width="*" Binding="{Binding Item.Latitude, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Latitude}" />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
