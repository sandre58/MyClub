<ToolBar x:Class="MyClub.Scorer.Wpf.Views.SchedulePage.MatchToolBar"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:ctrl="clr-namespace:MyClub.Scorer.Wpf.Controls"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:entities="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:my="http://mynet.com/xaml/themes"
         xmlns:sys="clr-namespace:System;assembly=mscorlib"
         x:Name="local"
         Style="{StaticResource MyNet.Styles.ToolBar.Tools}"
         d:DataContext="{d:DesignInstance Type=entities:MatchViewModel}"
         d:DesignHeight="450"
         d:DesignWidth="800"
         mc:Ignorable="d">
    <ToolBar.Resources>
        <my:BindingProxy x:Key="MatchProxy" Data="{Binding}" />
        <my:BindingProxy x:Key="LocalProxy" Data="{Binding ElementName=local}" />

        <sys:Int32 x:Key="One">1</sys:Int32>
        <sys:Int32 x:Key="Two">2</sys:Int32>
        <sys:Int32 x:Key="Five">5</sys:Int32>
        <sys:Int32 x:Key="Ten">10</sys:Int32>
        <sys:Int32 x:Key="Fifteen">15</sys:Int32>
        <sys:Int32 x:Key="Thirty">30</sys:Int32>
    </ToolBar.Resources>

    <Button Command="{Binding EditCommand}" Content="{my:ToolIcon Kind=Edit}" ToolTip="{my:Resource Edit}" />

    <my:DropDownButton x:Name="DropDownButton"
                       PopupPadding="0"
                       ShowDropDownButton="False"
                       StaysOpen="True"
                       ToggleContent="{my:ToolIcon Kind=DotsVertical}">
        <my:Submenu>

            <MenuItem Header="{my:Resource Reschedule}" Icon="{my:ToolIcon Kind=ClockPlus}" IsEnabled="{Binding CanBeRescheduled}">
                <MenuItem Command="{Binding RescheduleAutomaticCommand}" Header="{my:Resource Automatic}" Icon="{my:ToolIcon Kind=Magic}" />
                <MenuItem Command="{Binding RescheduleXMinutesCommand}" CommandParameter="{StaticResource Five}" Header="{my:Translation Source={StaticResource Five}, Format=TimeSpanMinute, Pluralize=True}">
                    <MenuItem.Icon>
                        <Grid>
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Foreground}"
                                   Width="16"
                                   Height="16"
                                   Padding="0"
                                   Content="{StaticResource Five}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   FontWeight="Bold" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding RescheduleXMinutesCommand}" CommandParameter="{StaticResource Ten}" Header="{my:Translation Source={StaticResource Ten}, Format=TimeSpanMinute, Pluralize=True}">
                    <MenuItem.Icon>
                        <Grid>
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Foreground}"
                                   Width="16"
                                   Height="16"
                                   Padding="0"
                                   Content="{StaticResource Ten}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   FontWeight="Bold" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding RescheduleXMinutesCommand}" CommandParameter="{StaticResource Fifteen}" Header="{my:Translation Source={StaticResource Fifteen}, Format=TimeSpanMinute, Pluralize=True}">
                    <MenuItem.Icon>
                        <Grid>
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Foreground}"
                                   Width="16"
                                   Height="16"
                                   Padding="0"
                                   Content="{StaticResource Fifteen}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   FontWeight="Bold" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding RescheduleXMinutesCommand}" CommandParameter="{StaticResource Thirty}" Header="{my:Translation Source={StaticResource Thirty}, Format=TimeSpanMinute, Pluralize=True}">
                    <MenuItem.Icon>
                        <Grid>
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Foreground}"
                                   Width="16"
                                   Height="16"
                                   Padding="0"
                                   Content="{StaticResource Thirty}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   FontWeight="Bold" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding RescheduleXHoursCommand}" CommandParameter="{StaticResource One}" Header="{my:Translation Source={StaticResource One}, Format=TimeSpanHour, Pluralize=True}">
                    <MenuItem.Icon>
                        <Grid>
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Foreground}"
                                   Width="16"
                                   Height="16"
                                   Padding="0"
                                   Content="{StaticResource One}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   FontWeight="Bold" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding RescheduleXHoursCommand}" CommandParameter="{StaticResource Two}" Header="{my:Translation Source={StaticResource Two}, Format=TimeSpanHour, Pluralize=True}">
                    <MenuItem.Icon>
                        <Grid>
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Foreground}"
                                   Width="16"
                                   Height="16"
                                   Padding="0"
                                   Content="{StaticResource Two}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   FontWeight="Bold" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Height="50"
                          my:RippleAssist.Feedback="Transparent"
                          my:ThemeAssist.IsMouseOverBackground="Transparent"
                          Header="{Binding Data.RescheduleCommand, Source={StaticResource MatchProxy}}"
                          HeaderTemplate="{StaticResource Scorer.DataTemplates.Reschedule}"
                          Icon="{my:ToolIcon Kind=ClockEdit}" />
            </MenuItem>
            <MenuItem Command="{Binding InvertTeamsCommand}" Header="{my:Resource InvertTeams}" Icon="{my:ToolIcon Kind=SwapHorizontal}" />
            <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}" />
            <MenuItem Header="{my:Resource Update}" Icon="{my:ToolIcon Kind=TimerRefreshOutline}">
                <MenuItem Command="{Binding ResetCommand}" Header="{my:Resource Reset}" Icon="{my:ToolIcon Kind=ProgressClock}" />
                <MenuItem Command="{Binding StartCommand}" Header="{my:Resource Start}" Icon="{my:ToolIcon Kind=ProgressHelper}" />
                <MenuItem Command="{Binding SuspendCommand}" Header="{my:Resource Suspend}" Icon="{my:ToolIcon Kind=ProgressAlert}" />
                <MenuItem Command="{Binding FinishCommand}" Header="{my:Resource Finish}" Icon="{my:ToolIcon Kind=ProgressCheck}" />
                <MenuItem Command="{Binding PostponeCommand}" Header="{my:Resource Postpone}" Icon="{my:ToolIcon Kind=ProgressQuestion}" />
                <MenuItem Command="{Binding CancelCommand}" Header="{my:Resource Cancel}" Icon="{my:ToolIcon Kind=ProgressClose}" />
            </MenuItem>
            <MenuItem Command="{Binding RandomizeCommand}" Header="{my:Resource Randomize}" Icon="{my:ToolIcon Kind=Counter}" />
            <MenuItem Header="{my:Resource DoWithdraw}" Icon="{my:ToolIcon Kind=Close}" IsEnabled="{Binding CanBeWithdraw}">
                <MenuItem Command="{Binding Home.DoWithdrawCommand}" Header="{my:Resource HomeTeam}" Icon="{my:ToolIcon Kind=Home}" />
                <MenuItem Command="{Binding Away.DoWithdrawCommand}" Header="{my:Resource AwayTeam}" Icon="{my:ToolIcon Kind=Plane}" />
            </MenuItem>
            <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}">
                <Separator.Visibility>
                    <MultiBinding Converter="{x:Static my:MultipleBooleanToVisibilityConverter.AndCollapse}">
                        <Binding Converter="{x:Static my:NullToBooleanConverter.FalseIfNull}" Path="Data.SelectFixtureMatchesCommand" Source="{StaticResource LocalProxy}" />
                        <Binding Converter="{x:Static my:NullToBooleanConverter.FalseIfNull}" Path="Fixture" />
                        <Binding Converter="{x:Static my:CountToBooleanConverter.Any}" Path="Fixture.Matches.Count" />
                    </MultiBinding>
                </Separator.Visibility>
            </Separator>
            <MenuItem Command="{Binding Data.SelectFixtureMatchesCommand, Source={StaticResource LocalProxy}}"
                      CommandParameter="{Binding}"
                      Header="{my:Resource SelectFixtureMatches}"
                      Icon="{my:ToolIcon Kind=CheckAll}">
                <MenuItem.Visibility>
                    <MultiBinding Converter="{x:Static my:MultipleBooleanToVisibilityConverter.AndCollapse}">
                        <Binding Converter="{x:Static my:NullToBooleanConverter.FalseIfNull}" Path="Data.SelectFixtureMatchesCommand" Source="{StaticResource LocalProxy}" />
                        <Binding Converter="{x:Static my:NullToBooleanConverter.FalseIfNull}" Path="Fixture" />
                        <Binding Converter="{x:Static my:CountToBooleanConverter.Any}" Path="Fixture.Matches.Count" />
                    </MultiBinding>
                </MenuItem.Visibility>
            </MenuItem>
            <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}" Visibility="{Binding MatchesInConflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
            <MenuItem Background="{DynamicResource MyNet.Brushes.Warning}"
                      Foreground="{my:BrushBinding Background,
                                                   RelativeSource={RelativeSource Self},
                                                   Contrast=True}"
                      Header="{my:Resource Conflicts}"
                      Icon="{my:ToolIcon Kind=Thunder}"
                      Visibility="{Binding MatchesInConflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                <MenuItem Command="{Binding Data.RescheduleConflictsCommand, Source={StaticResource LocalProxy}}"
                          CommandParameter="{Binding}"
                          Header="{my:Resource RescheduleConflicts}"
                          Icon="{my:ToolIcon Kind=CalendarEdit}"
                          Visibility="{Binding Data.RescheduleConflictsCommand, Source={StaticResource LocalProxy}, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                <MenuItem Header="{my:Resource EditConflict}" Icon="{my:ToolIcon Kind=Edit}" ItemsSource="{Binding MatchesInConflicts}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MyNet.Styles.MenuItem}">
                            <Setter Property="Command" Value="{Binding EditCommand}" />
                            <Setter Property="Header" Value="{Binding}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="5" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="5" />
                                                <ColumnDefinition Width="60" />
                                            </Grid.ColumnDefinitions>
                                            <ctrl:TeamControl Style="{StaticResource Scorer.Styles.TeamControl.Horizontal.Small}"
                                                              Grid.Column="0"
                                                              IsEnabled="False"
                                                              ShowShortName="True"
                                                              Team="{Binding Home.Team}" />
                                            <TextBlock Grid.Column="2" Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource VersusAbbr}" />
                                            <ctrl:TeamControl Style="{StaticResource Scorer.Styles.TeamControl.Horizontal.Small}"
                                                              Grid.Column="4"
                                                              IsAway="True"
                                                              IsEnabled="False"
                                                              ShowShortName="True"
                                                              Team="{Binding Away.Team}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}" Visibility="{Binding Data.SelectConflictsCommand, Source={StaticResource LocalProxy}, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                <MenuItem Command="{Binding Data.SelectConflictsCommand, Source={StaticResource LocalProxy}}"
                          CommandParameter="{Binding}"
                          Header="{my:Resource SelectConflicts}"
                          Icon="{my:ToolIcon Kind=CheckAll}"
                          Visibility="{Binding Data.SelectConflictsCommand, Source={StaticResource LocalProxy}, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
            </MenuItem>
        </my:Submenu>
    </my:DropDownButton>
</ToolBar>
