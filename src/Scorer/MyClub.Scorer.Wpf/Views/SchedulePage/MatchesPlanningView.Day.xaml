<UserControl x:Class="MyClub.Scorer.Wpf.Views.SchedulePage.MatchesPlanningDayView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:contracts="clr-namespace:MyNet.UI.ViewModels;assembly=MyNet.UI"
             xmlns:ctrl="clr-namespace:MyClub.Scorer.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.SchedulePage"
             xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.SchedulePage"
             d:DataContext="{d:DesignInstance Type=vm:MatchesPlanningViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <DockPanel Margin="{StaticResource MyNet.Margins.Medium.Left}">

        <!-- Header -->
        <my:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             DockPanel.Dock="Top"
                             Orientation="Horizontal">

            <!-- Period -->
            <my:Card Width="300" Padding="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Text}"
                                       Grid.ColumnSpan="3"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       my:ThemeAssist.IsCheckedBackground="{my:BrushBinding SelfPath=Foreground,
                                                                                            Opacity={StaticResource MyNet.Opacity.Checked}}"
                                       my:ThemeAssist.IsCheckedBorderBrush="{DynamicResource MyNet.Brushes.Primary}"
                                       my:ThemeAssist.IsCheckedForeground="{my:BrushBinding SelfPath=Foreground}"
                                       BorderBrush="{DynamicResource MyNet.Brushes.Control.Border}"
                                       BorderThickness="1"
                                       PopupContent="{Binding Display.Mode, Mode=OneWay}"
                                       PopupPadding="0"
                                       ShowDropDownButton="False"
                                       StaysOpen="True"
                                       ToggleContent="{my:Translation Display.Mode.DisplayDate,
                                                                      Casing=Title,
                                                                      Format='dd MMMM'}">
                        <my:DropDownButton.PopupContentTemplate>
                            <DataTemplate>
                                <Calendar my:CalendarAssist.IsHeaderVisible="False" Focusable="False" SelectedDate="{Binding DisplayDate}" />
                            </DataTemplate>
                        </my:DropDownButton.PopupContentTemplate>
                    </my:DropDownButton>
                    <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                            Grid.Column="0"
                            Padding="5 0"
                            VerticalAlignment="Stretch"
                            my:ThemeAssist.CornerRadius="0"
                            Command="{Binding Display.Mode.MoveToPreviousDateCommand}"
                            Content="{my:MediumIcon Kind=ChevronLeft}" />
                    <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                            Grid.Column="2"
                            Padding="5 0"
                            VerticalAlignment="Stretch"
                            my:ThemeAssist.CornerRadius="0"
                            Command="{Binding Display.Mode.MoveToNextDateCommand}"
                            Content="{my:MediumIcon Kind=ChevronRight}" />
                </Grid>
            </my:Card>

            <!-- Display Options -->
            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource Display}" />
            <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Outlined}"
                      Width="{StaticResource MyNet.Widths.Control.Medium}"
                      ItemsSource="{my:IntegerRange Start=1,
                                                    End=7}"
                      SelectedItem="{Binding Display.Mode.DisplayDaysCount}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{my:Translation Plural=True, Format=TimeSpanDay}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource Of, Casing=LowerCase}" />
            <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Outlined}"
                      Width="80"
                      my:ComboBoxAssist.ShowCaret="False"
                      my:ComboBoxAssist.ShowUpDownButton="True"
                      ItemsSource="{my:HourRange Start=0,
                                                 End=22}"
                      SelectedItem="{Binding Display.Mode.DisplayTimeStart}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={x:Static my:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource To}" />
            <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Outlined}"
                      Width="80"
                      my:ComboBoxAssist.ShowCaret="False"
                      my:ComboBoxAssist.ShowUpDownButton="True"
                      ItemsSource="{my:HourRange Start=1,
                                                 End=23}"
                      SelectedItem="{Binding Display.Mode.DisplayTimeEnd}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={x:Static my:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </my:SimpleStackPanel>

        <!-- Matches -->
        <ContentControl Grid.RowSpan="4" Grid.Column="2">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}" BasedOn="{StaticResource MyNet.Styles.ContentControl}">
                    <Setter Property="Content" Value="{Binding}" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <my:CalendarHoursByDay dd:DragDrop.DropHandler="{Binding DropHandler}"
                                                       dd:DragDrop.IsDragSource="{Binding AllowRescheduleWithDragAndDrop}"
                                                       dd:DragDrop.IsDropTarget="{Binding AllowRescheduleWithDragAndDrop}"
                                                       my:HeaderAssist.Background="Transparent"
                                                       my:HeaderAssist.Height="50"
                                                       my:HeaderAssist.Width="35"
                                                       Appointments="{Binding Wrappers}"
                                                       AppointmentsMargin="0"
                                                       AppointmentsSpacing="0"
                                                       BorderThickness="0"
                                                       DatesSelectionMode="None"
                                                       DisplayDate="{Binding Display.Mode.DisplayDate, Mode=OneWay}"
                                                       DisplayDaysCount="{Binding Display.Mode.DisplayDaysCount}"
                                                       DisplayTimeEnd="{Binding Display.Mode.DisplayTimeEnd}"
                                                       DisplayTimeStart="{Binding Display.Mode.DisplayTimeStart}"
                                                       ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                       SelectionMode="Extended"
                                                       ShowHeader="False"
                                                       UseAccurateItemPosition="True">
                                    <my:CalendarHoursByDay.ItemContainerStyle>
                                        <Style TargetType="{x:Type my:CalendarAppointment}" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.HoursByDay}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Rectangle x:Name="border" RadiusX="{StaticResource MyNet.UniformCornerRadius.Container}" RadiusY="{StaticResource MyNet.UniformCornerRadius.Container}" />

                                                            <DockPanel Margin="{StaticResource MyNet.Margins.Default}">

                                                                <!-- Header -->
                                                                <my:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Medium.Bottom}" DockPanel.Dock="Top" Orientation="Horizontal">

                                                                    <!-- Selection -->
                                                                    <Grid>
                                                                        <CheckBox x:Name="Selection"
                                                                                  Style="{StaticResource MyNet.Styles.CheckBox.Circle}"
                                                                                  BorderBrush="{my:BrushBinding SelfPath=(TextElement.Foreground),
                                                                                                                Opacity={StaticResource MyNet.Opacity.Secondary}}"
                                                                                  Focusable="False"
                                                                                  IsChecked="{Binding IsSelected}"
                                                                                  IsTabStop="False"
                                                                                  Visibility="Hidden" />
                                                                        <my:PackIcon x:Name="Icon"
                                                                                     Width="18"
                                                                                     Height="18"
                                                                                     HorizontalAlignment="Center"
                                                                                     VerticalAlignment="Center"
                                                                                     Foreground="{DynamicResource MyNet.Brushes.None}"
                                                                                     Kind="ProgressClock" />
                                                                    </Grid>

                                                                    <!-- Teams -->
                                                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}">
                                                                        <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}"
                                                                                           Width="19"
                                                                                           Height="19"
                                                                                           DataContext="{Binding Item.HomeTeam}"
                                                                                           ToolTip="{Binding Name}" />
                                                                        <TextBlock Margin="{StaticResource MyNet.Margins.Small}"
                                                                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                                                   Text="{my:Resource VersusAbbr}"
                                                                                   Typography.Capitals="AllSmallCaps" />
                                                                        <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}"
                                                                                           Width="19"
                                                                                           Height="19"
                                                                                           DataContext="{Binding Item.AwayTeam}"
                                                                                           ToolTip="{Binding Name}" />

                                                                    </my:SimpleStackPanel>
                                                                </my:SimpleStackPanel>

                                                                <!-- Actions -->
                                                                <DockPanel Margin="{StaticResource MyNet.Margins.Small.Top}" VerticalAlignment="Bottom" DockPanel.Dock="Bottom">

                                                                    <!-- Conflicts -->
                                                                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Elevation.Custom}"
                                                                                       Padding="{StaticResource MyNet.Margins.Small}"
                                                                                       HorizontalAlignment="Center"
                                                                                       my:ThemeAssist.IsCheckedBackground="{DynamicResource MyNet.Brushes.Warning}"
                                                                                       Background="{DynamicResource MyNet.Brushes.Warning}"
                                                                                       BorderBrush="{DynamicResource MyNet.Brushes.Warning}"
                                                                                       DockPanel.Dock="Left"
                                                                                       Foreground="{my:BrushBinding SelfPath=Background,
                                                                                                                    Contrast=True}"
                                                                                       PopupPadding="0"
                                                                                       ToggleContent="{my:Icon Kind=Alert}"
                                                                                       ToolTip="{my:Resource HasConflictsWarning}"
                                                                                       Visibility="{Binding Item.Conflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                                                                        <my:Submenu>
                                                                            <MenuItem Command="{Binding Data.EditCommand, Source={StaticResource Proxy}}"
                                                                                      CommandParameter="{Binding Item}"
                                                                                      Header="{my:Resource Edit}"
                                                                                      Icon="{my:ToolIcon Kind=Edit}" />
                                                                            <MenuItem Command="{Binding Data.EditConflictsCommand, Source={StaticResource Proxy}}"
                                                                                      CommandParameter="{Binding Item}"
                                                                                      Header="{my:Resource EditConflicts}"
                                                                                      Icon="{my:ToolIcon Kind=LibraryEdit}"
                                                                                      Visibility="{Binding Item.MatchesInConflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                                                                            <MenuItem Header="{my:Resource EditConflict}"
                                                                                      Icon="{my:ToolIcon Kind=EditBox}"
                                                                                      ItemsSource="{Binding Item.MatchesInConflicts}"
                                                                                      Visibility="{Binding Item.MatchesInConflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                                                                                <MenuItem.ItemContainerStyle>
                                                                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MyNet.Styles.MenuItem}">
                                                                                        <Setter Property="Command" Value="{Binding Data.EditCommand, Source={StaticResource Proxy}}" />
                                                                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                                                                        <Setter Property="Header" Value="{Binding}" />
                                                                                        <Setter Property="HeaderTemplate">
                                                                                            <Setter.Value>
                                                                                                <DataTemplate>
                                                                                                    <Grid>
                                                                                                        <Grid.ColumnDefinitions>
                                                                                                            <ColumnDefinition Width="60" />
                                                                                                            <ColumnDefinition Width="5" />
                                                                                                            <ColumnDefinition Width="Auto" />
                                                                                                            <ColumnDefinition Width="5" />
                                                                                                            <ColumnDefinition Width="60" />
                                                                                                        </Grid.ColumnDefinitions>
                                                                                                        <ContentControl Content="{Binding HomeTeam}" ContentTemplate="{StaticResource Scorer.DataTemplates.Team.ShortName.Home}" IsEnabled="False" />
                                                                                                        <TextBlock Grid.Column="2" Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource VersusAbbr}" />
                                                                                                        <ContentControl Grid.Column="4"
                                                                                                                        Content="{Binding AwayTeam}"
                                                                                                                        ContentTemplate="{StaticResource Scorer.DataTemplates.Team.ShortName.Away}"
                                                                                                                        IsEnabled="False" />
                                                                                                    </Grid>
                                                                                                </DataTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                                    </Style>
                                                                                </MenuItem.ItemContainerStyle>
                                                                            </MenuItem>
                                                                            <Separator Visibility="{Binding Item.MatchesInConflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                                                                            <MenuItem Command="{Binding Data.SelectConflictsCommand, Source={StaticResource Proxy}}"
                                                                                      CommandParameter="{Binding Item}"
                                                                                      Header="{my:Resource SelectConflicts}"
                                                                                      Icon="{my:ToolIcon Kind=CheckAll}"
                                                                                      Visibility="{Binding Item.MatchesInConflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                                                                        </my:Submenu>
                                                                    </my:DropDownButton>

                                                                    <!-- Item ToolBar -->
                                                                    <v:MatchToolBar x:Name="ToolBar"
                                                                                    Padding="0"
                                                                                    HorizontalAlignment="Right"
                                                                                    DataContext="{Binding Item}"
                                                                                    DockPanel.Dock="Right"
                                                                                    Visibility="Hidden" />
                                                                </DockPanel>

                                                                <!-- Details -->
                                                                <my:DynamicScrollViewer Focusable="False">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto" />
                                                                            <RowDefinition Height="2" />
                                                                            <RowDefinition Height="Auto" />
                                                                            <RowDefinition Height="2" />
                                                                            <RowDefinition Height="Auto" />
                                                                        </Grid.RowDefinitions>

                                                                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                                                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation StartDate, Format=ShortTimePattern}" />
                                                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text=" - " />
                                                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation EndDate, Format=ShortTimePattern}" />
                                                                        </StackPanel>
                                                                        <WrapPanel Grid.Row="2" Orientation="Horizontal">
                                                                            <ctrl:TeamButton Item="{Binding Item.HomeTeam}" />
                                                                            <Grid Margin="{StaticResource MyNet.Margins.Small.Horizontal}">

                                                                                <!-- Versus -->
                                                                                <TextBlock x:Name="versus"
                                                                                           Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                                                           Text="{my:Resource VersusAbbr}"
                                                                                           Typography.Capitals="AllSmallCaps" />

                                                                                <!-- Score -->
                                                                                <Grid x:Name="score" Visibility="Collapsed">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="*" />
                                                                                        <ColumnDefinition Width="6" />
                                                                                        <ColumnDefinition Width="*" />
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="Auto" />
                                                                                        <RowDefinition Height="5" />
                                                                                        <RowDefinition Height="Auto" />
                                                                                        <RowDefinition Height="Auto" />
                                                                                    </Grid.RowDefinitions>

                                                                                    <Label x:Name="homeScore" Style="{StaticResource Scorer.Styles.Label.Score.Small}" Content="{Binding Item.HomeScore}" />
                                                                                    <Label x:Name="awayScore"
                                                                                           Style="{StaticResource Scorer.Styles.Label.Score.Small}"
                                                                                           Grid.Column="2"
                                                                                           Content="{Binding Item.AwayScore}" />

                                                                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}"
                                                                                               Grid.Row="2"
                                                                                               Grid.ColumnSpan="3"
                                                                                               HorizontalAlignment="Center"
                                                                                               Text="{my:Resource AfterExtraTimeAbbr}"
                                                                                               ToolTip="{my:Resource AfterExtraTime}"
                                                                                               Visibility="{Binding Item.AfterExtraTime, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                                                                                    <my:SimpleStackPanel Grid.Row="3"
                                                                                                         Grid.ColumnSpan="3"
                                                                                                         HorizontalAlignment="Center"
                                                                                                         Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                                                                         Orientation="Horizontal"
                                                                                                         Spacing="{StaticResource MyNet.Margin.Default}"
                                                                                                         Visibility="{Binding Item.AfterShootouts, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                                                                        <Label x:Name="homeShootoutScore"
                                                                                               Style="{StaticResource Scorer.Styles.Label.Score.Small}"
                                                                                               Grid.Row="2"
                                                                                               Content="{Binding Item.HomeShootoutScore}" />
                                                                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{my:Resource ShootoutsAbbr}" ToolTip="{my:Resource Shootouts}" />
                                                                                        <Label x:Name="awayShootoutScore"
                                                                                               Style="{StaticResource Scorer.Styles.Label.Score.Small}"
                                                                                               Grid.Row="2"
                                                                                               Grid.Column="2"
                                                                                               Content="{Binding Item.AwayShootoutScore}" />
                                                                                    </my:SimpleStackPanel>

                                                                                    <!-- Home is withdrawn -->
                                                                                    <TextBlock Grid.Row="3"
                                                                                               Grid.Column="0"
                                                                                               HorizontalAlignment="Center"
                                                                                               FontSize="{StaticResource MyNet.Font.Size.Caption}"
                                                                                               Foreground="{DynamicResource MyNet.Brushes.Negative}"
                                                                                               Text="{my:Resource WithdrawAbbr,
                                                                                                                  Casing=AllCaps}"
                                                                                               ToolTip="{my:Resource Withdraw}"
                                                                                               Visibility="{Binding Item.HomeIsWithdrawn, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                                                                                    <!-- Away is withdrawn -->
                                                                                    <TextBlock Grid.Row="3"
                                                                                               Grid.Column="2"
                                                                                               HorizontalAlignment="Center"
                                                                                               FontSize="{StaticResource MyNet.Font.Size.Caption}"
                                                                                               Foreground="{DynamicResource MyNet.Brushes.Negative}"
                                                                                               Text="{my:Resource WithdrawAbbr,
                                                                                                                  Casing=AllCaps}"
                                                                                               ToolTip="{my:Resource Withdraw}"
                                                                                               Visibility="{Binding Item.AwayIsWithdrawn, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                                                                                </Grid>
                                                                            </Grid>
                                                                            <ctrl:TeamButton Item="{Binding Item.AwayTeam}" />
                                                                        </WrapPanel>
                                                                        <DockPanel Grid.Row="4">
                                                                            <my:PackIcon Width="12"
                                                                                         Height="12"
                                                                                         Margin="{StaticResource MyNet.Margins.Default.Right}"
                                                                                         VerticalAlignment="Top"
                                                                                         Kind="Stadium"
                                                                                         Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                                                                            <TextBlock FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                                                                       FontStyle="Italic"
                                                                                       Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                                                       Text="{Binding Item.Stadium.Name}"
                                                                                       TextWrapping="Wrap" />
                                                                        </DockPanel>
                                                                    </Grid>
                                                                </my:DynamicScrollViewer>

                                                            </DockPanel>
                                                        </Grid>

                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Data.AllowRescheduleWithDragAndDrop, Source={StaticResource Proxy}}" Value="True">
                                                                <Setter TargetName="border" Property="Stroke" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
                                                                <Setter TargetName="border" Property="StrokeDashArray" Value="4 2" />
                                                                <Setter TargetName="border" Property="StrokeThickness" Value="2" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                <Setter TargetName="border" Property="Stroke" Value="{DynamicResource MyNet.Brushes.Primary}" />
                                                                <Setter TargetName="border" Property="StrokeThickness" Value="2" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Item.State}" Value="Played">
                                                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Positive}" />
                                                                <Setter TargetName="Icon" Property="Kind" Value="ProgressCheck" />
                                                                <Setter TargetName="score" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="versus" Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Item.State}" Value="InProgress">
                                                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Information}" />
                                                                <Setter TargetName="Icon" Property="Kind" Value="ProgressHelper" />
                                                                <Setter TargetName="awayScore" Property="Background" Value="{DynamicResource MyNet.Brushes.Information}" />
                                                                <Setter TargetName="awayShootoutScore" Property="Background" Value="{DynamicResource MyNet.Brushes.Information}" />
                                                                <Setter TargetName="homeScore" Property="Background" Value="{DynamicResource MyNet.Brushes.Information}" />
                                                                <Setter TargetName="homeShootoutScore" Property="Background" Value="{DynamicResource MyNet.Brushes.Information}" />
                                                                <Setter TargetName="score" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="versus" Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Item.State}" Value="Suspended">
                                                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource Scorer.Brushes.Match.State.Suspended}" />
                                                                <Setter TargetName="Icon" Property="Kind" Value="ProgressAlert" />
                                                                <Setter TargetName="awayScore" Property="Background" Value="{DynamicResource Scorer.Brushes.Match.State.Suspended}" />
                                                                <Setter TargetName="awayShootoutScore" Property="Background" Value="{DynamicResource Scorer.Brushes.Match.State.Suspended}" />
                                                                <Setter TargetName="homeScore" Property="Background" Value="{DynamicResource Scorer.Brushes.Match.State.Suspended}" />
                                                                <Setter TargetName="homeShootoutScore" Property="Background" Value="{DynamicResource Scorer.Brushes.Match.State.Suspended}" />
                                                                <Setter TargetName="score" Property="ToolTip" Value="{my:Resource MatchStateSuspended}" />
                                                                <Setter TargetName="score" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="versus" Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Item.State}" Value="Cancelled">
                                                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Negative}" />
                                                                <Setter TargetName="Icon" Property="Kind" Value="ProgressQuestion" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Item.State}" Value="Postponed">
                                                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Warning}" />
                                                                <Setter TargetName="Icon" Property="Kind" Value="ProgressClose" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                                                                <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
                                                                    <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                                                                <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                            <Setter Property="Padding" Value="0" />
                                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Data.AllowRescheduleWithDragAndDrop, Source={StaticResource Proxy}}" Value="True">
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="Cursor" Value="SizeAll" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </my:CalendarHoursByDay.ItemContainerStyle>
                                    <my:CalendarHoursByDay.ColumnHeaderTemplate>
                                        <DataTemplate>
                                            <my:SimpleStackPanel HorizontalAlignment="Center" Spacing="{StaticResource MyNet.Margin.Default}">
                                                <TextBlock HorizontalAlignment="Center"
                                                           Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                           Text="{my:Translation Format=ddd}"
                                                           Typography.Capitals="AllSmallCaps" />
                                                <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}"
                                                           HorizontalAlignment="Center"
                                                           Opacity="{StaticResource MyNet.Opacity.Default}"
                                                           Text="{my:Translation Format=dd}" />
                                            </my:SimpleStackPanel>
                                        </DataTemplate>
                                    </my:CalendarHoursByDay.ColumnHeaderTemplate>
                                    <my:CalendarHoursByDay.RowHeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}"
                                                       Margin="0 -6 0 0"
                                                       VerticalAlignment="Top"
                                                       Text="{Binding Converter={x:Static my:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                                        </DataTemplate>
                                    </my:CalendarHoursByDay.RowHeaderTemplate>
                                    <my:CalendarHoursByDay.CalendarItemStyle>
                                        <Style TargetType="{x:Type my:CalendarItem}" BasedOn="{StaticResource MyNet.Styles.CalendarItem.HoursByDay}">
                                            <Setter Property="MinHeight" Value="60" />
                                            <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsNow" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </my:CalendarHoursByDay.CalendarItemStyle>
                                </my:CalendarHoursByDay>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mode}" Value="{x:Static contracts:ScreenMode.Edition}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <v:MatchesView ShowGrouping="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DockPanel>
</UserControl>