<my:ContentDialog x:Class="MyClub.Scorer.Wpf.Views.SchedulingAssistant.SchedulingAssistantView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:dd="urn:gong-wpf-dragdrop"
                  xmlns:entities="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Entities"
                  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:my="http://mynet.com/xaml/themes"
                  xmlns:sys="clr-namespace:System;assembly=mscorlib"
                  xmlns:units="clr-namespace:MyNet.Utilities.Units;assembly=MyNet.Utilities"
                  xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.SchedulePage"
                  xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.SchedulingAssistant"
                  Style="{StaticResource MyNet.Styles.ContentDialog}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  d:DataContext="{d:DesignInstance Type=vm:SchedulingAssistantViewModel}"
                  BusyService="{Binding BusyService, Mode=OneWay}"
                  Header="{my:Resource SchedulingAssistant}"
                  ShowCloseButton="True"
                  mc:Ignorable="d">
    <my:ContentDialog.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <sys:Int32 x:Key="Five">5</sys:Int32>
        <sys:Int32 x:Key="Ten">10</sys:Int32>
        <sys:Int32 x:Key="Fifteen">15</sys:Int32>
        <sys:Int32 x:Key="Thirty">30</sys:Int32>
        <sys:Int32 x:Key="FourtyFive">45</sys:Int32>
        <sys:Int32 x:Key="Sixty">60</sys:Int32>
        <sys:Int32 x:Key="Ninety">90</sys:Int32>
        <sys:Int32 x:Key="OneHundredTwenty">120</sys:Int32>
        <sys:Int32 x:Key="MaxInteger">2147483647</sys:Int32>

        <DataTemplate x:Key="Scorer.DataTemplates.Appointment.Match" DataType="{x:Type vm:EditableSchedulingMatchViewModel}">
            <my:DynamicScrollViewer Focusable="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="2" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="2" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <!-- Home -->
                        <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}"
                                           Width="19"
                                           Height="19"
                                           DataContext="{Binding Item.HomeTeam}" />

                        <!-- Versus -->
                        <TextBlock Margin="{StaticResource MyNet.Margins.Small.Horizontal}"
                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                   Text="{my:Resource VersusAbbr}"
                                   Typography.Capitals="AllSmallCaps" />

                        <!-- Away -->
                        <my:PictureControl Style="{StaticResource Scorer.Styles.PictureControl.Team}"
                                           Width="19"
                                           Height="19"
                                           DataContext="{Binding Item.AwayTeam}" />
                    </StackPanel>

                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <!-- Home -->
                        <TextBlock Text="{Binding Item.HomeTeam.Name}" />

                        <!-- Versus -->
                        <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text=" - " Typography.Capitals="AllSmallCaps" />

                        <!-- Away -->
                        <TextBlock Text="{Binding Item.AwayTeam.Name}" />

                    </StackPanel>

                    <DockPanel Grid.Row="4">
                        <my:PackIcon Width="12"
                                     Height="12"
                                     Margin="{StaticResource MyNet.Margins.Default.Right}"
                                     VerticalAlignment="Top"
                                     Kind="Stadium"
                                     Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                        <TextBlock FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   FontStyle="Italic"
                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                   Text="{Binding Stadium.Name}"
                                   TextWrapping="Wrap" />
                    </DockPanel>
                </Grid>
            </my:DynamicScrollViewer>
        </DataTemplate>

    </my:ContentDialog.Resources>

    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Key="F5" Command="{Binding Data.ResetCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Data.SaveAndCloseAsyncCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="Esc" Command="{Binding Data.CancelCommand, Source={StaticResource Proxy}}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <my:ContentDialog.Footer>
        <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Label Style="{StaticResource MyNet.Styles.Label.Warning.Dialog}"
                   Padding="{StaticResource MyNet.Margins.Default}"
                   my:ThemeAssist.UniformCornerRadius="{StaticResource MyNet.UniformCornerRadius.Container}"
                   ContentTemplate="{x:Null}"
                   Visibility="{Binding HasConflicts, Converter={x:Static my:BooleanToVisibilityConverter.HiddenIfFalse}}">
                <DockPanel>
                    <my:PackIcon Width="25"
                                 Height="25"
                                 Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                 VerticalAlignment="Center"
                                 DockPanel.Dock="Left"
                                 Kind="WarningCircle" />
                    <TextBlock Text="{my:Resource HasSchedulingConflictsWarning}" TextWrapping="Wrap" />
                    <Button Style="{StaticResource MyNet.Styles.Button.Filled.Foreground.SemiTransparent}"
                            Margin="{StaticResource MyNet.Margins.Large.Left}"
                            Command="{Binding ShowConflictsCommand}"
                            Content="{my:Resource ShowConflicts}"
                            DockPanel.Dock="Right" />
                </DockPanel>
            </Label>
            <Button Style="{StaticResource MyNet.Styles.Button.Reset}" HorizontalAlignment="Right" Command="{Binding ResetCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Cancel}" HorizontalAlignment="Right" Command="{Binding CancelCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Validate}" HorizontalAlignment="Right" Command="{Binding SaveAndCloseAsyncCommand}" />
        </my:SimpleStackPanel>
    </my:ContentDialog.Footer>

    <Grid>
        <my:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, ElementName=toggleButton}"
                       LeftDrawerBackground="Transparent"
                       LeftDrawerCloseOnClickAway="False"
                       OpenMode="Standard">

            <!-- Left Part -->
            <my:DrawerHost.LeftDrawerContent>

                <my:DynamicScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <Grid Width="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="80" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- Date header -->
                        <DockPanel Grid.Row="1">
                            <my:SimpleStackPanel DockPanel.Dock="Right" Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}">
                                <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}" Command="{Binding DateSelection.MoveToPreviousDateCommand}" Content="{my:MediumIcon Kind=ChevronLeft}" />
                                <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}" Command="{Binding DateSelection.MoveToNextDateCommand}" Content="{my:MediumIcon Kind=ChevronRight}" />
                            </my:SimpleStackPanel>
                            <TextBlock Text="{my:Translation DateSelection.DisplayDate, Casing=AllCaps, Format='MMMM yyyy'}" />
                        </DockPanel>

                        <!-- Date selection -->
                        <my:Card Grid.Row="3"
                                 Width="300"
                                 Height="300"
                                 Padding="0"
                                 VerticalAlignment="Top"
                                 Background="{DynamicResource MyNet.Brushes.Application.Background.Secondary}">
                            <my:CalendarDaysByMonth my:HeaderAssist.Background="Transparent"
                                                    my:HeaderAssist.Height="25"
                                                    Appointments="{Binding Matches.GroupedWrappers}"
                                                    AppointmentsMargin="3 15 3 3"
                                                    AppointmentsSpacing="0"
                                                    Background="{DynamicResource MyNet.Brushes.Application.Background}"
                                                    BorderThickness="0"
                                                    DatesSelectionMode="SingleDate"
                                                    DisplayDate="{Binding DateSelection.DisplayDate, Mode=OneWay}"
                                                    ItemsOrientation="Vertical"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    SelectedDate="{Binding DateSelection.DisplayDate}"
                                                    ShowHeader="False">
                                <my:CalendarDaysByMonth.ColumnHeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" Text="{my:Translation Converter={x:Static my:DayOfWeekStringConverter.ToFirstLetterToUpper}}" />
                                    </DataTemplate>
                                </my:CalendarDaysByMonth.ColumnHeaderTemplate>
                                <my:CalendarDaysByMonth.CalendarItemStyle>
                                    <Style TargetType="{x:Type my:CalendarItem}" BasedOn="{StaticResource MyNet.Styles.CalendarItem.DaysByMonth}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock VerticalAlignment="Top" FontSize="{StaticResource MyNet.Font.Size.Secondary}" Text="{Binding Converter={x:Static my:DayNumberToStringConverter.ToTitle}}" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Padding" Value="{StaticResource MyNet.Margins.Small}" />
                                        <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent}" />
                                        <Style.Triggers>
                                            <Trigger Property="IsNow" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </my:CalendarDaysByMonth.CalendarItemStyle>
                                <my:CalendarDaysByMonth.ItemContainerStyle>
                                    <Style TargetType="{x:Type my:CalendarAppointment}">
                                        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Primary}" />
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.MouseOver.Foreground}">
                                                        <my:DropDownButton.ToggleContent>
                                                            <StackPanel x:Name="text" Orientation="Horizontal" TextElement.Foreground="{DynamicResource MyNet.Brushes.Positive}">
                                                                <my:PackIcon Width="14" Height="14" Kind="Plus" />
                                                                <TextBlock Margin="-2 0 0 0" FontWeight="Bold" Text="{Binding Count}" />
                                                            </StackPanel>
                                                        </my:DropDownButton.ToggleContent>
                                                        <ItemsControl my:ItemsControlAssist.SortingProperty="StartDate" ItemsSource="{Binding Items}">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto" />
                                                                            <ColumnDefinition Width="10" />
                                                                            <ColumnDefinition Width="150" />
                                                                            <ColumnDefinition Width="10" />
                                                                            <ColumnDefinition Width="Auto" />
                                                                            <ColumnDefinition Width="10" />
                                                                            <ColumnDefinition Width="150" />
                                                                        </Grid.ColumnDefinitions>
                                                                        <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation StartDate, Format=ShortTimePattern}" />

                                                                        <!-- Home -->
                                                                        <ContentControl Grid.Column="2"
                                                                                        Margin="{StaticResource MyNet.Margins.Small}"
                                                                                        Content="{Binding Item.HomeTeam}"
                                                                                        ContentTemplate="{StaticResource Scorer.DataTemplates.Team.Small.Home}"
                                                                                        IsEnabled="False" />

                                                                        <TextBlock Grid.Column="4"
                                                                                   Margin="{StaticResource MyNet.Margins.Small}"
                                                                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                                                   Text="{my:Resource VersusAbbr}"
                                                                                   Typography.Capitals="AllSmallCaps" />

                                                                        <!-- Away -->
                                                                        <ContentControl Grid.Column="6"
                                                                                        Margin="{StaticResource MyNet.Margins.Small}"
                                                                                        Content="{Binding Item.AwayTeam}"
                                                                                        ContentTemplate="{StaticResource Scorer.DataTemplates.Team.Small.Away}"
                                                                                        IsEnabled="False" />
                                                                    </Grid>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </my:DropDownButton>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding HasConflicts}" Value="True">
                                                            <Setter TargetName="text" Property="TextElement.Foreground" Value="{DynamicResource MyNet.Brushes.Warning}" />
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type my:CalendarAppointment}">
                                                    <ContentPresenter VerticalAlignment="Top" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </my:CalendarDaysByMonth.ItemContainerStyle>
                            </my:CalendarDaysByMonth>
                        </my:Card>

                        <!-- Filters -->
                        <v:SchedulingAssistantSpeedFiltersView Grid.Row="5" DataContext="{Binding Matches.Filters}" />

                        <!-- Selection -->
                        <Grid Grid.Row="7" MinHeight="300">
                            <Rectangle x:Name="rectangle"
                                       RadiusX="{StaticResource MyNet.UniformCornerRadius.Container}"
                                       RadiusY="{StaticResource MyNet.UniformCornerRadius.Container}"
                                       StrokeDashArray="4 2"
                                       StrokeThickness="1">
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{my:BrushBinding SelfPath=Tag, Opacity={StaticResource MyNet.Opacity.Filled}}" />
                                        <Setter Property="Stroke" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
                                        <Setter Property="Tag" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=CalendarHoursByDay, Converter={x:Static my:CountToBooleanConverter.Any}}" Value="True">
                                                <Setter Property="Stroke" Value="{DynamicResource MyNet.Brushes.Primary}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>

                            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Ghost}"
                                       HorizontalAlignment="Center"
                                       Text="{my:Resource SelectItems}"
                                       Visibility="{Binding SelectedItems.Count, ElementName=CalendarHoursByDay, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfAny}}" />

                            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean.Caption}"
                                      Margin="{StaticResource MyNet.Margins.Default}"
                                      my:HeaderAssist.FontSize="{StaticResource MyNet.Font.Size}"
                                      my:HeaderAssist.Foreground="{DynamicResource MyNet.Brushes.Primary}"
                                      my:HeaderAssist.HorizontalAlignment="Left"
                                      Header="{my:Translation SelectedItems.Count,
                                                              ElementName=CalendarHoursByDay,
                                                              Plural=True,
                                                              Format=XSelectedItems}"
                                      Visibility="{Binding SelectedItems.Count, ElementName=CalendarHoursByDay, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                                <DockPanel Margin="{StaticResource MyNet.Margins.Medium.Top}">
                                    <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Primary}"
                                            HorizontalAlignment="Right"
                                            my:IconAssist.Icon="{my:ToolIcon Kind=Check}"
                                            Command="{Binding UpdateSelectionCommand}"
                                            Content="{my:Resource Apply}"
                                            DockPanel.Dock="Bottom" />
                                    <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Large}">

                                        <!-- Stadiun -->
                                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean}"
                                                  my:HeaderAssist.HorizontalAlignment="Left"
                                                  my:IconAssist.Icon="{my:ToolIcon Kind=Stadium,
                                                                                   Size=18}"
                                                  Header="{my:Resource RescheduleStadium}">
                                            <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Filled}"
                                                      HorizontalAlignment="Stretch"
                                                      my:HintAssist.Hint="{my:Resource NoRescheduleStadium}"
                                                      my:TextFieldAssist.HasClearButton="True"
                                                      DisplayMemberPath="DisplayName"
                                                      ItemsSource="{Binding Stadiums, Mode=OneWay}"
                                                      MaxDropDownHeight="350"
                                                      SelectedItem="{Binding SelectedStadium}" />
                                        </GroupBox>

                                        <!-- Time -->
                                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean}"
                                                  my:HeaderAssist.HorizontalAlignment="Left"
                                                  my:IconAssist.Icon="{my:ToolIcon Kind=ClockPlus,
                                                                                   Size=18}"
                                                  Header="{my:Resource Reschedule}">
                                            <DockPanel>
                                                <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Filled}"
                                                          Margin="{StaticResource MyNet.Margins.Medium.Bottom}"
                                                          HorizontalAlignment="Stretch"
                                                          my:HintAssist.Hint="{my:Resource NoReschedule}"
                                                          my:TextFieldAssist.HasClearButton="True"
                                                          DockPanel.Dock="Top"
                                                          SelectedValue="{Binding SelectedDefaultOffsetValue}"
                                                          SelectedValuePath="DataContext">
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource Five}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource Five}" />
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource Ten}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource Ten}" />
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource Fifteen}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource Fifteen}" />
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource Thirty}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource Thirty}" />
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource FourtyFive}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource FourtyFive}" />
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource Sixty}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource Sixty}" />
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource Ninety}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource Ninety}" />
                                                    <ComboBoxItem Content="{my:Translation Source={StaticResource OneHundredTwenty}, Format=TimeSpanMinute, Plural=True}" DataContext="{StaticResource OneHundredTwenty}" />
                                                    <ComboBoxItem Content="{my:Resource Personalize}" DataContext="{StaticResource MaxInteger}" />
                                                </ComboBox>
                                                <Grid Visibility="{Binding SelectedDefaultOffsetValue, Converter={x:Static my:EqualityToVisibilityConverter.CollapsedIfNotEqual}, ConverterParameter={StaticResource MaxInteger}}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="40" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="20" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>

                                                    <RadioButton HorizontalAlignment="Center" IsChecked="{Binding SelectedOffsetByDate, Converter={x:Static my:NotBooleanConverter.Default}}" />
                                                    <Grid Grid.Column="1" IsEnabled="{Binding SelectedOffsetByDate, Converter={x:Static my:NotBooleanConverter.Default}}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="80" />
                                                            <ColumnDefinition Width="10" />
                                                            <ColumnDefinition Width="110" />
                                                        </Grid.ColumnDefinitions>
                                                        <my:NumericUpDown Style="{StaticResource MyNet.Styles.NumericUpDown}" HorizontalAlignment="Stretch" Value="{my:NullableBinding SelectedOffsetValue}" />
                                                        <ComboBox Style="{StaticResource MyNet.Styles.ComboBox}"
                                                                  Grid.Column="2"
                                                                  HorizontalAlignment="Stretch"
                                                                  SelectedIndex="0"
                                                                  SelectedValue="{Binding SelectedOffsetUnit}"
                                                                  SelectedValuePath="DataContext">
                                                            <ComboBoxItem Content="{my:Resource TimeUnitMinute}" DataContext="{x:Static units:TimeUnit.Minute}" />
                                                            <ComboBoxItem Content="{my:Resource TimeUnitHour}" DataContext="{x:Static units:TimeUnit.Hour}" />
                                                            <ComboBoxItem Content="{my:Resource TimeUnitDay}" DataContext="{x:Static units:TimeUnit.Day}" />
                                                            <ComboBoxItem Content="{my:Resource TimeUnitWeek}" DataContext="{x:Static units:TimeUnit.Week}" />
                                                            <ComboBoxItem Content="{my:Resource TimeUnitMonth}" DataContext="{x:Static units:TimeUnit.Month}" />
                                                        </ComboBox>
                                                    </Grid>

                                                    <RadioButton Grid.Row="2" HorizontalAlignment="Center" IsChecked="{Binding SelectedOffsetByDate}" />
                                                    <Grid Grid.Row="2" Grid.Column="1" IsEnabled="{Binding SelectedOffsetByDate}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="110" />
                                                            <ColumnDefinition Width="10" />
                                                            <ColumnDefinition Width="80" />
                                                        </Grid.ColumnDefinitions>
                                                        <DatePicker HorizontalAlignment="Stretch"
                                                                    my:HintAssist.Hint="{my:Resource Date}"
                                                                    my:TextFieldAssist.HasClearButton="True"
                                                                    SelectedDate="{Binding SelectedOffsetDate}" />
                                                        <my:TimePicker Grid.Column="2"
                                                                       HorizontalAlignment="Stretch"
                                                                       my:HintAssist.Hint="{my:Resource Time}"
                                                                       my:TextFieldAssist.HasClearButton="True"
                                                                       SelectedTime="{Binding SelectedOffsetTime, Converter={x:Static my:TimeSpanToDateTimeConverter.Default}}" />
                                                    </Grid>
                                                </Grid>
                                            </DockPanel>
                                        </GroupBox>
                                    </my:SimpleStackPanel>
                                </DockPanel>
                            </GroupBox>
                        </Grid>
                    </Grid>
                </my:DynamicScrollViewer>
            </my:DrawerHost.LeftDrawerContent>

            <DockPanel Margin="{StaticResource MyNet.Margins.Medium.Left}">

                <!-- Header -->
                <DockPanel Margin="{StaticResource MyNet.Margins.Default.Bottom}" DockPanel.Dock="Top">
                    <my:SimpleStackPanel Margin="40 0 0 0" VerticalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource Display}" />
                        <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Outlined}"
                                  Width="{StaticResource MyNet.Widths.Control.Medium}"
                                  ItemsSource="{my:IntegerRange Start=1,
                                                                End=7}"
                                  SelectedItem="{Binding DateTimeSelection.DisplayDaysCount}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{my:Translation Plural=True, Format=TimeSpanDay}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource Of, Casing=LowerCase}" />
                        <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Outlined}"
                                  Width="80"
                                  my:ComboBoxAssist.ShowCaret="False"
                                  my:ComboBoxAssist.ShowUpDownButton="True"
                                  ItemsSource="{my:HourRange Start=0,
                                                             End=22}"
                                  SelectedItem="{Binding DateTimeSelection.DisplayTimeStart}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={x:Static my:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource To}" />
                        <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Outlined}"
                                  Width="80"
                                  my:ComboBoxAssist.ShowCaret="False"
                                  my:ComboBoxAssist.ShowUpDownButton="True"
                                  ItemsSource="{my:HourRange Start=1,
                                                             End=23}"
                                  SelectedItem="{Binding DateTimeSelection.DisplayTimeEnd}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={x:Static my:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </my:SimpleStackPanel>
                    <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}">
                        <my:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                             VerticalAlignment="Center"
                                             DockPanel.Dock="Right"
                                             Orientation="Horizontal"
                                             TextElement.FontSize="{StaticResource MyNet.Font.Size.Caption}"
                                             TextElement.FontWeight="Bold">
                            <TextBlock Text="{my:Translation Path=DisplayDateStart, ElementName=CalendarHoursByDay, Casing=Title, Format='dd MMMM'}" />
                            <TextBlock Text="-" />
                            <TextBlock Text="{my:Translation Path=DisplayDateEnd, ElementName=CalendarHoursByDay, Casing=Title, Format='dd MMMM'}" />
                        </my:SimpleStackPanel>
                        <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}" Command="{Binding DateTimeSelection.MoveToPreviousDateCommand}" Content="{my:LargeIcon Kind=ChevronLeft}" />
                        <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}" Command="{Binding DateTimeSelection.MoveToNextDateCommand}" Content="{my:LargeIcon Kind=ChevronRight}" />
                    </my:SimpleStackPanel>
                </DockPanel>

                <!-- DateTime selection -->
                <my:CalendarHoursByDay x:Name="CalendarHoursByDay"
                                       Grid.RowSpan="4"
                                       Grid.Column="2"
                                       dd:DragDrop.DropHandler="{Binding DropHandler}"
                                       dd:DragDrop.IsDragSource="True"
                                       dd:DragDrop.IsDropTarget="True"
                                       my:HeaderAssist.Background="Transparent"
                                       my:HeaderAssist.Height="50"
                                       my:HeaderAssist.Width="35"
                                       Appointments="{Binding Matches.Wrappers}"
                                       AppointmentsMargin="0"
                                       AppointmentsSpacing="0"
                                       BorderThickness="0"
                                       DatesSelectionMode="None"
                                       DisplayDate="{Binding DateTimeSelection.DisplayDate, Mode=OneWay}"
                                       DisplayDaysCount="{Binding DateTimeSelection.DisplayDaysCount}"
                                       DisplayTimeEnd="{Binding DateTimeSelection.DisplayTimeEnd}"
                                       DisplayTimeStart="{Binding DateTimeSelection.DisplayTimeStart}"
                                       ScrollViewer.VerticalScrollBarVisibility="Auto"
                                       SelectionMode="Extended"
                                       ShowHeader="False"
                                       UseAccurateItemPosition="True">
                    <i:Interaction.Behaviors>
                        <my:ListBoxSelectionBehavior SelectedItems="{Binding Matches.SelectedItems}" />
                    </i:Interaction.Behaviors>
                    <my:CalendarHoursByDay.ItemContainerStyle>
                        <Style TargetType="{x:Type my:CalendarAppointment}" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.HoursByDay}">
                            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Positive}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Rectangle x:Name="border"
                                                       Fill="{my:BrushBinding Path=BorderBrush,
                                                                              RelativeSource={RelativeSource AncestorType={x:Type my:CalendarAppointment}},
                                                                              Opacity={StaticResource MyNet.Opacity.Filled}}"
                                                       RadiusX="{StaticResource MyNet.UniformCornerRadius.Container}"
                                                       RadiusY="{StaticResource MyNet.UniformCornerRadius.Container}"
                                                       Stroke="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type my:CalendarAppointment}}}"
                                                       StrokeDashArray="4 2"
                                                       StrokeThickness="2" />

                                            <Grid Margin="{StaticResource MyNet.Margins.Default}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="5" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <StackPanel Grid.Row="0" Orientation="Horizontal">
                                                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation StartDate, Format=ShortTimePattern}" />
                                                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text=" - " />
                                                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation EndDate, Format=ShortTimePattern}" />
                                                </StackPanel>
                                                <ContentControl Grid.Row="2" Content="{Binding}" ContentTemplate="{StaticResource Scorer.DataTemplates.Appointment.Match}" />
                                            </Grid>

                                            <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Icon.MouseOver.Foreground}"
                                                               Margin="{StaticResource MyNet.Margins.Default}"
                                                               HorizontalAlignment="Right"
                                                               VerticalAlignment="Top"
                                                               Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                                               ToggleContent="{my:ToolIcon Kind=WarningCircle}"
                                                               Visibility="{Binding Conflicts.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                                                <Grid>
                                                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.StringsList}" my:HeaderAssist.Padding="0" Content="{Binding Conflicts}" />
                                                </Grid>
                                            </my:DropDownButton>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type my:CalendarAppointment}}}" Value="True">
                                                <Setter TargetName="border" Property="Stroke" Value="{DynamicResource MyNet.Brushes.Primary}" />
                                                <Setter TargetName="border" Property="StrokeThickness" Value="2" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Cursor" Value="SizeAll" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Conflicts.Count, Converter={x:Static my:CountToBooleanConverter.Any}}" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Warning}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </my:CalendarHoursByDay.ItemContainerStyle>
                    <my:CalendarHoursByDay.ColumnHeaderTemplate>
                        <DataTemplate>
                            <my:SimpleStackPanel HorizontalAlignment="Center" Spacing="{StaticResource MyNet.Margin.Default}">
                                <TextBlock HorizontalAlignment="Center"
                                           Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                           Text="{my:Translation Format=ddd}"
                                           Typography.Capitals="AllSmallCaps" />
                                <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}"
                                           HorizontalAlignment="Center"
                                           Opacity="{StaticResource MyNet.Opacity.Default}"
                                           Text="{my:Translation Format=dd}" />
                            </my:SimpleStackPanel>
                        </DataTemplate>
                    </my:CalendarHoursByDay.ColumnHeaderTemplate>
                    <my:CalendarHoursByDay.RowHeaderTemplate>
                        <DataTemplate>
                            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}"
                                       Margin="0 -6 0 0"
                                       VerticalAlignment="Top"
                                       Text="{Binding Converter={x:Static my:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                        </DataTemplate>
                    </my:CalendarHoursByDay.RowHeaderTemplate>
                    <my:CalendarHoursByDay.CalendarItemStyle>
                        <Style TargetType="{x:Type my:CalendarItem}" BasedOn="{StaticResource MyNet.Styles.CalendarItem.HoursByDay}">
                            <Setter Property="Height" Value="60" />
                            <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent}" />
                            <Style.Triggers>
                                <Trigger Property="IsNow" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </my:CalendarHoursByDay.CalendarItemStyle>
                </my:CalendarHoursByDay>
            </DockPanel>
        </my:DrawerHost>
        <ToggleButton x:Name="toggleButton"
                      Style="{StaticResource MyNet.Styles.ToggleButton.Icon.Foreground}"
                      VerticalAlignment="Top"
                      Content="{my:LargeIcon Kind=Menu}"
                      IsChecked="True" />
    </Grid>

</my:ContentDialog>
