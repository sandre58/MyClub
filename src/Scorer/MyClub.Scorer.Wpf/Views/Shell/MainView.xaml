<UserControl x:Class="MyClub.Scorer.Wpf.Views.Shell.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.Shell"
             xmlns:vB="clr-namespace:MyClub.Scorer.Wpf.Views.BracketPage"
             xmlns:vH="clr-namespace:MyClub.Scorer.Wpf.Views.HomePage"
             xmlns:vP="clr-namespace:MyClub.Scorer.Wpf.Views.PastPositionsPage"
             xmlns:vR="clr-namespace:MyClub.Scorer.Wpf.Views.RankingPage"
             xmlns:vS="clr-namespace:MyNet.Wpf.Presentation.Views.Shell;assembly=MyNet.Wpf.Presentation"
             xmlns:vSc="clr-namespace:MyClub.Scorer.Wpf.Views.SchedulePage"
             xmlns:vSt="clr-namespace:MyClub.Scorer.Wpf.Views.StadiumsPage"
             xmlns:vStt="clr-namespace:MyClub.Scorer.Wpf.Views.StatisticsPage"
             xmlns:vT="clr-namespace:MyClub.Scorer.Wpf.Views.TeamsPage"
             xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Shell"
             d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="Scorer.Styles.HeaderedContentControl.MainMenu" TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource MyNet.Styles.ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <Grid>
                            <ContentPresenter />
                            <Label x:Name="label"
                                   Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation}"
                                   Width="18"
                                   Height="18"
                                   Margin="0 0 8 -5"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Bottom"
                                   Background="{Binding Path=(my:HeaderAssist.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                   Content="{TemplateBinding Header}"
                                   FontWeight="Bold"
                                   Foreground="{Binding Path=(my:HeaderAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="{Binding HasHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="my:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Information}" />
            <Setter Property="my:HeaderAssist.Foreground" Value="{my:BrushBinding SelfPath=(my:HeaderAssist.Background), Contrast=True}" />
        </Style>
    </UserControl.Resources>

    <my:DrawerHost IsLeftDrawerOpen="{Binding FileMenuViewModel.IsVisible}"
                   IsRightDrawerOpen="{Binding NotificationsViewModel.IsVisible}"
                   LeftDrawerBackground="{DynamicResource MyNet.Brushes.Accent}"
                   LeftDrawerCloseOnClickAway="True"
                   RightDrawerCloseOnClickAway="True">

        <!-- File Menu Panel -->
        <my:DrawerHost.LeftDrawerContent>
            <v:FileMenuView DataContext="{Binding FileMenuViewModel}" Foreground="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
        </my:DrawerHost.LeftDrawerContent>

        <!-- Notifications Panel -->
        <my:DrawerHost.RightDrawerContent>
            <vS:NotificationsView DataContext="{Binding NotificationsViewModel}" />
        </my:DrawerHost.RightDrawerContent>

        <!-- Drop container -->
        <Grid x:Name="Root"
              Margin="0 55 0 0"
              dd:DragDrop.DropHandler="{Binding DropHandler}"
              dd:DragDrop.IsDropTarget="{Binding CanDropScprojFiles}">

            <Border Grid.ColumnSpan="2" Background="White" Opacity="0.001" />

            <!-- Main Menu -->
            <my:NavigationView Style="{StaticResource MyNet.Styles.NavigationView.Compact}"
                               FrameCornerRadius="15 0 0 0"
                               NavigationService="{Binding NavigationService}"
                               ShowHeader="False"
                               ShowNavigationButtons="False">
                <my:NavigationView.ContentTemplateSelector>
                    <my:NullTemplateSelector>
                        <my:NullTemplateSelector.NullTemplate>
                            <DataTemplate>
                                <my:ApplicationIcon Grid.Column="1"
                                                    Width="300"
                                                    Height="300"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Background="{DynamicResource MyNet.Brushes.Control.Background}"
                                                    Foreground="{DynamicResource MyNet.Brushes.Application.Foreground}"
                                                    OffsetX="75"
                                                    OffsetY="75"
                                                    Opacity="0.2"
                                                    ShowText="False" />
                            </DataTemplate>
                        </my:NullTemplateSelector.NullTemplate>
                    </my:NullTemplateSelector>
                </my:NavigationView.ContentTemplateSelector>

                <!-- Home -->
                <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource Home}"
                                       Header="{my:Resource Home}"
                                       Icon="{my:MediumIcon Kind=Home}"
                                       TargetViewType="{x:Type vH:HomePageView}" />

                <my:NavigationViewItemSeparator Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                <!-- Bracket -->
                <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource Bracket}"
                                       Header="{my:Resource Bracket}"
                                       TargetViewType="{x:Type vB:BracketPageView}"
                                       Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                    <my:NavigationViewItem.Icon>
                        <HeaderedContentControl Content="{my:MediumIcon Kind=Bracket}" Header="{Binding CountCompetitionStages}">
                            <HeaderedContentControl.Style>
                                <Style TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource Scorer.Styles.HeaderedContentControl.MainMenu}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CountCompetitionStages}" Value="0">
                                            <Setter Property="my:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
                                            <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </HeaderedContentControl.Style>
                        </HeaderedContentControl>
                    </my:NavigationViewItem.Icon>
                </my:NavigationViewItem>

                <!-- Schedule -->
                <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource Schedule}"
                                       Header="{my:Resource Schedule}"
                                       IsEnabled="{Binding CountCompetitionStages, Converter={x:Static my:CountToBooleanConverter.Any}}"
                                       TargetViewType="{x:Type vSc:SchedulePageView}"
                                       Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                    <my:NavigationViewItem.Icon>
                        <HeaderedContentControl Content="{my:MediumIcon Kind=Calendar}" Header="{Binding CountMatches}">
                            <HeaderedContentControl.Style>
                                <Style TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource Scorer.Styles.HeaderedContentControl.MainMenu}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CountMatches}" Value="0">
                                            <Setter Property="my:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
                                            <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </HeaderedContentControl.Style>
                        </HeaderedContentControl>
                    </my:NavigationViewItem.Icon>
                </my:NavigationViewItem>

                <!-- Ranking -->
                <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource Ranking}"
                                       Header="{my:Resource Ranking}"
                                       Icon="{my:MediumIcon Kind=Podium}"
                                       IsEnabled="{Binding CountTeams, Converter={x:Static my:CountToBooleanConverter.Any}}"
                                       TargetViewType="{x:Type vR:RankingPageView}"
                                       Visibility="{Binding IsLeague, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                <!-- Past Positions -->
                <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource PastPositions}"
                                       Header="{my:Resource PastPositions}"
                                       Icon="{my:MediumIcon Kind=ChartLineVariant}"
                                       IsEnabled="{Binding CountTeams, Converter={x:Static my:CountToBooleanConverter.Any}}"
                                       TargetViewType="{x:Type vP:PastPositionsPageView}"
                                       Visibility="{Binding IsLeague, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                <!-- Statistics -->
                <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource Statistics}"
                                       Header="{my:Resource Statistics}"
                                       Icon="{my:MediumIcon Kind=Analytics}"
                                       TargetViewType="{x:Type vStt:StatisticsPageView}"
                                       Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                <my:NavigationView.FooterMenuItems>
                    <!-- Teams -->
                    <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource Teams}"
                                           Header="{my:Resource Teams}"
                                           TargetViewType="{x:Type vT:TeamsPageView}"
                                           Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <my:NavigationViewItem.Icon>
                            <HeaderedContentControl Content="{my:MediumIcon Kind=Shield}" Header="{Binding CountTeams}">
                                <HeaderedContentControl.Style>
                                    <Style TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource Scorer.Styles.HeaderedContentControl.MainMenu}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CountTeams}" Value="0">
                                                <Setter Property="my:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
                                                <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </HeaderedContentControl.Style>
                            </HeaderedContentControl>
                        </my:NavigationViewItem.Icon>
                    </my:NavigationViewItem>

                    <!-- Stadiums -->
                    <my:NavigationViewItem my:ToolTipAssist.Content="{my:Resource Stadiums}"
                                           Header="{my:Resource Stadiums}"
                                           TargetViewType="{x:Type vSt:StadiumsPageView}"
                                           Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <my:NavigationViewItem.Icon>
                            <HeaderedContentControl Content="{my:MediumIcon Kind=Stadium}" Header="{Binding CountStadiums}">
                                <HeaderedContentControl.Style>
                                    <Style TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource Scorer.Styles.HeaderedContentControl.MainMenu}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CountStadiums}" Value="0">
                                                <Setter Property="my:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
                                                <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </HeaderedContentControl.Style>
                            </HeaderedContentControl>
                        </my:NavigationViewItem.Icon>
                    </my:NavigationViewItem>

                    <my:NavigationViewItemSeparator Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                    <!-- Build -->
                    <my:NavigationViewItem my:CommandsAssist.ClickCommand="{Binding OpenBuildAssistantCommand}"
                                           my:ToolTipAssist.Content="{my:ShortcutResource Build,
                                                                                          ShortcutKey=Ctrl+B}"
                                           Header="{my:Resource Build}"
                                           Icon="{my:MediumIcon Kind=DesktopClassic}"
                                           IsEnabled="{Binding CountTeams, Converter={x:Static my:CountToBooleanConverter.Any}}"
                                           Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                    <!-- Ranking Rules -->
                    <my:NavigationViewItem my:CommandsAssist.ClickCommand="{Binding EditRankingRulesCommand}"
                                           my:ToolTipAssist.Content="{my:ShortcutResource RankingRules,
                                                                                          ShortcutKey=F9}"
                                           Header="{my:Resource RankingRules}"
                                           Icon="{my:MediumIcon Kind=SortBoolAscendingVariant}"
                                           Visibility="{Binding IsLeague, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                    <!-- Project -->
                    <my:NavigationViewItem my:CommandsAssist.ClickCommand="{Binding EditProjectCommand}"
                                           my:ToolTipAssist.Content="{my:ShortcutResource EditProject,
                                                                                          ShortcutKey=F8}"
                                           Header="{my:Resource Edit}"
                                           Visibility="{Binding ProjectIsLoaded, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <my:NavigationViewItem.Icon>
                            <HeaderedContentControl Style="{StaticResource Scorer.Styles.HeaderedContentControl.MainMenu}">
                                <Grid Width="24" Height="24" VerticalAlignment="Top">
                                    <my:PackIcon Width="24"
                                                 Height="24"
                                                 Kind="ShieldCrown"
                                                 Visibility="{Binding Image, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
                                    <Image HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Source="{Binding Image, Converter={x:Static my:BytesToImageConverter.Default}}"
                                           Stretch="Uniform"
                                           Visibility="{Binding Image, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                                </Grid>
                            </HeaderedContentControl>
                        </my:NavigationViewItem.Icon>
                    </my:NavigationViewItem>

                </my:NavigationView.FooterMenuItems>
            </my:NavigationView>
        </Grid>

    </my:DrawerHost>
</UserControl>
