<mah:WindowCommands x:Class="MyClub.Scorer.Wpf.Views.Shell.RightWindowsCommands"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:my="http://mynet.com/xaml/themes"
                    xmlns:notif="clr-namespace:MyNet.UI.Notifications;assembly=MyNet.UI"
                    xmlns:v="clr-namespace:MyClub.Scorer.Wpf.Views.Shell"
                    xmlns:vm="clr-namespace:MyClub.Scorer.Wpf.ViewModels.Shell"
                    d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel}"
                    d:DesignHeight="450"
                    d:DesignWidth="800"
                    ShowSeparators="False"
                    mc:Ignorable="d">
    <mah:WindowCommands.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </mah:WindowCommands.Resources>

    <!--  Background Busy Service  -->
    <Grid Width="30"
          Height="30"
          my:BusyAssist.AttachService="{Binding BackgroundBusyService}"
          my:BusyAssist.Style="{StaticResource MyNet.Styles.BusyControl.Small}" />

    <!--  User Button  -->
    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Text}"
                       PlacementMode="BottomAndAlignRightEdges"
                       PopupPadding="0"
                       ShowDropDownButton="False"
                       ToolTip="{Binding User.PreferredName}">
        <my:DropDownButton.ToggleContent>
            <my:PictureControl Width="25"
                               Height="25"
                               Background="{DynamicResource MyNet.Brushes.Accent}"
                               Image="{Binding User.Image, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={x:Static my:BytesToImageConverter.Default}}">
                <my:GeometryIcon Width="25"
                                 Height="25"
                                 Margin="0 0 0 -6"
                                 Data="{StaticResource MyNet.Geometries.Male}"
                                 Foreground="{DynamicResource MyNet.Brushes.Accent.Foreground}"
                                 Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                 Visibility="{Binding User.Image, UpdateSourceTrigger=PropertyChanged, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
            </my:PictureControl>
        </my:DropDownButton.ToggleContent>
        <v:UserPopupView />
    </my:DropDownButton>

    <!--  Notifications Button  -->
    <my:Badged Badge="{Binding NotificationsViewModel.Notifications.Count}"
               BadgeMargin="-20 -20 0 0"
               BadgePlacementMode="BottomRight"
               ShowBadge="{Binding NotificationsViewModel.Notifications.Count, Converter={x:Static my:CountToBooleanConverter.Any}}">
        <my:Badged.Style>
            <Style BasedOn="{StaticResource MyNet.Styles.Badged}" TargetType="{x:Type my:Badged}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Data.NotificationsViewModel.MaxSeverity, Source={StaticResource Proxy}}" Value="{x:Static notif:NotificationSeverity.Success}">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MyNet.Brushes.Positive}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.NotificationsViewModel.MaxSeverity, Source={StaticResource Proxy}}" Value="{x:Static notif:NotificationSeverity.Error}">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MyNet.Brushes.Negative}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.NotificationsViewModel.MaxSeverity, Source={StaticResource Proxy}}" Value="{x:Static notif:NotificationSeverity.Warning}">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MyNet.Brushes.Warning}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.NotificationsViewModel.MaxSeverity, Source={StaticResource Proxy}}" Value="{x:Static notif:NotificationSeverity.Information}">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MyNet.Brushes.Information}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </my:Badged.Style>
        <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Text}"
                      Command="{Binding ToggleNotificationsCommand}"
                      Content="{my:MediumIcon Kind=Bell}"
                      IsChecked="{Binding NotificationsViewModel.IsVisible, Mode=OneWay}"
                      ToolTip="{my:ShortcutResource OpenNotificationsCenter,
                                                    ShortcutKey='Ctrl+Space'}" />
    </my:Badged>

    <!--  Theme  -->
    <my:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Medium.Horizontal}" VerticalAlignment="Center" Orientation="Horizontal">
        <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}"
                Command="{Binding IsLightCommand}"
                Content="{my:ToolIcon Kind=WeatherSunny}"
                ToolTip="{my:Resource Light}" />
        <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Switch.Foreground}" IsChecked="{Binding IsDark}" />
        <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}"
                Command="{Binding IsDarkCommand}"
                Content="{my:ToolIcon Kind=WeatherNight}"
                ToolTip="{my:Resource Dark}" />
    </my:SimpleStackPanel>
</mah:WindowCommands>
