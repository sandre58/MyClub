<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
                    xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
                    xmlns:my="http://mynet.com/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Themes/MyNet.Styles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Teamup;component/Styles/Teamup.Team.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Teamup.Styles.MatchButton" BasedOn="{StaticResource MyNet.Styles.Button.HyperLink.Foreground}" TargetType="{x:Type ctrl:MatchButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Command" Value="{Binding Item.OpenCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ToolTip" Value="{my:Resource SeeItem}" />
        <Setter Property="Padding" Value="3 0 3 1" />
        <Setter Property="Content" Value="{Binding Item, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Border Background="White" Opacity="0.002" />

                        <!--  IsCancelled  -->
                        <my:PackIcon x:Name="cancel"
                                     Width="18"
                                     Height="18"
                                     Foreground="{DynamicResource MyNet.Brushes.Negative}"
                                     Kind="ProgressClose"
                                     ToolTip="{my:Resource Cancelled}"
                                     Visibility="Collapsed" />

                        <!--  IsPostponed  -->
                        <my:PackIcon x:Name="postponed"
                                     Width="18"
                                     Height="18"
                                     Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                     Kind="ProgressQuestion"
                                     ToolTip="{my:Resource Postponed}"
                                     Visibility="Collapsed" />

                        <!--  Date  -->
                        <TextBlock x:Name="date" Text="{my:Translation Date, Format=ShortDateFormat, Casing=Title}" Visibility="Visible" />

                        <!--  Score  -->
                        <Grid x:Name="score" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Label x:Name="homeScore" Style="{StaticResource Teamup.Styles.Label.Score.Small}" Content="{Binding HomeScore}" />
                            <Label x:Name="awayScore"
                                   Style="{StaticResource Teamup.Styles.Label.Score.Small}"
                                   Grid.Column="2"
                                   Content="{Binding AwayScore}" />
                        </Grid>

                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:MatchState.Played}">
                            <Setter TargetName="score" Property="Visibility" Value="Visible" />
                            <Setter TargetName="date" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:MatchState.InProgress}">
                            <Setter TargetName="score" Property="Visibility" Value="Visible" />
                            <Setter TargetName="date" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="homeScore" Property="Background" Value="{DynamicResource MyNet.Brushes.Information}" />
                            <Setter TargetName="awayScore" Property="Background" Value="{DynamicResource MyNet.Brushes.Information}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:MatchState.Suspended}">
                            <Setter TargetName="score" Property="Visibility" Value="Visible" />
                            <Setter TargetName="date" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="homeScore" Property="Background" Value="{DynamicResource Teamup.Brushes.Match.State.Suspended}" />
                            <Setter TargetName="awayScore" Property="Background" Value="{DynamicResource Teamup.Brushes.Match.State.Suspended}" />
                            <Setter TargetName="score" Property="ToolTip" Value="{my:Resource MatchStateSuspended}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:MatchState.Cancelled}">
                            <Setter TargetName="cancel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="date" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="{x:Static enums:MatchState.Postponed}">
                            <Setter TargetName="postponed" Property="Visibility" Value="Visible" />
                            <Setter TargetName="date" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu DataContext="{Binding PlacementTarget.Item, RelativeSource={RelativeSource Self}}">
                    <ContextMenu.Resources>
                        <my:BindingProxy x:Key="MatchProxy" Data="{Binding}" />
                    </ContextMenu.Resources>
                    <MenuItem Command="{Binding OpenCommand}" Icon="{my:ToolIcon Kind=Eye}">
                        <MenuItem.Header>
                            <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
                                <ContentControl Content="{Binding HomeTeam}" ContentTemplate="{StaticResource Teamup.DataTemplates.Team.ShortName.Home}" IsEnabled="False" />
                                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource VersusAbbr}" />
                                <ContentControl Content="{Binding AwayTeam}" ContentTemplate="{StaticResource Teamup.DataTemplates.Team.ShortName.Away}" IsEnabled="False" />
                            </my:SimpleStackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}" />
                    <MenuItem Command="{Binding EditCommand}" Header="{my:Resource Edit}" Icon="{my:ToolIcon Kind=Edit}" />
                    <MenuItem Header="{my:Resource Update}" Icon="{my:ToolIcon Kind=TimerRefreshOutline}">
                        <MenuItem Command="{Binding ResetCommand}" Header="{my:Resource Reset}" Icon="{my:ToolIcon Kind=ProgressClock}" />
                        <MenuItem Command="{Binding StartCommand}" Header="{my:Resource Start}" Icon="{my:ToolIcon Kind=ProgressHelper}" />
                        <MenuItem Command="{Binding SuspendCommand}" Header="{my:Resource Suspend}" Icon="{my:ToolIcon Kind=ProgressAlert}" />
                        <MenuItem Command="{Binding PostponeCommand}" Header="{my:Resource Postpone}" Icon="{my:ToolIcon Kind=ProgressQuestion}" />
                        <MenuItem Command="{Binding CancelCommand}" Header="{my:Resource Cancel}" Icon="{my:ToolIcon Kind=ProgressClose}" />
                    </MenuItem>
                    <MenuItem Command="{Binding InvertTeamsCommand}" Header="{my:Resource InvertTeams}" Icon="{my:ToolIcon Kind=SwapHorizontal}" />
                    <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}" />
                    <MenuItem Header="{my:Resource DoWithdraw}" Icon="{my:ToolIcon Kind=Close}" IsEnabled="{Binding CanUpdateScore}">
                        <MenuItem Command="{Binding DoWithdrawForHomeTeamCommand}" Header="{my:Resource HomeTeam}" Icon="{my:ToolIcon Kind=Home}" />
                        <MenuItem Command="{Binding DoWithdrawForAwayTeamCommand}" Header="{my:Resource AwayTeam}" Icon="{my:ToolIcon Kind=Plane}" />
                    </MenuItem>
                    <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}" />
                    <MenuItem Background="{DynamicResource MyNet.Brushes.Negative}"
                              Command="{Binding RemoveCommand}"
                              Foreground="{my:BrushBinding SelfPath=Background,
                                                           Contrast=True}"
                              Header="{my:Resource Remove}"
                              Icon="{my:ToolIcon Kind=Trash}" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Default}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>