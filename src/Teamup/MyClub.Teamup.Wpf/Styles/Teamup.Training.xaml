<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
                    xmlns:my="http://mynet.com/xaml/themes"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Themes/MyNet.Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="Teamup.TrainingSession.IconRatio">0.75</sys:Double>

    <DataTemplate x:Key="Teamup.DataTemplates.ChartPoint.TrainingSession">
        <ctrl:TrainingSessionButton Item="{Binding Point.Instance}" />
    </DataTemplate>

    <Style x:Key="Teamup.Styles.ToggleButton.TrainingSession" BasedOn="{StaticResource MyNet.Styles.ToggleButton.Action.Primary}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <my:PackIcon x:Name="Icon"
                                     Width="{Binding Width, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter={StaticResource Teamup.TrainingSession.IconRatio}}"
                                     Height="{Binding Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter={StaticResource Teamup.TrainingSession.IconRatio}}"
                                     Margin="-1 2 0 0"
                                     Kind="Clockwise"
                                     Opacity="{StaticResource MyNet.Opacity.Medium}" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsPerformed}" Value="True">
                            <Setter TargetName="Icon" Property="Kind" Value="Check" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsCancelled}" Value="True">
                            <Setter TargetName="Icon" Property="Kind" Value="Cancel" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.None}" />
                <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.White}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding Content.IsPerformed, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Positive}" />
                    <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.White}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding Content.IsCancelled, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Negative}" />
                    <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.White}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Teamup.Styles.DropDownButton.TrainingSession.Info" BasedOn="{StaticResource MyNet.Styles.DropDownButton.Icon.ToolTip}" TargetType="{x:Type my:DropDownButton}">
        <Setter Property="PopupHorizontalOffset" Value="0" />
        <Setter Property="ToggleContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <my:PackIcon Kind="InfoCircle" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="500">
                        <TextBlock HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Foreground="{my:BrushBinding Cycle.Color,
                                                                Opacity={StaticResource MyNet.Opacity.Default}}"
                                   Text="{Binding Cycle.Label}" />
                        <StackPanel>
                            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Title}"
                                       Margin="{StaticResource MyNet.Margins.Medium.Bottom}"
                                       HorizontalAlignment="Center"
                                       Text="{Binding Theme}" />
                            <UniformGrid Columns="2">
                                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.StringsList}"
                                          Margin="{StaticResource MyNet.Margins.Default}"
                                          Content="{Binding TechnicalGoals}"
                                          Header="{my:Resource TechnicalGoals}" />
                                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.StringsList}"
                                          Margin="{StaticResource MyNet.Margins.Default}"
                                          Content="{Binding TacticalGoals}"
                                          Header="{my:Resource TacticalGoals}" />
                                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.StringsList}"
                                          Margin="{StaticResource MyNet.Margins.Default}"
                                          Content="{Binding PhysicalGoals}"
                                          Header="{my:Resource PhysicalGoals}" />
                                <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.StringsList}"
                                          Margin="{StaticResource MyNet.Margins.Default}"
                                          Content="{Binding MentalGoals}"
                                          Header="{my:Resource MentalGoals}" />
                            </UniformGrid>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding PopupContent.Cycle.Color, RelativeSource={RelativeSource Self}, Converter={x:Static my:NullToBooleanConverter.FalseIfNull}}" Value="True">
                <Setter Property="Foreground" Value="{my:BrushBinding PopupContent.Cycle.Color, RelativeSource={RelativeSource Self}, Opacity={StaticResource MyNet.Opacity.Default}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>