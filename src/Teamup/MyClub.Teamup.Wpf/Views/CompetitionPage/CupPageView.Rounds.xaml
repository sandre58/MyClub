<UserControl x:Class="MyClub.Teamup.Wpf.Views.CompetitionPage.CupPageRoundsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.CompetitionPage"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.CompetitionPage"
             d:DataContext="{d:DesignInstance Type=vm:CupPageRoundsViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <my:GhostControl ShowGhost="{Binding Items.Count, Converter={x:Static my:CountToBooleanConverter.NotAny}}">
        <my:GhostControl.GhostTemplate>
            <DataTemplate>
                <my:SimpleStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.Large}">
                    <Button Style="{StaticResource MyNet.Styles.Button.Elevation}"
                            Width="370"
                            Height="Auto"
                            MinHeight="80"
                            HorizontalAlignment="Center"
                            HorizontalContentAlignment="Left"
                            Command="{Binding Data.AddKnockoutCommand, Source={StaticResource Proxy}}">
                        <Grid>
                            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean.Left}" Header="{my:Icon Kind=Tournament, Size=50}">
                                <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Small}">
                                    <TextBlock FontWeight="{StaticResource MyNet.Font.Weight.Header}" Text="{my:Resource AddKnockout, Casing=AllCaps}" />
                                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource AddKnockoutDescription}" TextWrapping="Wrap" />
                                </my:SimpleStackPanel>
                            </GroupBox>
                        </Grid>
                    </Button>
                    <Button Style="{StaticResource MyNet.Styles.Button.Elevation}"
                            Width="370"
                            Height="Auto"
                            MinHeight="80"
                            HorizontalAlignment="Center"
                            HorizontalContentAlignment="Left"
                            Command="{Binding Data.AddGroupStageCommand, Source={StaticResource Proxy}}">
                        <Grid>
                            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean.Left}" Header="{my:Icon Kind=FormatListGroup, Size=50}">
                                <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Small}">
                                    <TextBlock FontWeight="{StaticResource MyNet.Font.Weight.Header}" Text="{my:Resource AddGroupStage, Casing=AllCaps}" />
                                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource AddGroupStageDescription}" TextWrapping="Wrap" />
                                </my:SimpleStackPanel>
                            </GroupBox>
                        </Grid>
                    </Button>
                </my:SimpleStackPanel>
            </DataTemplate>
        </my:GhostControl.GhostTemplate>

        <DockPanel>
            <!--  ToolBar  -->
            <my:CommandsBar Margin="{StaticResource MyNet.Margins.Medium.Bottom}" DockPanel.Dock="Top">

                <my:CommandsBar.LeftCommands>
                    <ContentControl Content="{Binding SelectedItem}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type vm:KnockoutDetailsViewModel}">
                                <ToolBar Style="{StaticResource MyNet.Styles.ToolBar.Transparent}">
                                    <my:SplitButton Style="{StaticResource MyNet.Styles.SplitButton.ToolBar.Filled.Primary}"
                                                    my:IconAssist.Icon="{my:ToolIcon Kind=PlusThick}"
                                                    Command="{Binding MatchesViewModel.AddCommand}"
                                                    PopupPadding="0"
                                                    ToggleContent="{my:Resource New}"
                                                    ToolTip="Ctrl+N"
                                                    Visibility="{Binding MatchesViewModel.CanAdd, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                        <my:Submenu>
                                            <MenuItem Command="{Binding MatchesViewModel.AddMultipleCommand}"
                                                      Header="{my:Resource AddMatches}"
                                                      Icon="{my:ToolIcon Kind=PlusBoxMultiple}"
                                                      InputGestureText="Ctrl+Maj+N" />
                                        </my:Submenu>
                                    </my:SplitButton>
                                </ToolBar>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:GroupStageDetailsViewModel}">
                                <ToolBar Style="{StaticResource MyNet.Styles.ToolBar.Transparent}">
                                    <my:SplitButton x:Name="splitButton"
                                                Style="{StaticResource MyNet.Styles.SplitButton.Elevation.Primary}"
                                                my:IconAssist.Icon="{my:ToolIcon Kind=PlusThick}"
                                                Command="{Binding AddMatchdayCommand}"
                                                PopupPadding="0"
                                                ToggleContent="{my:Resource New}"
                                                ToolTip="Ctrl+N">
                                        <my:Submenu>
                                            <MenuItem Command="{Binding AddMatchdaysCommand}"
                                                  Header="{my:Resource AddMatchdays}"
                                                  Icon="{my:ToolIcon Kind=PlusBoxMultiple}"
                                                  InputGestureText="Ctrl+Maj+N" />
                                            <MenuItem my:ItemsControlAssist.SortingProperty="Date"
                                                  Header="{my:Resource AddMatches}"
                                                  Icon="{my:ToolIcon Kind=PlusBoxMultiple}"
                                                  ItemsSource="{Binding Item.Matchdays}">
                                                <MenuItem.ItemContainerStyle>
                                                    <Style BasedOn="{StaticResource MyNet.Styles.MenuItem}" TargetType="{x:Type MenuItem}">
                                                        <Setter Property="Header" Value="{Binding Name}" />
                                                        <Setter Property="Command" Value="{Binding DataContext.AddMatchesCommand, ElementName=splitButton}" />
                                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                                    </Style>
                                                </MenuItem.ItemContainerStyle>
                                            </MenuItem>
                                        </my:Submenu>
                                    </my:SplitButton>
                                </ToolBar>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </my:CommandsBar.LeftCommands>

                <my:CommandsBar.RightCommands>
                    <ToolBar Style="{StaticResource MyNet.Styles.ToolBar.Transparent}">

                        <!--  Rounds selection  -->
                        <my:SimpleStackPanel VerticalAlignment="Center" Orientation="Horizontal" Margin="{StaticResource MyNet.Margins.Medium.Horizontal}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Filled}"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="3"
                                          Width="230"
                                          Padding="4 4 50 4"
                                          HorizontalContentAlignment="Center"
                                          my:ComboBoxAssist.ShowCaret="False"
                                          my:HintAssist.Hint="{my:Resource AllRounds}"
                                          my:HintAssist.IsFloating="False"
                                          my:ItemsControlAssist.SortingProperty="Item.StartDate"
                                          my:ThemeAssist.CornerRadius="{StaticResource MyNet.CornerRadius.Control}"
                                          BorderThickness="1"
                                          DisplayMemberPath="Item.Name"
                                          ItemsSource="{Binding Items}"
                                          SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}">
                                    <my:IconAssist.Icon>
                                        <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                                Command="{Binding EditCommand}"
                                                CommandParameter="{Binding SelectedItem}"
                                                Content="{my:ToolIcon Kind=Edit}"
                                                ToolTip="{my:Resource Edit}"
                                                Visibility="{Binding SelectedItem, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                                    </my:IconAssist.Icon>
                                </ComboBox>
                                <Button Style="{StaticResource MyNet.Styles.Button.Icon}"
                                        Grid.Column="1"
                                        Command="{Binding PreviousCommand}"
                                        Content="{my:MediumIcon Kind=ChevronLeft}" />
                                <Button Style="{StaticResource MyNet.Styles.Button.Icon}"
                                        Grid.Column="2"
                                        Command="{Binding NextCommand}"
                                        Content="{my:MediumIcon Kind=ChevronRight}" />
                            </Grid>
                            <Button Style="{StaticResource MyNet.Styles.Button.Filled}"
                                    VerticalAlignment="Stretch"
                                    Command="{Binding LatestResultsCommand}"
                                    Content="{my:Resource LatestResults}" />
                            <Button Style="{StaticResource MyNet.Styles.Button.Filled}"
                                    VerticalAlignment="Stretch"
                                    Command="{Binding NextFixturesCommand}"
                                    Content="{my:Resource NextFixtures}" />
                        </my:SimpleStackPanel>

                        <!--  Filters  -->
                        <ContentControl Content="{Binding SelectedItem}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type vm:KnockoutDetailsViewModel}">
                                    <my:SimpleStackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <ContentControl Content="{Binding MatchesViewModel}" ContentTemplate="{StaticResource Teamup.DataTemplates.List.Count.Selectable}" />
                                        <my:FiltersDropDownView DataContext="{Binding MatchesViewModel.Filters}">
                                            <my:FiltersDropDownView.PopupContentTemplate>
                                                <DataTemplate>
                                                    <v:KnockoutMatchesSpeedFiltersView />
                                                </DataTemplate>
                                            </my:FiltersDropDownView.PopupContentTemplate>
                                        </my:FiltersDropDownView>
                                    </my:SimpleStackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:GroupStageDetailsViewModel}">
                                    <my:SimpleStackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <ContentControl Content="{Binding MatchesViewModel}" ContentTemplate="{StaticResource Teamup.DataTemplates.List.Count.Selectable}" />
                                        <my:FiltersDropDownView DataContext="{Binding MatchesViewModel.Filters}">
                                            <my:FiltersDropDownView.PopupContentTemplate>
                                                <DataTemplate>
                                                    <v:GroupStageMatchesSpeedFiltersView />
                                                </DataTemplate>
                                            </my:FiltersDropDownView.PopupContentTemplate>
                                        </my:FiltersDropDownView>
                                    </my:SimpleStackPanel>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </ToolBar>
                </my:CommandsBar.RightCommands>

                <!--  Selection Bar  -->
                <ContentControl Content="{Binding SelectedItem}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vm:KnockoutDetailsViewModel}">
                            <v:MacthesSelectionCommandsBar DataContext="{Binding MatchesViewModel}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:GroupStageDetailsViewModel}">
                            <v:MacthesSelectionCommandsBar DataContext="{Binding MatchesViewModel}" />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>

            </my:CommandsBar>

            <my:TransitioningContent Content="{Binding SelectedItem, Converter={x:Static my:ViewModelToViewConverter.Default}}" TriggerObject="{Binding SelectedItem}" />
        </DockPanel>
    </my:GhostControl>

</UserControl>
