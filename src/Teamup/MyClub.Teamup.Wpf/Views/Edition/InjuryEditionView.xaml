<my:ContentDialog x:Class="MyClub.Teamup.Wpf.Views.Edition.InjuryEditionView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
                  xmlns:utils="clr-namespace:MyNet.Utilities;assembly=MyNet.Utilities"
                  xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.Edition"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:my="http://mynet.com/xaml/themes"
                  Style="{StaticResource MyNet.Styles.ContentDialog}"
                  Width="595"
                  Height="550"
                  d:DataContext="{d:DesignInstance Type=vm:InjuryEditionViewModel}"
                  BusyService="{Binding BusyService, Mode=OneWay}"
                  HeaderHeight="70"
                  mc:Ignorable="d">
    <my:ContentDialog.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </my:ContentDialog.Resources>

    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Key="F5" Command="{Binding Data.RefreshCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Data.SaveAndCloseAsyncCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="Esc" Command="{Binding Data.CancelCommand, Source={StaticResource Proxy}}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <my:ContentDialog.Footer>
        <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Style="{StaticResource MyNet.Styles.Button.Refresh}" HorizontalAlignment="Right" Command="{Binding RefreshCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Cancel}" HorizontalAlignment="Right" Command="{Binding CancelCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Validate}" HorizontalAlignment="Right" Command="{Binding SaveAndCloseAsyncCommand}" />
        </my:SimpleStackPanel>
    </my:ContentDialog.Footer>
    
    <my:ContentDialog.Header>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--  Player  -->
            <my:SimpleStackPanel Opacity="{StaticResource MyNet.Opacity.Secondary}" Orientation="Horizontal" VerticalAlignment="Center">
                <my:PictureControl Style="{StaticResource Teamup.Styles.PictureControl.Player.Medium}" DataContext="{Binding Player}" />
                <StackPanel>
                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Title}" Text="{my:Translation Player.LastName, Casing=AllCaps}" />
                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}" Text="{Binding Player.FirstName}" />
                </StackPanel>
            </my:SimpleStackPanel>

            <!--  Condition  -->
            <TextBox x:Name="Condition"
                     Grid.Column="2"
                     Width="Auto"
                     HorizontalAlignment="Stretch"
                     my:FocusAssist.IsDefault="True"
                     my:HintAssist.FloatingScale="0.4"
                     my:HintAssist.Hint="{my:Resource Condition}"
                     my:HintAssist.IsFloating="True"
                     FontSize="{StaticResource MyNet.Font.Size.Title}"
                     Text="{Binding Condition, UpdateSourceTrigger=PropertyChanged}" />

            <!--  Info  -->
            <ContentControl Grid.Column="4"
                            VerticalAlignment="Top"
                            Content="{StaticResource MyNet.PackIcon.ItemTraking}"
                            Focusable="False" />
        </Grid>
    </my:ContentDialog.Header>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Type  -->
        <ctrl:InjurySelector VerticalAlignment="Top" Height="400" IsFemale="{Binding Player.Gender, Converter={x:Static my:EnumToBooleanConverter.Any}, ConverterParameter={x:Static utils:GenderType.Female}}" SelectedValue="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        <my:SimpleStackPanel Orientation="Vertical" Grid.Column="2">

            <!--  Category  -->
            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=Tag}">
                <ComboBox my:HintAssist.Hint="{my:Resource Category}"
                          DisplayMemberPath="Display"
                          IsTextSearchEnabled="True"
                          ItemsSource="{my:EnumSource {x:Type enums:InjuryCategory}}"
                          SelectedValue="{Binding Category}"
                          SelectedValuePath="Value" />
            </GroupBox>

            <!--  Severity  -->
            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=InformationCircle}">
                <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}"
                         my:ListBoxItemAssist.IsSelectedForeground="{DynamicResource MyNet.Brushes.White}"
                         SelectedValue="{Binding Severity, UpdateSourceTrigger=PropertyChanged}"
                         SelectedValuePath="DataContext">
                    <ListBoxItem my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.Injury.Minor}"
                                 Content="{my:Icon Kind=BatteryAlert}"
                                 DataContext="{x:Static enums:InjurySeverity.Minor}"
                                 ToolTip="{my:Resource InjurySeverityModerate}" />
                    <ListBoxItem my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.Injury.Moderate}"
                                 Content="{my:Icon Kind=Sleep}"
                                 DataContext="{x:Static enums:InjurySeverity.Moderate}"
                                 ToolTip="{my:Resource InjurySeverityModerate}" />
                    <ListBoxItem my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.Injury.Serious}"
                                 Content="{my:Icon Kind=Injection}"
                                 DataContext="{x:Static enums:InjurySeverity.Serious}"
                                 ToolTip="{my:Resource InjurySeveritySerious}" />
                    <ListBoxItem my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.Injury.Severe}"
                                 Content="{my:Icon Kind=Ambulance}"
                                 DataContext="{x:Static enums:InjurySeverity.Severe}"
                                 ToolTip="{my:Resource InjurySeveritySevere}" />
                </ListBox>
            </GroupBox>

            <!--  Description  -->
            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=TextSubject}">
                <TextBox Style="{StaticResource MyNet.Styles.TextBox.Outlined}"
                         Height="120"
                         VerticalContentAlignment="Top"
                         HorizontalAlignment="Stretch"
                         my:HintAssist.Hint="{my:Resource Description}"
                         my:HintAssist.IsFloating="True"
                         AcceptsReturn="True"
                         Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap"
                         VerticalScrollBarVisibility="Auto" />
            </GroupBox>

            <!--  Date  -->
            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=CalendarStart}">
                <DatePicker my:HintAssist.Hint="{my:Resource Date}" DisplayDate="{Binding DisplayDate}" SelectedDate="{Binding Date, UpdateSourceTrigger=PropertyChanged}" />
            </GroupBox>

            <!--  ExpectedReturn  -->
            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Header="{my:MediumIcon Kind=CalendarEnd}">
                <DatePicker my:HintAssist.Hint="{my:Resource ReturnDate}" DisplayDate="{Binding DisplayReturnDate}" SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged}" />
            </GroupBox>
        </my:SimpleStackPanel>
    </Grid>

</my:ContentDialog>
