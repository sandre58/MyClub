<my:ContentDialog x:Class="MyClub.Teamup.Wpf.Views.Edition.MyTeamsEditionView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:dd="urn:gong-wpf-dragdrop"
                  xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:my="http://mynet.com/xaml/themes"
                  xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.Edition"
                  Style="{StaticResource MyNet.Styles.ContentDialog}"
                  Width="950"
                  Height="500"
                  Padding="0"
                  d:DataContext="{d:DesignInstance Type=vm:MyTeamsEditionViewModel}"
                  my:ViewModelAssist.AutoWire="True"
                  BusyService="{Binding BusyService, Mode=OneWay}"
                  Header="{Binding Title}"
                  mc:Ignorable="d">
    <my:ContentDialog.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <DataTemplate x:Key="Teamup.DataTemplates.TeamColor.Embedded.DataGrid">
            <Grid VerticalAlignment="Center">
                <Grid Width="110" Height="20" VerticalAlignment="Center">
                    <Border Margin="2"
                            Background="{DynamicResource MyNet.Brushes.Transparency.Small}"
                            CornerRadius="2"
                            Effect="{StaticResource MyNet.Shadows.Elevation1}"
                            ToolTip="{Binding}"
                            Visibility="{Binding Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}">
                        <Border Background="{Binding Converter={x:Static my:ColorToBrushConverter.Default}}" CornerRadius="2" />
                    </Border>
                </Grid>
                <TextBlock FontStyle="Italic"
                           IsHitTestVisible="False"
                           Opacity="{StaticResource MyNet.Opacity.Secondary}"
                           Text="{my:Resource Inherited}"
                           Visibility="{Binding Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Teamup.DataTemplates.Stadium.Embedded.DataGrid">
            <Grid VerticalAlignment="Center">
                <TextBlock IsHitTestVisible="False" Text="{Binding DisplayName}" Visibility="{Binding Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                <TextBlock FontStyle="Italic"
                           IsHitTestVisible="False"
                           Opacity="{StaticResource MyNet.Opacity.Secondary}"
                           Text="{my:Resource Inherited}"
                           Visibility="{Binding Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
            </Grid>
        </DataTemplate>
    </my:ContentDialog.Resources>

    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding Data.AddCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="F5" Command="{Binding Data.RefreshCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Data.SaveAndCloseAsyncCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="Esc" Command="{Binding Data.CancelCommand, Source={StaticResource Proxy}}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <my:ContentDialog.Footer>
        <DockPanel>
            <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Custom}"
                    my:IconAssist.Icon="{my:Icon Kind=OrderNumericAscending}"
                    Background="{DynamicResource MyNet.Brushes.Warning}"
                    Command="{Binding ConsolidateOrderCommand}"
                    Content="{my:Resource Consolidate}"
                    ToolTip="Ctrl+O" />

            <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Style="{StaticResource MyNet.Styles.Button.Refresh}" HorizontalAlignment="Right" Command="{Binding RefreshCommand}" />
                <Button Style="{StaticResource MyNet.Styles.Button.Cancel}" HorizontalAlignment="Right" Command="{Binding CancelCommand}" />
                <Button Style="{StaticResource MyNet.Styles.Button.Validate}" HorizontalAlignment="Right" Command="{Binding SaveAndCloseAsyncCommand}" />
            </my:SimpleStackPanel>

        </DockPanel>
    </my:ContentDialog.Footer>

    <DockPanel>

        <!--  Warning  -->
        <Label Style="{StaticResource MyNet.Styles.Label.Warning.Dialog}"
               Content="{my:Resource ConsolidateTeamsWarning}"
               DockPanel.Dock="Top"
               Visibility="{Binding HasInvalidOrder, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

        <!--  Teams  -->
        <DataGrid dd:DragDrop.DropHandler="{Binding DropHandler}"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
                  dd:DragDrop.UseDefaultDragAdorner="True"
                  CanUserSortColumns="False"
                  HeadersVisibility="Column"
                  ItemsSource="{Binding Teams}"
                  SelectedItem="{Binding SelectedItem}">
            <DataGrid.Columns>

                <!--  Order  -->
                <my:DataGridTemplateColumn Width="50">
                    <my:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Background="Transparent" Cursor="SizeAll">
                                <my:PackIcon Width="30"
                                             Height="30"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Kind="DragVertical" />
                            </Grid>
                        </DataTemplate>
                    </my:DataGridTemplateColumn.CellTemplate>
                </my:DataGridTemplateColumn>

                <!--  Category  -->
                <my:DataGridComboBoxColumn Width="100"
                                           DisplayMemberPath="Display"
                                           Header="{my:Resource Category}"
                                           ItemsSource="{my:EnumerationSource EnumType={x:Type enums:Category}}"
                                           SelectedValueBinding="{Binding Category}"
                                           SelectedValuePath="Value" />

                <!--  Name  -->
                <my:DataGridTextColumn Width="150" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Name}" />

                <!--  ShortName  -->
                <my:DataGridTextColumn Width="100" Binding="{Binding ShortName, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource ShortName}" />

                <!--  HomeColor  -->
                <my:DataGridColorColumn Width="125"
                                        Binding="{Binding HomeColor, UpdateSourceTrigger=PropertyChanged}"
                                        CellTemplate="{StaticResource Teamup.DataTemplates.TeamColor.Embedded.DataGrid}"
                                        HasClearButton="True"
                                        Header="{my:Resource LocationHome}" />

                <!--  AwayColor  -->
                <my:DataGridColorColumn Width="125"
                                        Binding="{Binding AwayColor, UpdateSourceTrigger=PropertyChanged}"
                                        CellTemplate="{StaticResource Teamup.DataTemplates.TeamColor.Embedded.DataGrid}"
                                        HasClearButton="True"
                                        Header="{my:Resource LocationAway}" />

                <!--  Stadium  -->
                <my:DataGridComboBoxColumn Width="*"
                                           CellTemplate="{StaticResource Teamup.DataTemplates.Stadium.Embedded.DataGrid}"
                                           HasClearButton="True"
                                           Header="{my:Resource Stadium}"
                                           IsEditable="True"
                                           ItemsSourceBinding="{Binding Data.StadiumSelection.Items, Source={StaticResource Proxy}}"
                                           SelectedValueBinding="{Binding Stadium, UpdateSourceTrigger=PropertyChanged}">
                    <my:DataGridComboBoxColumn.Icon>
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                    Command="{Binding Data.StadiumSelection.ImportFromDatabaseCommand, Source={StaticResource Proxy}}"
                                    Content="{my:Icon Kind=DatabaseSearch}"
                                    ToolTip="{my:Resource ImportFromDatabase}"
                                    Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                    Command="{Binding Data.StadiumSelection.AddCommand, Source={StaticResource Proxy}}"
                                    Content="{my:Icon Kind=Plus}"
                                    ToolTip="{my:Resource CreateStadium}"
                                    Visibility="{Binding Stadium, UpdateSourceTrigger=PropertyChanged, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                    Command="{Binding Data.StadiumSelection.EditCommand, Source={StaticResource Proxy}}"
                                    CommandParameter="{Binding Stadium}"
                                    Content="{my:Icon Kind=Edit,
                                                      Size=18}"
                                    ToolTip="{my:Resource EditStadium}"
                                    Visibility="{Binding Stadium, UpdateSourceTrigger=PropertyChanged, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                        </StackPanel>
                    </my:DataGridComboBoxColumn.Icon>
                </my:DataGridComboBoxColumn>

                <!--  Delete  -->
                <my:DataGridTemplateColumn Width="60">
                    <my:DataGridTemplateColumn.Header>
                        <Button Style="{StaticResource MyNet.Styles.Button.Icon}"
                                Margin="-8 -15"
                                Padding="0"
                                HorizontalAlignment="Center"
                                Command="{Binding Data.AddCommand, Source={StaticResource Proxy}}"
                                Content="{my:MediumIcon Kind=Plus}"
                                ToolTip="{my:ShortcutResource Add,
                                                              ShortcutKey='Ctrl+N'}" />
                    </my:DataGridTemplateColumn.Header>
                    <my:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource MyNet.Styles.Button.Icon.Remove}"
                                    HorizontalAlignment="Center"
                                    Command="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}"
                                    CommandParameter="{Binding}" />
                        </DataTemplate>
                    </my:DataGridTemplateColumn.CellTemplate>
                </my:DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</my:ContentDialog>
