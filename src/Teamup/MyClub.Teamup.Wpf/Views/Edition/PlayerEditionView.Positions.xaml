<UserControl x:Class="MyClub.Teamup.Wpf.Views.Edition.PlayerEditionPositionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.Edition"
             d:DataContext="{d:DesignInstance Type=vm:PlayerEditionViewModel}"
             Focusable="False"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ctrl:PositionsSelector x:Name="Positions"
                                Style="{StaticResource Teamup.Styles.PositionsSelector.RatedPosition}"
                                Grid.Row="0"
                                Width="420"
                                Height="336"
                                VerticalAlignment="Top"
                                CanMove="False"
                                ItemsSource="{Binding AllPositions}"
                                SelectionMode="Multiple">
            <ctrl:PositionsSelector.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Label x:Name="label" Style="{StaticResource Teamup.Styles.Label.Embedded.PositionItem}" Content="{my:Translation Position, Abbreviate=True}" />
                        <my:PopupEx x:Name="Popup"
                                    HorizontalOffset="0"
                                    Placement="Right"
                                    PlacementTarget="{Binding ElementName=label}"
                                    PopupAnimation="Fade"
                                    StaysOpen="True"
                                    VerticalOffset="-20">
                            <Grid>
                                <Border Background="White" Opacity="0.002" />
                                <my:Card Style="{StaticResource MyNet.Styles.Card.Popup}"
                                         Padding="{StaticResource MyNet.Margins.Medium}"
                                         Background="{DynamicResource MyNet.Brushes.Popup.Background}"
                                         FontSize="{StaticResource MyNet.Font.Size}"
                                         FontWeight="{StaticResource MyNet.Font.Weight.ToolTip}"
                                         Foreground="{DynamicResource MyNet.Brushes.Application.Foreground}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="5" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <CheckBox my:ThemeAssist.IsCheckedBackground="{DynamicResource MyNet.Brushes.Gold}"
                                                  Content="{my:Translation Position}"
                                                  IsChecked="{Binding IsNatural}"
                                                  ToolTip="{my:Resource IsNatural}" />
                                        <my:RatingBar Style="{StaticResource MyNet.Styles.RatingBar}"
                                                      Grid.Row="2"
                                                      ClipToBounds="False"
                                                      Foreground="{DynamicResource MyNet.Brushes.Gold}"
                                                      Value="{Binding Rating, Converter={x:Static my:EnumToIntConverter.Default}, Mode=TwoWay}">
                                            <my:RatingBar.ToolTip>
                                                <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}">
                                                    <TextBlock Text="{my:Resource Level}" />
                                                    <TextBlock Text=":" />
                                                    <TextBlock Text="{my:Translation Rating}" />
                                                </my:SimpleStackPanel>
                                            </my:RatingBar.ToolTip>
                                        </my:RatingBar>
                                    </Grid>
                                </my:Card>
                            </Grid>
                        </my:PopupEx>
                    </Grid>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionsSelector}}}" Value="True" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Popup" Property="IsOpen" Value="True" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionsSelector}}}" Value="True" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="label" Property="Background" Value="{DynamicResource MyNet.Brushes.White}" />
                            <Setter TargetName="label" Property="BorderThickness" Value="0" />
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ctrl:PositionsSelector.ItemTemplate>
            <i:Interaction.Behaviors>
                <my:ListBoxSelectionBehavior SelectedItems="{Binding SelectedPositions}" />
            </i:Interaction.Behaviors>
        </ctrl:PositionsSelector>

        <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                Grid.Row="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                my:IconAssist.Icon="{my:Icon Kind=CloseCircle}"
                Command="{Binding RemoveAllPositionsCommand}"
                Content="{my:Resource ClearSelection}" />
    </Grid>
</UserControl>