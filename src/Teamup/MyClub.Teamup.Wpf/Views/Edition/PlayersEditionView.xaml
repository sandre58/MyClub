<my:ContentDialog x:Class="MyClub.Teamup.Wpf.Views.Edition.PlayersEditionView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:entities="clr-namespace:MyClub.Teamup.Domain.SquadAggregate;assembly=MyClub.Teamup.Domain"
                  xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
                  xmlns:enums2="clr-namespace:MyClub.Teamup.Domain.Enums;assembly=MyClub.Teamup.Domain"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:my="http://mynet.com/xaml/themes"
                  xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.Edition"
                  Width="550"
                  Height="500"
                  d:DataContext="{d:DesignInstance Type=vm:PlayersEditionViewModel}"
                  BusyService="{Binding BusyService, Mode=OneWay}"
                  Header="{Binding}"
                  HeaderHeight="70"
                  mc:Ignorable="d">
    <my:ContentDialog.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </my:ContentDialog.Resources>

    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Data.SaveAndCloseAsyncCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="Esc" Command="{Binding Data.CloseCommand, Source={StaticResource Proxy}}" CommandParameter="{x:Static my:Booleans.False}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <my:ContentDialog.Footer>
        <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Style="{StaticResource MyNet.Styles.Button.Reset}" HorizontalAlignment="Right" Command="{Binding ResetCommand}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Cancel}"
                    HorizontalAlignment="Right"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{x:Static my:Booleans.False}" />
            <Button Style="{StaticResource MyNet.Styles.Button.Validate}" HorizontalAlignment="Right" Command="{Binding SaveAndCloseAsyncCommand}" />
        </my:SimpleStackPanel>
    </my:ContentDialog.Footer>

    <my:ContentDialog.HeaderTemplate>
        <DataTemplate>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Text="{my:Translation Players.Count, Format=EditionOfXItems, Pluralize=True}" />
                <ItemsControl Grid.Row="2" Focusable="True" ItemsSource="{Binding Players}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <my:PictureControl Style="{StaticResource Teamup.Styles.PictureControl.Player.SmallMedium}" Margin="{StaticResource MyNet.Margins.Small}" ToolTip="{Binding FullName}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </DataTemplate>
    </my:ContentDialog.HeaderTemplate>

    <my:SimpleStackPanel>

        <!--  Category  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Margin="{StaticResource MyNet.Margins.Large.Bottom}" Header="{my:MediumIcon Kind=Label}">
            <ComboBox my:EditionAssist.MultipleEditableValue="{Binding Category, Mode=OneWay}"
                      my:HintAssist.HelperTextMargin="28 -30 0 0"
                      my:HintAssist.Hint="{my:Resource Category}"
                      my:ItemsControlAssist.SortingProperty="Value"
                      my:TextFieldAssist.HasClearButton="True"
                      DisplayMemberPath="Display"
                      IsTextSearchEnabled="True"
                      ItemsSource="{my:EnumerationSource EnumType={x:Type enums:Category}}"
                      SelectedValue="{Binding Category.Value, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValuePath="Value" />
        </GroupBox>

        <!--  Country  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Margin="{StaticResource MyNet.Margins.Large.Bottom}" Header="{my:MediumIcon Kind=Globe}">
            <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Country}"
                      Width="{StaticResource MyNet.Widths.Control.VeryLarge}"
                      my:EditionAssist.MultipleEditableValue="{Binding Country, Mode=OneWay}"
                      my:HintAssist.HelperTextMargin="28 -30 0 0"
                      my:HintAssist.Hint="{my:Resource Nationality}"
                      my:HintAssist.IsFloating="True"
                      my:TextFieldAssist.HasClearButton="True"
                      SelectedValue="{Binding Country.Value, UpdateSourceTrigger=PropertyChanged}" />
        </GroupBox>

        <!--  LicenseState  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Margin="{StaticResource MyNet.Margins.Large.Bottom}" Header="{my:MediumIcon Kind=BadgeAccountHorizontal}">
            <my:SimpleStackPanel Margin="2 0 0 0" Orientation="Horizontal">
                <CheckBox IsChecked="{Binding LicenseState.IsActive}" ToolTip="{my:Resource Edit}">
                    <CheckBox.Style>
                        <Style BasedOn="{StaticResource MyNet.Styles.CheckBox}" TargetType="{x:Type CheckBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LicenseState.IsActive}" Value="False">
                                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Medium}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <ListBox Style="{StaticResource MyNet.Styles.ListBox.Toggle}"
                         my:EditionAssist.MultipleEditableValue="{Binding LicenseState}"
                         my:IconAssist.Alignment="Top"
                         my:IconAssist.Margin="{StaticResource MyNet.Margins.Small.Bottom}"
                         SelectedValue="{Binding LicenseState.Value, UpdateSourceTrigger=PropertyChanged}"
                         SelectedValuePath="DataContext">
                    <ListBoxItem Width="70"
                                 Height="50"
                                 my:IconAssist.Icon="{my:Icon Kind=QuestionMarkRhombus}"
                                 my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.License.Unknown}"
                                 my:ListBoxItemAssist.IsSelectedForeground="{StaticResource MyNet.Brushes.White}"
                                 Content="{my:Resource LicenseStateUnknown}"
                                 DataContext="{x:Static enums2:LicenseState.Unknown}" />
                    <ListBoxItem Width="70"
                                 my:IconAssist.Icon="{my:Icon Kind=CardBulletedSettings}"
                                 my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.License.Given}"
                                 my:ListBoxItemAssist.IsSelectedForeground="{StaticResource MyNet.Brushes.White}"
                                 Content="{my:Resource LicenseStateGiven}"
                                 DataContext="{x:Static enums2:LicenseState.Given}" />
                    <ListBoxItem Width="70"
                                 my:IconAssist.Icon="{my:Icon Kind=AssignmentReturn}"
                                 my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.License.Back}"
                                 my:ListBoxItemAssist.IsSelectedForeground="{StaticResource MyNet.Brushes.White}"
                                 Content="{my:Resource LicenseStateBack}"
                                 DataContext="{x:Static enums2:LicenseState.Back}" />
                    <ListBoxItem Width="70"
                                 my:IconAssist.Icon="{my:Icon Kind=Dollar}"
                                 my:ListBoxItemAssist.IsSelectedBackground="{DynamicResource Teamup.Brushes.License.Paid}"
                                 my:ListBoxItemAssist.IsSelectedForeground="{StaticResource MyNet.Brushes.White}"
                                 Content="{my:Resource LicenseStatePaid}"
                                 DataContext="{x:Static enums2:LicenseState.Paid}" />
                </ListBox>
            </my:SimpleStackPanel>
        </GroupBox>

        <!--  IsMutation  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Margin="{StaticResource MyNet.Margins.Large.Bottom}" Header="{my:Resource IsMutation}">
            <my:SimpleStackPanel Margin="2 0 0 0" Orientation="Horizontal">
                <CheckBox IsChecked="{Binding IsMutation.IsActive}" ToolTip="{my:Resource Edit}">
                    <CheckBox.Style>
                        <Style BasedOn="{StaticResource MyNet.Styles.CheckBox}" TargetType="{x:Type CheckBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMutation.IsActive}" Value="False">
                                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Medium}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Switch}"
                              my:EditionAssist.MultipleEditableValue="{Binding IsMutation}"
                              my:ToggleButtonAssist.OnContent="{my:Resource Yes}"
                              Content="{my:Resource No}"
                              ContentTemplate="{x:Null}"
                              IsChecked="{Binding IsMutation.Value, UpdateSourceTrigger=PropertyChanged}" />
            </my:SimpleStackPanel>
        </GroupBox>

        <!--  Clothes  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Margin="{StaticResource MyNet.Margins.Large.Bottom}" Header="{my:MediumIcon Kind=TshirtCrew}">
            <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.AutoCompletion}"
                      Width="140"
                      my:TextFieldAssist.PreviousCommand="{Binding DownSizeCommand}"
                      my:ComboBoxAssist.ShowCaret="False"
                      my:ComboBoxAssist.ShowDropDownPopup="True"
                      my:ComboBoxAssist.ShowUpDownButton="True"
                      my:TextFieldAssist.NextCommand="{Binding UpSizeCommand}"
                      my:EditionAssist.MultipleEditableValue="{Binding Size, Mode=OneWay}"
                      my:HintAssist.HelperTextMargin="28 -30 0 0"
                      my:HintAssist.Hint="{my:Resource Size}"
                      my:HintAssist.IsFloating="True"
                      my:TextFieldAssist.HasClearButton="True"
                      ItemsSource="{Binding Sizes}"
                      Text="{Binding Size.Value, UpdateSourceTrigger=PropertyChanged}" />
        </GroupBox>


        <!--  Shoes  -->
        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Edition}" Margin="{StaticResource MyNet.Margins.Large.Bottom}" Header="{my:MediumIcon Kind=ShoeFormal}">
            <my:NumericUpDown Width="140"
                              my:EditionAssist.MultipleEditableValue="{Binding ShoesSize, Mode=OneWay}"
                              my:HintAssist.HelperTextMargin="28 -45 0 0"
                              my:HintAssist.Hint="{my:Resource ShoesSize}"
                              my:TextFieldAssist.HasClearButton="True"
                              Maximum="{Binding Max, Source={x:Static entities:SquadPlayer.AcceptableRangeShoesSize}}"
                              Minimum="{Binding Min, Source={x:Static entities:SquadPlayer.AcceptableRangeShoesSize}}"
                              Value="{my:NullableBinding ShoesSize.Value,
                                                         UpdateSourceTrigger=PropertyChanged}" />
        </GroupBox>
    </my:SimpleStackPanel>

</my:ContentDialog>