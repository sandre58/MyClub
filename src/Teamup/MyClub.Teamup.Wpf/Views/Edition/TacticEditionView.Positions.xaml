<UserControl x:Class="MyClub.Teamup.Wpf.Views.Edition.TacticEditionPositionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:views="clr-namespace:MyNet.Wpf.Presentation.Views.Edition;assembly=MyNet.Wpf.Presentation"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.Edition"
             d:DataContext="{d:DesignInstance Type=vm:TacticEditionViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  Positions  -->
        <ctrl:PositionsSelector x:Name="Positions"
                                Style="{StaticResource Teamup.Styles.PositionsSelector.TacticPosition}"
                                Grid.Row="0"
                                Width="550"
                                Height="420"
                                ItemsSource="{Binding AllPositions}"
                                SelectionMode="Multiple">
            <ctrl:PositionsSelector.ItemContainerStyle>
                <Style BasedOn="{StaticResource Teamup.Styles.PositionItem}" TargetType="{x:Type ctrl:PositionItem}">
                    <Setter Property="Background" Value="{Binding Data.HomeColor, Source={StaticResource Proxy}, Converter={x:Static my:BrushConverter.Default}}" />
                </Style>
            </ctrl:PositionsSelector.ItemContainerStyle>
            <ctrl:PositionsSelector.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <my:PackIcon Grid.Row="0"
                                     Width="Auto"
                                     Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=0.65}"
                                     HorizontalAlignment="Center"
                                     Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}"
                                     Kind="TshirtCrew" />
                        <Label x:Name="label"
                               Style="{StaticResource MyNet.Styles.Label.Elevation.Custom}"
                               Grid.Row="2"
                               Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=0.5}"
                               MinWidth="40"
                               Margin="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={x:Static my:DoubleThicknessToConverter.Top}}"
                               Padding="0 2"
                               HorizontalAlignment="Center"
                               my:ThemeAssist.UniformCornerRadius="8"
                               Background="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}"
                               Content="{my:Translation Position,
                                                        Abbreviation=True}"
                               FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}"
                               Foreground="{my:BrushBinding BorderBrush,
                                                            Contrast=True,
                                                            RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}"
                               Tag="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=-0.15}" />
                        <TextBlock x:Name="number"
                                   Grid.RowSpan="2"
                                   HorizontalAlignment="Center"
                                   FontSize="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=0.18}"
                                   Text="{Binding Number.Value}" />

                        <my:PopupEx x:Name="Popup"
                                    HorizontalOffset="0"
                                    Placement="Right"
                                    PlacementTarget="{Binding ElementName=label}"
                                    PopupAnimation="Fade"
                                    StaysOpen="True"
                                    VerticalOffset="-50">
                            <Grid>
                                <Border Background="White" Opacity="0.002" />
                                <my:Card Style="{StaticResource MyNet.Styles.Card.Popup}"
                                         Padding="{StaticResource MyNet.Margins.Medium}"
                                         Background="{DynamicResource MyNet.Brushes.Popup.Background}"
                                         FontSize="{StaticResource MyNet.Font.Size}"
                                         FontWeight="{StaticResource MyNet.Font.Weight.ToolTip}"
                                         Foreground="{DynamicResource MyNet.Brushes.Application.Foreground}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="10" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <my:NumericUpDown Grid.Column="0" my:IconAssist.Icon="{my:Resource NumberAbbr}" my:NumericUpDownAssist.AcceptableValue="{Binding Number}" />
                                        <TextBlock Grid.Column="2" Text="{my:Translation Position}" />

                                        <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                                                Grid.Column="3"
                                                Command="{Binding ResetOffsetCommand}"
                                                Content="{my:Icon Kind=Restore}" />

                                        <Button Style="{StaticResource MyNet.Styles.Button.HyperLink.Foreground}"
                                                Grid.Row="2"
                                                Grid.ColumnSpan="4"
                                                Command="{Binding Data.ShowPositionInstructionsCommand, Source={StaticResource Proxy}}"
                                                CommandParameter="{Binding}"
                                                Content="{my:Translation InstructionsViewModel.Count,
                                                                         Format=XInstructions}"
                                                Visibility="{Binding InstructionsViewModel.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                                        <Button Style="{StaticResource MyNet.Styles.Button.HyperLink.Foreground}"
                                                Grid.Row="2"
                                                Grid.ColumnSpan="4"
                                                my:IconAssist.Icon="{my:Icon Kind=PlusCircle}"
                                                Command="{Binding Data.ShowPositionInstructionsCommand, Source={StaticResource Proxy}}"
                                                CommandParameter="{Binding}"
                                                Content="{my:Resource AddInstructions}"
                                                Visibility="{Binding InstructionsViewModel.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfAny}}" />
                                    </Grid>
                                </my:Card>
                            </Grid>
                        </my:PopupEx>
                    </Grid>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionsSelector}}}" Value="True" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Popup" Property="IsOpen" Value="True" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionsSelector}}}" Value="True" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ctrl:PositionItem}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="label" Property="Background" Value="{DynamicResource MyNet.Brushes.White}" />
                            <Setter TargetName="number" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ctrl:PositionsSelector.ItemTemplate>
            <i:Interaction.Behaviors>
                <my:ListBoxSelectionBehavior SelectedItems="{Binding SelectedPositions}" />
            </i:Interaction.Behaviors>
        </ctrl:PositionsSelector>

        <my:OverlayDialogControl Grid.Row="0"
                                 CloseOnClickAway="True"
                                 Header="Header"
                                 IsOpen="{Binding ShowInstructions}">
            <StackPanel>
                <my:ContentDialog Width="500" Height="300" Header="{my:Translation Data.EditingPosition.Position, Source={StaticResource Proxy}}" DataContext="{x:Null}">
                    <views:StringListEditionView DataContext="{Binding Data.EditingPosition.InstructionsViewModel, Source={StaticResource Proxy}}" />
                </my:ContentDialog>
            </StackPanel>
        </my:OverlayDialogControl>

        <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                Grid.Row="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                my:IconAssist.Icon="{my:Icon Kind=CloseCircle}"
                Command="{Binding RemoveAllPositionsCommand}"
                Content="{my:Resource ClearSelection}" />

        <Button Style="{StaticResource MyNet.Styles.Button.Reset}"
                Grid.Row="4"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Command="{Binding ResetAllPositionsCommand}"
                Content="{my:Resource Reset}" />
    </Grid>

</UserControl>
