<UserControl x:Class="MyClub.Teamup.Wpf.Views.Edition.TrainingAttendancesEditionDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
             xmlns:enums2="clr-namespace:MyClub.Teamup.Domain.Enums;assembly=MyClub.Teamup.Domain"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.Edition"
             d:DataContext="{d:DesignInstance Type=vm:TrainingAttendancesEditionViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <Style x:Key="Teamup.Styles.ListBox.Attendances.Details" BasedOn="{StaticResource MyNet.Styles.ListBox.Cards}" TargetType="{x:Type ListBox}">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="3" IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="my:ItemsControlAssist.SortingProperty" Value="Attendance;Player.InverseName" />
            <Setter Property="my:ListBoxItemAssist.ShowSelection" Value="False" />
            <Setter Property="my:ThemeAssist.IsCheckedForeground" Value="{my:BrushBinding SelfPath=(my:ThemeAssist.IsCheckedBackground), Contrast=True}" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Card}" TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Foreground" Value="{my:BrushBinding SelfPath=Background, Contrast=True}" />
                        <Setter Property="my:ThemeAssist.IsCheckedForeground" Value="{my:BrushBinding SelfPath=Foreground}" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Height" Value="150" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Present}">
                                <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Positive}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Absent}">
                                <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Negative}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Apology}">
                                <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Warning}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Injured}">
                                <Setter Property="Background" Value="{DynamicResource Teamup.Brushes.Attendance.Injured}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.InHolidays}">
                                <Setter Property="Background" Value="{DynamicResource Teamup.Brushes.Attendance.InHolidays}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.InSelection}">
                                <Setter Property="Background" Value="{DynamicResource Teamup.Brushes.Attendance.InSelection}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Resting}">
                                <Setter Property="Background" Value="{DynamicResource Teamup.Brushes.Attendance.Resting}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!--  Photo  -->
                                <my:PictureControl Style="{StaticResource Teamup.Styles.PictureControl.Player.Small}" VerticalAlignment="Top" DataContext="{Binding Player}" />

                                <StackPanel Grid.Column="2">
                                    <TextBlock Text="{Binding Player.FullName}" />
                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{Binding Player.Team.Name}" />
                                </StackPanel>

                                <ComboBox x:Name="rating"
                                          Style="{StaticResource MyNet.Styles.ComboBox.Numeric.Foreground}"
                                          Grid.Column="4"
                                          Width="80"
                                          my:TextFieldAssist.PreviousCommand="{Binding DownRatingCommand}"
                                          my:TextFieldAssist.NextCommand="{Binding UpRatingCommand}"
                                          my:HintAssist.Hint="{my:Resource Rating}"
                                          my:HintAssist.IsFloating="True"
                                          ItemsSource="{Binding AllowedRatings}"
                                          Text="{my:NullableBinding Rating.Value,
                                                                    UpdateSourceTrigger=PropertyChanged}"
                                          Visibility="{Binding Attendance, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static enums2:Attendance.Present}}" />

                                <my:PackIcon x:Name="AttendanceIcon"
                                             Grid.Column="4"
                                             Width="24"
                                             Height="24"
                                             Kind="Help"
                                             ToolTip="{my:Translation Attendance}"
                                             Visibility="{Binding Visibility, Converter={x:Static my:EqualityToVisibilityConverter.CollapsedIfEqual}, ConverterParameter=Visible, ElementName=rating}" />
                            </Grid>

                            <TextBox Style="{StaticResource MyNet.Styles.TextBox.Foreground}"
                                     Grid.Row="2"
                                     Width="Auto"
                                     Margin="{StaticResource MyNet.Margins.Medium.Bottom}"
                                     HorizontalAlignment="Stretch"
                                     my:HintAssist.Hint="{my:Resource Reason}"
                                     my:HintAssist.IsFloating="True"
                                     Text="{Binding Reason, UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{Binding Attendance, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static enums2:Attendance.Apology}}" />

                            <TextBox Style="{StaticResource MyNet.Styles.TextBox.Outlined.Foreground}"
                                     Grid.Row="3"
                                     Width="Auto"
                                     Height="Auto"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     VerticalContentAlignment="Top"
                                     my:HintAssist.Hint="{my:Resource Comment}"
                                     my:HintAssist.IsFloating="True"
                                     AcceptsReturn="True"
                                     Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}"
                                     TextWrapping="Wrap"
                                     VerticalScrollBarVisibility="Auto" />
                        </Grid>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Present}">
                                <Setter TargetName="AttendanceIcon" Property="Kind" Value="CheckboxMarkedCircle" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Absent}">
                                <Setter TargetName="AttendanceIcon" Property="Kind" Value="Cancel" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Apology}">
                                <Setter TargetName="AttendanceIcon" Property="Kind" Value="MessageProcessing" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Injured}">
                                <Setter TargetName="AttendanceIcon" Property="Kind" Value="Ambulance" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.InHolidays}">
                                <Setter TargetName="AttendanceIcon" Property="Kind" Value="Beach" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.InSelection}">
                                <Setter TargetName="AttendanceIcon" Property="Kind" Value="Star" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Attendance}" Value="{x:Static enums2:Attendance.Resting}">
                                <Setter TargetName="AttendanceIcon" Property="Kind" Value="Sleep" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <my:GhostControl GhostTemplate="{StaticResource Teamup.DataTemplates.Ghost.NoData.Large}" ShowGhost="{Binding AllAttendances.Count, Converter={x:Static my:CountToBooleanConverter.NotAny}}">
        <Grid>
            <ListBox Style="{StaticResource Teamup.Styles.ListBox.Attendances.Details}" VerticalAlignment="Top" ItemsSource="{Binding AllAttendances}" />
        </Grid>
    </my:GhostControl>

</UserControl>