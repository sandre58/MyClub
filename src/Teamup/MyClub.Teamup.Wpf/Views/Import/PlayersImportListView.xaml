<UserControl x:Class="MyClub.Teamup.Wpf.Views.Import.PlayersImportListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:collections="clr-namespace:MyClub.Teamup.Wpf.Collections"
             xmlns:cst="clr-namespace:MyNet.Wpf.Constants;assembly=MyNet.Wpf"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
             xmlns:enums2="clr-namespace:MyClub.Teamup.Domain.Enums;assembly=MyClub.Teamup.Domain"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:loc="clr-namespace:MyNet.Utilities.Geography;assembly=MyNet.Utilities"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:utils="clr-namespace:MyNet.Utilities;assembly=MyNet.Utilities"
             xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.Import"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.Import"
             d:DataContext="{d:DesignInstance Type=vm:PlayersImportListViewModel}"
             mc:Ignorable="d">

    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MyNet.Styles.DataGridRow}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Item.Import}" Value="False">
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="EnumMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MyNet.Styles.MenuItem}">
            <Setter Property="CommandParameter" Value="{Binding Value}" />
            <Setter Property="Header" Value="{Binding Display}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                    <Setter Property="FontStyle" Value="Italic" />
                    <Setter Property="Header" Value="{my:Resource None}" />
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ItemsMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EnumMenuItemStyle}">
            <Setter Property="CommandParameter" Value="{Binding}" />
            <Setter Property="Header" Value="{Binding Label}" />
        </Style>

        <ContextMenu x:Key="DataGridContextMenu">

            <!-- Mode -->
            <MenuItem Command="{Binding ImportSelectionCommand}" Header="{my:Resource Import}" />
            <MenuItem Command="{Binding DoNotImportSelectionCommand}" Header="{my:Resource DoNotImport}" />

            <Separator />

            <!-- Gender -->
            <MenuItem Header="{my:Resource Gender}" ItemsSource="{my:EnumSource EnumType={x:Type utils:GenderType}}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EnumMenuItemStyle}">
                        <Setter Property="Command" Value="{Binding Data.SetGenderCommand, Source={StaticResource Proxy}}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <!-- Country -->
            <MenuItem Header="{my:Resource Nationality}" ItemsSource="{my:EnumerationSource EnumType={x:Type loc:Country}, OrderByDisplay=True, AddNullValue=True}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EnumMenuItemStyle}">
                        <Setter Property="Command" Value="{Binding Data.SetCountryCommand, Source={StaticResource Proxy}}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <!-- Category -->
            <MenuItem Header="{my:Resource Category}" ItemsSource="{my:EnumerationSource EnumType={x:Type enums:Category}, AddNullValue=True}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EnumMenuItemStyle}">
                        <Setter Property="Command" Value="{Binding Data.SetCategoryCommand, Source={StaticResource Proxy}}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <!-- Team -->
            <MenuItem my:ItemsControlAssist.SortingProperty="Order" Header="{my:Resource Team}" ItemsSource="{Binding Data.TeamsWithNullValue, Source={StaticResource Proxy}}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ItemsMenuItemStyle}">
                        <Setter Property="Command" Value="{Binding Data.SetTeamCommand, Source={StaticResource Proxy}}" />
                        <Setter Property="Header" Value="{Binding Name}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <MenuItem Header="{my:Resource Injuries}">
                <MenuItem Command="{Binding Data.SetImportInjuriesCommand, Source={StaticResource Proxy}}" CommandParameter="{x:Static cst:Booleans.True}" Header="{my:Resource Import}" />
                <MenuItem Command="{Binding Data.SetImportInjuriesCommand, Source={StaticResource Proxy}}" CommandParameter="{x:Static cst:Booleans.False}" Header="{my:Resource Ignore}" />
            </MenuItem>

            <!-- LicenseState -->
            <MenuItem Header="{my:Resource LicenseState}" ItemsSource="{my:EnumSource EnumType={x:Type enums2:LicenseState}}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EnumMenuItemStyle}">
                        <Setter Property="Command" Value="{Binding Data.SetLicenseStateCommand, Source={StaticResource Proxy}}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <!-- Laterality -->
            <MenuItem Header="{my:Resource Laterality}" ItemsSource="{my:EnumSource EnumType={x:Type enums:Laterality}}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource EnumMenuItemStyle}">
                        <Setter Property="Command" Value="{Binding Data.SetLateralityCommand, Source={StaticResource Proxy}}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <!-- Clear -->
            <MenuItem Command="{Binding ClearNumberCommand}" Header="{my:Resource ClearNumberColumn}" />
            <MenuItem Command="{Binding ClearFromDateCommand}" Header="{my:Resource ClearFromDateColumn}" />
            <MenuItem Command="{Binding ClearSizeCommand}" Header="{my:Resource ClearSizeColumn}" />
            <MenuItem Command="{Binding ClearShoesSizeCommand}" Header="{my:Resource ClearShoesSizeColumn}" />
            <MenuItem Command="{Binding ClearPhotoCommand}" Header="{my:Resource ClearPhotoColumn}" />

        </ContextMenu>

    </UserControl.Resources>

    <DockPanel>

        <!-- Filters -->
        <DockPanel Margin="{StaticResource MyNet.Margins.Medium}" DockPanel.Dock="Top">
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource Teamup.DataTemplates.List.Count}" DockPanel.Dock="Right" />
            <v:PlayersImportSpeedFiltersView DataContext="{Binding Filters}" />
        </DockPanel>

        <my:DynamicScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <DataGrid Width="1100"
                      Height="600"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserReorderColumns="False"
                      ContextMenu="{StaticResource DataGridContextMenu}"
                      FrozenColumnCount="4"
                      HeadersVisibility="All"
                      ItemsSource="{Binding Wrappers}"
                      MinRowHeight="50"
                      RowHeaderWidth="45"
                      RowStyle="{StaticResource DataGridRowStyle}"
                      SelectionMode="Extended">
                <DataGrid.Resources>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                    </Style>
                </DataGrid.Resources>
                <i:Interaction.Behaviors>
                    <my:DataGridSelectionBehavior SelectedItems="{Binding SelectedRows}" />
                </i:Interaction.Behaviors>
                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <my:PackIcon Width="25"
                                     Height="25"
                                     HorizontalAlignment="Center"
                                     Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                     Kind="Warning"
                                     Tag="{Binding DataContext.Warnings, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                     Visibility="{Binding DataContext.HasWarnings, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Converter={x:Static my:BooleanToVisibilityConverter.HiddenIfFalse}}">
                            <my:PackIcon.ToolTip>
                                <ToolTip>
                                    <ItemsControl ItemsSource="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType={x:Type ToolTip}}}" />
                                </ToolTip>
                            </my:PackIcon.ToolTip>
                        </my:PackIcon>
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>
                <DataGrid.Columns>
                    <my:DataGridCheckBoxColumn Width="50"
                                               Binding="{Binding Item.Import, UpdateSourceTrigger=PropertyChanged}"
                                               EditingElementStyle="{StaticResource Teamup.Styles.CheckBox.Embedded.DataGrid.Import.Edition}"
                                               ElementStyle="{StaticResource Teamup.Styles.CheckBox.Embedded.DataGrid.Import}" />
                    <my:DataGridTemplateColumn Header="{my:Resource Photo}">
                        <my:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <my:ImagePicker Style="{StaticResource MyNet.Styles.ImagePicker.Secondary}"
                                                Width="32"
                                                Height="32"
                                                VerticalAlignment="Center"
                                                my:TextFieldAssist.HasClearButton="False"
                                                SelectedImage="{Binding Item.Photo, Converter={x:Static my:BytesToImageConverter.Default}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                    <my:IconAssist.Icon>
                                        <my:GeometryIcon x:Name="GenderIcon"
                                                         Width="35"
                                                         Height="35"
                                                         Margin="0 0 0 -8"
                                                         Data="{StaticResource MyNet.Geometries.Male}"
                                                         Visibility="{Binding Item.Photo, UpdateSourceTrigger=PropertyChanged, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
                                    </my:IconAssist.Icon>
                                </my:ImagePicker>
                            </DataTemplate>
                        </my:DataGridTemplateColumn.CellTemplate>
                    </my:DataGridTemplateColumn>
                    <my:DataGridTextColumn Width="100" Binding="{Binding Item.LastName, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Header="{my:Resource LastName}" />
                    <my:DataGridTextColumn Width="100" Binding="{Binding Item.FirstName, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Header="{my:Resource FirstName}" />
                    <my:DataGridComboBoxColumn Width="90"
                                               Header="{my:Resource Gender}"
                                               ItemsSource="{my:EnumSource EnumType={x:Type utils:GenderType}}"
                                               SelectedValueBinding="{Binding Item.Gender}"
                                               SelectedValuePath="Value" />
                    <my:DataGridComboBoxColumn Width="150"
                                               Header="{my:Resource Nationality}"
                                               IsEditable="True"
                                               ItemsSource="{my:EnumerationSource EnumType={x:Type loc:Country},
                                                                                  OrderByDisplay=True}"
                                               SelectedValueBinding="{Binding Item.Country}"
                                               SelectedValuePath="Value" />
                    <my:DataGridDateColumn Width="100" Binding="{Binding Item.Birthdate, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Birthdate}">
                        <my:DataGridDateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{my:Translation Format=ShortDatePattern}" />
                            </DataTemplate>
                        </my:DataGridDateColumn.CellTemplate>
                    </my:DataGridDateColumn>
                    <my:DataGridTextColumn Width="100" Binding="{Binding Item.PlaceOfBirth, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource PlaceOfBirth}" />
                    <my:DataGridComboBoxColumn Width="90"
                                               Header="{my:Resource Category}"
                                               IsEditable="True"
                                               ItemsSource="{my:EnumerationSource EnumType={x:Type enums:Category}}"
                                               SelectedValueBinding="{Binding Item.Category}"
                                               SelectedValuePath="Value" />
                    <my:DataGridComboBoxColumn Width="90"
                                               DisplayMemberPath="Name"
                                               Header="{my:Resource Team}"
                                               IsEditable="True"
                                               ItemsSourceBinding="{Binding Source={x:Static collections:TeamsCollection.MyTeams}}"
                                               SelectedItemBinding="{Binding Item.Team}" />
                    <my:DataGridNumericColumn Width="70"
                                              Binding="{Binding Item.Number.Value, UpdateSourceTrigger=PropertyChanged}"
                                              Header="{my:Resource NumberAbbr}"
                                              MaximumBinding="{Binding Item.Number.Max}"
                                              MinimumBinding="{Binding Item.Number.Min}" />
                    <my:DataGridTemplateColumn Width="100" Header="{my:Resource Injuries}">
                        <my:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Style="{StaticResource MyNet.Styles.CheckBox.Foreground}"
                                          IsChecked="{Binding Item.ImportInjuries, UpdateSourceTrigger=PropertyChanged}"
                                          ToolTip="{my:Resource ImportInjuries}"
                                          Visibility="{Binding Item.Injuries.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                                    <my:SimpleStackPanel x:Name="content"
                                                         VerticalAlignment="Center"
                                                         Orientation="Horizontal"
                                                         Spacing="{StaticResource MyNet.Margin.Small}">
                                        <TextBlock Text="{Binding Item.Injuries.Count}" TextWrapping="NoWrap" />
                                        <TextBlock Text="{my:Resource InjuryOptionalPlural, Casing=LowerCase}" />
                                    </my:SimpleStackPanel>
                                </CheckBox>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Item.ImportInjuries}" Value="False">
                                        <Setter TargetName="content" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </my:DataGridTemplateColumn.CellTemplate>
                    </my:DataGridTemplateColumn>
                    <my:DataGridTemplateColumn Width="150" Header="{my:Resource Positions}">
                        <my:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <my:SimpleStackPanel VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.Small}">
                                    <TextBlock Text="{my:Translation Item.Position}" TextWrapping="NoWrap" />
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}" Visibility="{Binding Item.Positions.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotMany}}">
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="+" />
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{Binding Item.Positions.Count, Converter={x:Static my:MathConverter.Subtract}, ConverterParameter=1}" TextWrapping="NoWrap" />
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{my:Resource PositionOptionalPlural, Casing=LowerCase}" />
                                    </my:SimpleStackPanel>
                                </my:SimpleStackPanel>
                            </DataTemplate>
                        </my:DataGridTemplateColumn.CellTemplate>
                    </my:DataGridTemplateColumn>
                    <my:DataGridTextColumn Width="100" Binding="{Binding Item.LicenseNumber, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource LicenseNumber}">
                        <my:DataGridTextColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{my:Translation Format=LicenseNumberFormat}" />
                            </DataTemplate>
                        </my:DataGridTextColumn.CellTemplate>
                    </my:DataGridTextColumn>
                    <DataGridTemplateColumn Width="90" Header="{my:Resource IsMutation}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <my:PackIcon Width="18"
                                             Height="18"
                                             HorizontalAlignment="Center"
                                             Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                             Kind="WarningOctagon"
                                             Visibility="{Binding Item.IsMutation, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CheckBox Style="{StaticResource MyNet.Styles.CheckBox.Foreground}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding Item.IsMutation, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <my:DataGridComboBoxColumn Width="90"
                                               Header="{my:Resource LicenseState}"
                                               ItemsSource="{my:EnumSource EnumType={x:Type enums2:LicenseState}}"
                                               SelectedValueBinding="{Binding Item.LicenseState}"
                                               SelectedValuePath="Value" />
                    <my:DataGridDateColumn Width="100" Binding="{Binding Item.FromDate, StringFormat=dd/MM/yyyy, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource InClubFromDate}">
                        <my:DataGridDateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{my:Translation Format=ShortDatePattern}" />
                            </DataTemplate>
                        </my:DataGridDateColumn.CellTemplate>
                    </my:DataGridDateColumn>
                    <my:DataGridTextColumn Width="200" Binding="{Binding Item.Address, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Address}" />
                    <my:DataGridTextColumn Width="70" Binding="{Binding Item.PostalCode, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource PostalCode}" />
                    <my:DataGridTextColumn Width="140" Binding="{Binding Item.City, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource City}" />
                    <my:DataGridTemplateColumn Width="180" Header="{my:Resource Emails}">
                        <my:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <my:SimpleStackPanel VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.Small}">
                                    <TextBlock Text="{Binding Item.Email.Value}" TextWrapping="NoWrap" />
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}" Visibility="{Binding Item.Emails.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotMany}}">
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="+" />
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{Binding Item.Emails.Count, Converter={x:Static my:MathConverter.Subtract}, ConverterParameter=1}" TextWrapping="NoWrap" />
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{my:Resource EmailOptionalPlural, Casing=LowerCase}" />
                                    </my:SimpleStackPanel>
                                </my:SimpleStackPanel>
                            </DataTemplate>
                        </my:DataGridTemplateColumn.CellTemplate>
                    </my:DataGridTemplateColumn>
                    <my:DataGridTemplateColumn Width="120" Header="{my:Resource Phones}">
                        <my:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <my:SimpleStackPanel VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.Small}">
                                    <TextBlock Text="{my:Translation Item.Phone, Format=PhoneFormat}" TextWrapping="NoWrap" />
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}" Visibility="{Binding Item.Phones.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotMany}}">
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="+" />
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{Binding Item.Phones.Count, Converter={x:Static my:MathConverter.Subtract}, ConverterParameter=1}" TextWrapping="NoWrap" />
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{my:Resource PhoneOptionalPlural, Casing=LowerCase}" />
                                    </my:SimpleStackPanel>
                                </my:SimpleStackPanel>
                            </DataTemplate>
                        </my:DataGridTemplateColumn.CellTemplate>
                    </my:DataGridTemplateColumn>
                    <my:DataGridComboBoxColumn Width="90"
                                               Header="{my:Resource Laterality}"
                                               ItemsSource="{my:EnumSource EnumType={x:Type enums:Laterality}}"
                                               SelectedValueBinding="{Binding Item.Laterality}"
                                               SelectedValuePath="Value" />
                    <my:DataGridNumericColumn Width="80"
                                              Binding="{Binding Item.Height.Value, UpdateSourceTrigger=PropertyChanged}"
                                              Header="{my:Resource Height}"
                                              MaximumBinding="{Binding Item.Height.Max}"
                                              MinimumBinding="{Binding Item.Height.Min}" />
                    <my:DataGridNumericColumn Width="80"
                                              Binding="{Binding Item.Weight.Value, UpdateSourceTrigger=PropertyChanged}"
                                              Header="{my:Resource Weight}"
                                              MaximumBinding="{Binding Item.Weight.Max}"
                                              MinimumBinding="{Binding Item.Weight.Min}" />
                    <my:DataGridTextColumn Width="80" Binding="{Binding Item.Size, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Size}" />
                    <my:DataGridNumericColumn Width="80"
                                              Binding="{Binding Item.ShoesSize.Value, UpdateSourceTrigger=PropertyChanged}"
                                              Header="{my:Resource ShoesSize}"
                                              MaximumBinding="{Binding Item.ShoesSize.Max}"
                                              MinimumBinding="{Binding Item.ShoesSize.Min}" />
                    <my:DataGridTextColumn MaxWidth="500" Binding="{Binding Item.Description, UpdateSourceTrigger=PropertyChanged}" Header="{my:Resource Description}" />
                </DataGrid.Columns>
            </DataGrid>
        </my:DynamicScrollViewer>
    </DockPanel>
</UserControl>
