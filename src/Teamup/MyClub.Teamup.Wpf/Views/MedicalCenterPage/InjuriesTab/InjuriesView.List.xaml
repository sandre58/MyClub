<UserControl x:Class="MyClub.Teamup.Wpf.Views.MedicalCenterPage.InjuriesTab.InjuriesListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:tabs="clr-namespace:MyClub.Teamup.Wpf.Enums"
             xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.MedicalCenterPage.InjuriesTab"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.MedicalCenterPage.InjuriesTab"
             d:DataContext="{d:DesignInstance Type=vm:InjuriesViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <!--  Items  -->
    <ListView Style="{StaticResource Teamup.Styles.ListView.Selectable}"
              MaxHeight="1000"
              my:ListAssist.SynchronizedList="{Binding}"
              ItemsSource="{Binding Wrappers}">
        <ListView.ItemContainerStyle>
            <Style BasedOn="{StaticResource Teamup.Styles.ListViewItem.Selectable}" TargetType="{x:Type ListViewItem}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Item.IsCurrent}" Value="False">
                        <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>

        <ListView.View>
            <GridView>

                <!--  Is Selected  -->
                <GridViewColumn my:GridViewColumnAssist.CanBeHidden="False"
                                my:GridViewColumnAssist.CanSort="False"
                                my:GridViewColumnAssist.Width="60"
                                HeaderTemplate="{StaticResource Teamup.DataTemplates.ListView.SelectAll}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{StaticResource Teamup.Styles.ToggleButton.Player}"
                                          Margin="{StaticResource MyNet.Margins.Default.Vertical}"
                                          Content="{Binding Item.Player}"
                                          IsChecked="{Binding IsSelected}"
                                          IsEnabled="{Binding IsSelectable}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Name  -->
                <GridViewColumn my:GridViewColumnAssist.CanBeHidden="False"
                                my:GridViewColumnAssist.PropertyName="Player"
                                my:GridViewColumnAssist.Width="3*"
                                Header="{my:Resource LastName}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Small}">
                                <ctrl:PlayerButton CommandParameter="{x:Static tabs:PlayerPageTab.Injuries}"
                                                   IsEnabled="{Binding Data.SelectedWrappers.Count, Converter={x:Static my:CountToBooleanConverter.NotMany}, Source={StaticResource Proxy}}"
                                                   Item="{Binding Item.Player}"
                                                   Orientation="Horizontal" />
                                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{Binding Item.Player.Team.Name}" Visibility="{Binding Item.Player.Team, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                            </my:SimpleStackPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Date  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="Date" my:GridViewColumnAssist.Width="2*" Header="{my:Resource Date}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Bold" Text="{my:Translation Item.Date, Format=MidDateFormat, Casing=Title}" TextWrapping="NoWrap" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Severity  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="Severity" my:GridViewColumnAssist.Width="*" Header="{my:Resource Severity}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <my:PackIcon x:Name="icon"
                                         Width="30"
                                         Height="30"
                                         HorizontalAlignment="Center" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Item.Severity}" Value="{x:Static enums:InjurySeverity.Serious}">
                                    <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource Teamup.Brushes.Injury.Serious}" />
                                    <Setter TargetName="icon" Property="ToolTip" Value="{my:Resource InjurySeveritySerious}" />
                                    <Setter TargetName="icon" Property="Kind" Value="Injection" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Item.Severity}" Value="{x:Static enums:InjurySeverity.Moderate}">
                                    <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource Teamup.Brushes.Injury.Moderate}" />
                                    <Setter TargetName="icon" Property="ToolTip" Value="{my:Resource InjurySeverityModerate}" />
                                    <Setter TargetName="icon" Property="Kind" Value="Sleep" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Item.Severity}" Value="{x:Static enums:InjurySeverity.Minor}">
                                    <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource Teamup.Brushes.Injury.Minor}" />
                                    <Setter TargetName="icon" Property="ToolTip" Value="{my:Resource InjurySeverityMinor}" />
                                    <Setter TargetName="icon" Property="Kind" Value="BatteryAlert" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Item.Severity}" Value="{x:Static enums:InjurySeverity.Severe}">
                                    <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource Teamup.Brushes.Injury.Severe}" />
                                    <Setter TargetName="icon" Property="ToolTip" Value="{my:Resource InjurySeveritySevere}" />
                                    <Setter TargetName="icon" Property="Kind" Value="Ambulance" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Condition  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="Condition" my:GridViewColumnAssist.Width="5*" Header="{my:Resource Condition}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource MyNet.Styles.Button.HyperLink.Foreground}"
                                    Command="{Binding Data.OpenCommand, Source={StaticResource Proxy}}"
                                    CommandParameter="{Binding Item}"
                                    Content="{my:Translation Item.Condition}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Category  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="Category" my:GridViewColumnAssist.Width="2*" Header="{my:Resource Category}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{my:Translation Item.Category}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  ExpectedReturn  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="EndDateOrMax" my:GridViewColumnAssist.Width="2*" Header="{my:Resource ExpectedReturn}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock x:Name="text" Text="{my:Translation Item.EndDateOrMax, Format=MidDateFormat, Casing=Title}" TextWrapping="NoWrap" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Item.EndDateOrMax}" Value="{x:Static sys:DateTime.MaxValue}">
                                    <Setter TargetName="text" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Actions  -->
                <GridViewColumn my:GridViewColumnAssist.CanBeHidden="False"
                                my:GridViewColumnAssist.CanSort="False"
                                my:GridViewColumnAssist.Width="90"
                                HeaderTemplate="{StaticResource MyNet.DataTemplates.ListView.ColumnsVisibility}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <v:InjuryToolBar x:Name="ToolBar"
                                             HorizontalAlignment="Right"
                                             DataContext="{Binding Item}"
                                             EditCommand="{Binding Data.EditCommand, Source={StaticResource Proxy}}"
                                             RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}"
                                             Visibility="Collapsed" />

                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" Value="True" />
                                        <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>
</UserControl>
