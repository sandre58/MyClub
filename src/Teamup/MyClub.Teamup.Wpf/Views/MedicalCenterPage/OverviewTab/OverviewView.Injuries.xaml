<GroupBox x:Class="MyClub.Teamup.Wpf.Views.MedicalCenterPage.OverviewTab.OverviewInjuriesView"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:my="http://mynet.com/xaml/themes"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:h="clr-namespace:MyNet.Humanizer;assembly=MyNet.Humanizer"
          xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
          xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
          xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.MedicalCenterPage.OverviewTab"
          xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.MedicalCenterPage.OverviewTab"
          xmlns:sys="clr-namespace:System;assembly=mscorlib"
          Style="{StaticResource MyNet.Styles.GroupBox.Elevation}"
          d:DataContext="{d:DesignInstance Type=vm:OverviewInjuriesViewModel}"
          d:DesignHeight="450"
          d:DesignWidth="800"
          my:IconAssist.Icon="{my:MediumIcon Kind=MedicalBag}"
          Header="{my:Resource MedicalCenter,
                               Casing=AllCaps}"
          mc:Ignorable="d">
    <GroupBox.Resources>
        <my:BindingProxy x:Key="InjuriesProxy" Data="{Binding}" />
        <DataTemplate x:Key="Teamup.DataTemplates.Injury">
            <my:Card x:Name="base"
                     Style="{StaticResource MyNet.Styles.Card.Elevation.Custom}"
                     Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                     Background="{DynamicResource MyNet.Brushes.Control.Background.Secondary}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <my:PictureControl Style="{StaticResource Teamup.Styles.PictureControl.Player.Medium}"
                                       Margin="{StaticResource MyNet.Margins.Medium.Horizontal}"
                                       VerticalAlignment="Center"
                                       Background="{Binding Foreground, ElementName=base}"
                                       DataContext="{Binding Player}"
                                       Foreground="{my:BrushBinding SelfPath=Tag,
                                                                    Opacity={StaticResource MyNet.Opacity.Medium}}"
                                       Tag="{my:BrushBinding SelfPath=Background,
                                                             Contrast=True}" />

                    <StackPanel Grid.Column="1">
                        <ctrl:PlayerButton x:Name="button"
                                           Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                                           BorderBrush="{Binding Foreground, ElementName=base}"
                                           Command="{Binding OpenCommand}"
                                           CommandParameter="{Binding}"
                                           Foreground="{Binding Foreground, ElementName=base}"
                                           Item="{Binding Player}"
                                           Orientation="Horizontal" />
                        <Button Style="{StaticResource MyNet.Styles.Button.HyperLink.Foreground}"
                                HorizontalAlignment="Left"
                                Command="{Binding OpenCommand}"
                                CommandParameter="{Binding}"
                                Content="{Binding Condition}"
                                Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                    </StackPanel>

                    <GroupBox x:Name="return"
                              Style="{StaticResource MyNet.Styles.GroupBox.Clean}"
                              Grid.Column="2"
                              VerticalAlignment="Center"
                              HorizontalContentAlignment="Right"
                              my:HeaderAssist.Padding="{StaticResource MyNet.Margins.Default.Bottom}"
                              Content="{Binding EndDate}"
                              Header="{my:Resource ExpectedReturn}"
                              Visibility="{Binding EndDate, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}">
                        <GroupBox.ContentTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="{StaticResource MyNet.Font.Weight.Header}" Typography.Capitals="AllSmallCaps">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{x:Static my:DatesIntervalToStringConverter.Date}" ConverterParameter="{x:Static h:LetterCasing.Sentence}">
                                            <Binding />
                                            <Binding Source="{x:Static sys:DateTime.Today}" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </GroupBox.ContentTemplate>
                    </GroupBox>

                    <Label x:Name="Ellipse"
                           Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Custom}"
                           Grid.Column="3"
                           Margin="{StaticResource MyNet.Margins.Medium.Left}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Background="{Binding Foreground, ElementName=base}"
                           Content="{my:MediumIcon Kind=PlusThick}"
                           Foreground="{Binding Background, ElementName=base}" />
                </Grid>
            </my:Card>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsCurrent}" Value="False">
                    <Setter TargetName="return" Property="Header" Value="{my:Resource ReturnDate}" />
                    <Setter TargetName="return" Property="Content" Value="{Binding EndDate}" />
                    <Setter TargetName="return" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Ellipse" Property="Content" Value="{my:MediumIcon Kind=Crossfit}" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCurrent}" Value="True" />
                        <Condition Binding="{Binding Severity}" Value="{x:Static enums:InjurySeverity.Severe}" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="base" Property="Background" Value="{DynamicResource Teamup.Brushes.Injury.Severe}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCurrent}" Value="True" />
                        <Condition Binding="{Binding Severity}" Value="{x:Static enums:InjurySeverity.Serious}" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="base" Property="Background" Value="{DynamicResource Teamup.Brushes.Injury.Serious}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCurrent}" Value="True" />
                        <Condition Binding="{Binding Severity}" Value="{x:Static enums:InjurySeverity.Moderate}" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="base" Property="Background" Value="{DynamicResource Teamup.Brushes.Injury.Moderate}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCurrent}" Value="True" />
                        <Condition Binding="{Binding Severity}" Value="{x:Static enums:InjurySeverity.Minor}" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="base" Property="Background" Value="{DynamicResource Teamup.Brushes.Injury.Minor}" />
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </GroupBox.Resources>

    <my:GhostControl Content="{Binding Injuries}" ShowGhost="{Binding Injuries.Count, Converter={x:Static my:CountToBooleanConverter.NotAny}}">
        <my:GhostControl.Style>
            <Style BasedOn="{StaticResource MyNet.Styles.GhostControl}" TargetType="{x:Type my:GhostControl}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}" ItemTemplate="{StaticResource Teamup.DataTemplates.Injury}" ItemsSource="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsScrollable, RelativeSource={RelativeSource AncestorType={x:Type v:OverviewInjuriesView}}}" Value="True">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl.Scrollable}" ItemTemplate="{StaticResource Teamup.DataTemplates.Injury}" ItemsSource="{Binding}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </my:GhostControl.Style>
    </my:GhostControl>
</GroupBox>
