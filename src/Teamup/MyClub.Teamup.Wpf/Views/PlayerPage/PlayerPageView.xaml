<UserControl x:Class="MyClub.Teamup.Wpf.Views.PlayerPage.PlayerPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:MyClub.Teamup.Wpf.Converters"
             xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
             xmlns:utils="clr-namespace:MyNet.Utilities;assembly=MyNet.Utilities"
             xmlns:enums2="clr-namespace:MyClub.Teamup.Domain.Enums;assembly=MyClub.Teamup.Domain"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.PlayerPage"
             d:DataContext="{d:DesignInstance Type=vm:PlayerPageViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             my:InputAssist.PropagateInWindow="True"
             my:ViewModelAssist.AutoWire="True"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <!--  Shortcuts  -->
    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Modifiers="Ctrl" Key="E" Command="{Binding Data.Item.EditCommand, Source={StaticResource Proxy}}" />
            <KeyBinding Key="Delete" Command="{Binding Data.Item.RemoveCommand, Source={StaticResource Proxy}}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="10" />
            <RowDefinition Height="33" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Header Background  -->
        <Border Grid.RowSpan="3"
                Background="{Binding CurrentProject.Color, Converter={x:Static my:ColorToGradientBrushConverter.Lighten}}"
                CornerRadius="15 0 0 0"
                Effect="{StaticResource MyNet.Shadows.Elevation6}" />

        <!--  Header  -->
        <my:TransitioningContent Margin="{StaticResource MyNet.Margins.Medium}" Content="{Binding Item}" Foreground="{Binding CurrentProject.Color, Converter={x:Static my:BrushConverter.Contrast}}">
            <my:TransitioningContent.ContentTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="450" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="270" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="320" />
                        </Grid.ColumnDefinitions>

                        <!--  First Block  -->
                        <DockPanel>

                            <!--  Photo  -->
                            <my:PictureControl Style="{StaticResource Teamup.Styles.PictureControl.Player.Huge}"
                                               Margin="{StaticResource MyNet.Margins.Large.Right}"
                                               Background="{my:BrushBinding InheritPath=(TextElement.Foreground),
                                                                            Opacity={StaticResource MyNet.Opacity.Overlay}}"
                                               DataContext="{Binding}"
                                               DockPanel.Dock="Left" />

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!--  Info  -->
                                <my:SimpleStackPanel HorizontalAlignment="Stretch" Orientation="Vertical" Spacing="{StaticResource MyNet.Margin.Default}">

                                    <!--  Player selection  -->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <!--  Player  -->
                                        <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Filled.Foreground.SemiTransparent}"
                                                           Grid.RowSpan="2"
                                                           Grid.Column="0"
                                                           HorizontalAlignment="Stretch"
                                                           VerticalAlignment="Stretch"
                                                           HorizontalContentAlignment="Stretch"
                                                           PopupPadding="0">
                                            <my:DropDownButton.ToggleContent>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="5" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}"
                                                               FontWeight="Bold"
                                                               Opacity="{StaticResource MyNet.Opacity.Default}"
                                                               Text="{Binding FirstName}" />
                                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}"
                                                               Grid.Column="2"
                                                               FontWeight="Bold"
                                                               Opacity="{StaticResource MyNet.Opacity.Default}"
                                                               Text="{Binding LastName, Converter={x:Static my:StringConverter.ToUpper}}"
                                                               TextTrimming="CharacterEllipsis"
                                                               TextWrapping="NoWrap" />
                                                </Grid>
                                            </my:DropDownButton.ToggleContent>
                                            <ListBox Style="{StaticResource Teamup.Styles.ListBox.Embedded.Popup.OtherItems}" ItemsSource="{Binding Data.OtherItems, Source={StaticResource Proxy}}" Tag="{Binding Data, Source={StaticResource Proxy}}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <DockPanel>
                                                            <my:PictureControl Style="{StaticResource Teamup.Styles.PictureControl.Player.SmallMedium}" Margin="{StaticResource MyNet.Margins.Medium.Right}" DockPanel.Dock="Left" />
                                                            <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Small}">
                                                                <TextBlock FontSize="{StaticResource MyNet.Font.Size.Menu}" Text="{Binding FullName}" />
                                                                <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{Binding Positions, Converter={x:Static c:RatedPositionsToStringConverter.BestCodes}}" TextWrapping="NoWrap" />
                                                            </my:SimpleStackPanel>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </my:DropDownButton>

                                        <!--  Navigation buttons  -->
                                        <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}"
                                                Grid.Row="0"
                                                Grid.Column="2"
                                                Command="{Binding Data.NavigateToPreviousItemCommand, Source={StaticResource Proxy}}"
                                                Content="{my:MediumIcon Kind=ChevronUp}"
                                                ToolTip="{Binding Data.PreviousItem.FullName, Source={StaticResource Proxy}}" />
                                        <Button Style="{StaticResource MyNet.Styles.Button.Icon.Foreground}"
                                                Grid.Row="1"
                                                Grid.Column="2"
                                                Command="{Binding Data.NavigateToNextItemCommand, Source={StaticResource Proxy}}"
                                                Content="{my:MediumIcon Kind=ChevronDown}"
                                                ToolTip="{Binding Data.NextItem.FullName, Source={StaticResource Proxy}}" />
                                    </Grid>

                                    <!--  Gender and Age  -->
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
                                        <my:PackIcon Width="20"
                                                     Height="20"
                                                     Foreground="{DynamicResource MyNet.Brushes.Male}"
                                                     Kind="GenderMale"
                                                     Visibility="{Binding Gender, FallbackValue=Hidden, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static utils:GenderType.Male}}" />
                                        <my:PackIcon Width="20"
                                                     Height="20"
                                                     Foreground="{DynamicResource MyNet.Brushes.Female}"
                                                     Kind="GenderFemale"
                                                     Visibility="{Binding Gender, FallbackValue=Collapsed, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static utils:GenderType.Female}}" />
                                        <my:GhostControl VerticalAlignment="Center" Ghost="{my:Resource UnknownAge}" ShowGhost="{Binding Birthdate, Converter={x:Static my:NullToBooleanConverter.TrueIfNull}}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Margin="{StaticResource MyNet.Margins.Default.Right}" Text="{my:Translation Age, Format=AgeFormat}" />
                                                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="(" />
                                                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation Birthdate, Format=ShortDatePattern}" />
                                                <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text=")" />
                                            </StackPanel>
                                        </my:GhostControl>
                                    </my:SimpleStackPanel>

                                    <!--  Country  -->
                                    <my:GhostControl Ghost="{my:Resource UnknownNationality}" ShowGhost="{Binding Country, Converter={x:Static my:NullToBooleanConverter.TrueIfNull}}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Width="20"
                                                   Margin="{StaticResource MyNet.Margins.Default.Right}"
                                                   Source="{Binding Country, Converter={x:Static my:CountryToFlagConverter.To24}}"
                                                   ToolTip="{my:Translation Country}" />
                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{Binding Country, Converter={x:Static my:CountryToStringConverter.ToAlpha3}}" />
                                        </StackPanel>
                                    </my:GhostControl>

                                </my:SimpleStackPanel>

                                <!--  Body  -->
                                <my:SimpleStackPanel Grid.Row="1" Orientation="Horizontal">

                                    <!--  Size  -->
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}" Visibility="{Binding Size, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}">
                                        <my:PackIcon Kind="TshirtCrew" Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                                        <TextBlock Text="{Binding Size}" />
                                    </my:SimpleStackPanel>

                                    <!--  Shoes Size  -->
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}" Visibility="{Binding ShoesSize, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}">
                                        <my:PackIcon Kind="ShoeFormal" Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                                        <TextBlock Text="{Binding ShoesSize}" />
                                    </my:SimpleStackPanel>

                                </my:SimpleStackPanel>
                            </Grid>

                        </DockPanel>

                        <!--  Second Block  -->
                        <Grid Grid.Column="2">
                            <my:Card Background="{my:BrushBinding InheritPath=(TextElement.Foreground), Opacity={StaticResource MyNet.Opacity.Checked}}" Foreground="{my:BrushBinding InheritPath=(TextElement.Foreground)}">
                                <my:Card.Style>
                                    <Style BasedOn="{StaticResource MyNet.Styles.Card.Elevation.Custom}" TargetType="{x:Type my:Card}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Back}">
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.License.Back}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Given}">
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.License.Given}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Unknown}">
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.License.Unknown}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Paid}">
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.License.Paid}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </my:Card.Style>
                                <DockPanel>

                                    <!--  Current Club Logo  -->
                                    <my:PackIcon Width="90"
                                                 Height="90"
                                                 Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                                 VerticalAlignment="Center"
                                                 DockPanel.Dock="Left"
                                                 Kind="Shield"
                                                 Visibility="{Binding Data.CurrentProject.Club.Logo, Source={StaticResource Proxy}, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
                                    <Image Width="90"
                                           Height="90"
                                           Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                           VerticalAlignment="Center"
                                           DockPanel.Dock="Left"
                                           Source="{Binding Data.CurrentProject.Club.Logo, Source={StaticResource Proxy}, Converter={x:Static my:BytesToImageConverter.Default}}"
                                           Stretch="Uniform"
                                           Visibility="{Binding Data.CurrentProject.Club.Logo, Source={StaticResource Proxy}, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />

                                    <my:SimpleStackPanel Orientation="Vertical" Spacing="{StaticResource MyNet.Margin.Default}">

                                        <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">

                                            <!--  Team  -->
                                            <TextBlock FontWeight="Bold" Text="{Binding Team.Name}" />

                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="-" Visibility="{Binding Team, FallbackValue=Hidden, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />

                                            <!--  Category  -->
                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation Category}" />
                                        </my:SimpleStackPanel>

                                        <!--  License  -->
                                        <StackPanel Orientation="Horizontal">

                                            <TextBlock Text="{my:Translation LicenseNumber, Format=LicenseNumberFormat}" />

                                            <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool.ClipBoard}" CommandParameter="{my:Translation LicenseNumber, Format=LicenseNumberFormat}" />

                                            <my:PackIcon Width="20"
                                                         Height="20"
                                                         Margin="{StaticResource MyNet.Margins.Default.Horizontal}"
                                                         Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                                         Kind="WarningOctagon"
                                                         ToolTip="{my:Resource IsMutation}"
                                                         Visibility="{Binding IsMutation, FallbackValue=Hidden, Converter={x:Static my:BooleanToVisibilityConverter.HiddenIfFalse}}" />
                                        </StackPanel>

                                        <!--  FromDate  -->
                                        <my:GhostControl Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                                                         VerticalAlignment="Center"
                                                         Ghost="{my:Resource UnknownFromDate}"
                                                         ShowGhost="{Binding FromDate, Converter={x:Static my:NullToBooleanConverter.FalseIfNull}}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Margin="{StaticResource MyNet.Margins.Default.Right}"
                                                           FontStyle="Italic"
                                                           Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                           Text="{my:Resource AtClubFrom}" />
                                                <TextBlock Margin="0"
                                                           Padding="0"
                                                           FontStyle="Italic"
                                                           Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                           Text="{my:Translation FromDate,
                                                                                 Format=ShortDatePattern}" />
                                            </StackPanel>
                                        </my:GhostControl>

                                    </my:SimpleStackPanel>

                                </DockPanel>
                            </my:Card>

                            <!--  Number  -->
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Custom}"
                                   Width="40"
                                   Height="40"
                                   Margin="0 0 0 -15"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Bottom"
                                   Background="{Binding Data.CurrentProject.Club.HomeColor, Source={StaticResource Proxy}, Converter={x:Static my:BrushConverter.Darken}}"
                                   Content="{Binding Number}"
                                   FontFamily="{StaticResource MyNet.Font.Family.Jersey}"
                                   FontSize="25"
                                   Visibility="{Binding Number, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />

                            <my:PackIcon Width="20"
                                         Height="20"
                                         Margin="{StaticResource MyNet.Margins.Default}"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Bottom"
                                         ToolTip="{my:Translation LicenseState}">
                                <my:PackIcon.Style>
                                    <Style BasedOn="{StaticResource MyNet.Styles.PackIcon}" TargetType="{x:Type my:PackIcon}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Back}">
                                                <Setter Property="Kind" Value="{x:Static md:PackIconKind.AssignmentReturn}" />
                                                <Setter Property="Foreground" Value="{DynamicResource Teamup.Brushes.License.Back}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Given}">
                                                <Setter Property="Kind" Value="{x:Static md:PackIconKind.CardBulletedSettings}" />
                                                <Setter Property="Foreground" Value="{DynamicResource Teamup.Brushes.License.Given}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Unknown}">
                                                <Setter Property="Kind" Value="{x:Static md:PackIconKind.QuestionMarkRhombus}" />
                                                <Setter Property="Foreground" Value="{DynamicResource Teamup.Brushes.License.Unknown}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enums2:LicenseState.Paid}">
                                                <Setter Property="Kind" Value="{x:Static md:PackIconKind.Dollar}" />
                                                <Setter Property="Foreground" Value="{DynamicResource Teamup.Brushes.License.Paid}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </my:PackIcon.Style>
                            </my:PackIcon>
                        </Grid>

                        <!--  Third block  -->
                        <my:SimpleStackPanel Grid.Column="4" Orientation="Horizontal">

                            <!--  Positions  -->
                            <ctrl:PositionsSelector Style="{StaticResource Teamup.Styles.PositionsSelector.RatedPosition}"
                                                    Grid.Row="2"
                                                    Width="150"
                                                    Height="120"
                                                    CanMove="False"
                                                    CanSelect="False"
                                                    ItemsSource="{Binding Positions}">
                                <ctrl:PositionsSelector.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource Teamup.Styles.PositionItem.RatedPosition}" TargetType="{x:Type ctrl:PositionItem}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsNatural}" Value="True">
                                                <Setter Property="BorderThickness" Value="2" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ctrl:PositionsSelector.ItemContainerStyle>
                                <ctrl:PositionsSelector.ItemTemplate>
                                    <DataTemplate>
                                        <Label Style="{StaticResource Teamup.Styles.Label.Embedded.PositionItem}" Width="14" Height="14" />
                                    </DataTemplate>
                                </ctrl:PositionsSelector.ItemTemplate>
                            </ctrl:PositionsSelector>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <my:SimpleStackPanel>

                                    <!--  Natural Position  -->
                                    <my:GhostControl Ghost="{my:Resource NoNaturalPosition}" ShowGhost="{Binding NaturalPosition, Converter={x:Static my:NullToBooleanConverter.TrueIfNull}}">
                                        <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean}"
                                                  Padding="{StaticResource MyNet.Margins.Small.Top}"
                                                  my:HeaderAssist.Capitals="AllSmallCaps"
                                                  my:HeaderAssist.HorizontalAlignment="Left"
                                                  my:HeaderAssist.Padding="0"
                                                  Header="{my:Resource NaturalPosition}">
                                            <TextBlock FontWeight="DemiBold" Text="{my:Translation NaturalPosition, Casing=AllCaps}" />
                                        </GroupBox>
                                    </my:GhostControl>

                                    <!--  Good positions  -->
                                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean}"
                                              Padding="{StaticResource MyNet.Margins.Small.Top}"
                                              VerticalAlignment="Top"
                                              my:HeaderAssist.Capitals="AllSmallCaps"
                                              my:HeaderAssist.HorizontalAlignment="Left"
                                              my:HeaderAssist.Padding="0"
                                              Content="{Binding Positions, Converter={x:Static c:RatedPositionsToStringConverter.GoodCodes}}"
                                              Header="{my:Resource Positions}"
                                              Visibility="{Binding GoodPositions.Count, Converter={x:Static my:CountToVisibilityConverter.HiddenIfNotAny}}" />

                                </my:SimpleStackPanel>

                                <!--  Body  -->
                                <my:SimpleStackPanel Grid.Row="1" Orientation="Horizontal">

                                    <!--  Laterality  -->
                                    <StackPanel Orientation="Horizontal" ToolTip="{my:Translation Laterality}">
                                        <my:GeometryIcon x:Name="LeftFootIcon"
                                                         Width="20"
                                                         Height="20"
                                                         Margin="-5 0"
                                                         Data="{DynamicResource MyNet.Geometries.LeftFoot}">
                                            <my:GeometryIcon.Style>
                                                <Style BasedOn="{StaticResource MyNet.Styles.GeometryIcon}" TargetType="{x:Type my:GeometryIcon}">
                                                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Medium}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Laterality}" Value="{x:Static enums:Laterality.LeftHander}">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </my:GeometryIcon.Style>
                                        </my:GeometryIcon>
                                        <my:GeometryIcon x:Name="RightFootIcon"
                                                         Width="20"
                                                         Height="20"
                                                         Margin="-5 0"
                                                         Data="{DynamicResource MyNet.Geometries.RightFoot}">
                                            <my:GeometryIcon.Style>
                                                <Style BasedOn="{StaticResource MyNet.Styles.GeometryIcon}" TargetType="{x:Type my:GeometryIcon}">
                                                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Medium}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Laterality}" Value="{x:Static enums:Laterality.RightHander}">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </my:GeometryIcon.Style>
                                        </my:GeometryIcon>
                                    </StackPanel>

                                    <!--  Height  -->
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}" Visibility="{Binding Height.HasValue, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                        <my:PackIcon Kind="HumanMaleHeight" Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                                        <TextBlock Text="{my:UnitTranslation Height, Simplify=False}" />
                                    </my:SimpleStackPanel>

                                    <!--  Weight  -->
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}" Visibility="{Binding Weight.HasValue, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                        <my:PackIcon Kind="WeightKg" Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                                        <TextBlock Text="{my:UnitTranslation Weight, Simplify=False}" />
                                    </my:SimpleStackPanel>
                                </my:SimpleStackPanel>
                            </Grid>

                        </my:SimpleStackPanel>

                    </Grid>
                </DataTemplate>
            </my:TransitioningContent.ContentTemplate>
        </my:TransitioningContent>

        <!--  Tabs  -->
        <my:NavigationView Style="{StaticResource Teamup.Styles.NavigationView.Top.Secondary}"
                           Grid.Row="2"
                           Grid.RowSpan="2"
                           my:ThemeAssist.IsCheckedBorderBrush="{Binding CurrentProject.Color, Converter={x:Static my:BrushConverter.Contrast}}"
                           HeaderForeground="{Binding CurrentProject.Color, Converter={x:Static my:BrushConverter.Contrast}}"
                           NavigationService="{Binding NavigationService}">
            <my:NavigationView.PaneFooter>
                <my:SimpleStackPanel Margin="0 -10 10 0"
                                     Orientation="Horizontal"
                                     Spacing="{StaticResource MyNet.Margin.Default}"
                                     TextElement.Foreground="{Binding CurrentProject.Color, Converter={x:Static my:BrushConverter.Contrast}}">
                    <Button Style="{StaticResource MyNet.Styles.Button.Filled.Foreground.SemiTransparent}"
                            my:IconAssist.Icon="{my:Icon Kind=Edit}"
                            Command="{Binding Item.EditCommand}"
                            Content="{my:Resource Edit}"
                            ToolTip="Ctrl+E" />
                    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.Filled.Foreground.SemiTransparent}"
                                       my:IconAssist.Icon="{my:Icon Kind=PersonArrowLeft}"
                                       PopupPadding="0"
                                       ToggleContent="{my:Resource Move}"
                                       Visibility="{Binding Item.OtherTeams.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                        <my:Submenu my:ItemsControlAssist.SortingProperty="Order" ItemsSource="{Binding Item.OtherTeams}">
                            <my:Submenu.ItemContainerStyle>
                                <Style BasedOn="{StaticResource MyNet.Styles.MenuItem}" TargetType="MenuItem">
                                    <Setter Property="Command" Value="{Binding Data.Item.MoveCommand, Source={StaticResource Proxy}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </my:Submenu.ItemContainerStyle>
                            <my:Submenu.ItemTemplate>
                                <DataTemplate>
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
                                        <TextBlock Text="{my:Resource MovingPlayerInTeam}" />
                                        <TextBlock Text="{Binding Name}" />
                                    </my:SimpleStackPanel>
                                </DataTemplate>
                            </my:Submenu.ItemTemplate>
                        </my:Submenu>
                    </my:DropDownButton>
                    <Button Style="{StaticResource MyNet.Styles.Button.Filled.Foreground.SemiTransparent}"
                            my:IconAssist.Icon="{my:Icon Kind=PersonArrowRight}"
                            Command="{Binding Item.MoveCommand}"
                            CommandParameter="{x:Null}"
                            Content="{my:Resource GoOut}"
                            Visibility="{Binding Item.Team, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                    <Button Style="{StaticResource MyNet.Styles.Button.Remove}" Command="{Binding Item.RemoveCommand}" />
                </my:SimpleStackPanel>
            </my:NavigationView.PaneFooter>
            <my:NavigationViewItem Header="{my:Resource Overview}" Icon="{my:Icon Kind=ViewDashboard}" TargetPage="{Binding OverviewViewModel}" />
            <my:NavigationViewItem Header="{my:Resource Positions}" Icon="{my:Icon Kind=Target}" TargetPage="{Binding PositionsViewModel}" />
            <my:NavigationViewItem Header="{my:Resource Injuries}" Icon="{my:Icon Kind=Ambulance}" TargetPage="{Binding InjuriesViewModel}" />
            <my:NavigationViewItem Header="{my:Resource Training}" Icon="{my:Icon Data={StaticResource Teamup.Geometries.Training}}" TargetPage="{Binding TrainingViewModel}" />
            <my:NavigationViewItem Header="{my:Resource Absences}" Icon="{my:Icon Kind=PersonOff}" TargetPage="{Binding AbsencesViewModel}" />
            <my:NavigationViewItem Header="{my:Resource Communication}" Icon="{my:Icon Kind=EmailSend}" TargetPage="{Binding CommunicationViewModel}" />
        </my:NavigationView>
    </Grid>
</UserControl>
