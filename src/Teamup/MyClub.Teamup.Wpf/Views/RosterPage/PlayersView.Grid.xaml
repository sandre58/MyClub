<UserControl x:Class="MyClub.Teamup.Wpf.Views.RosterPage.PlayersGridView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:MyClub.Teamup.Wpf.Converters"
             xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:utils="clr-namespace:MyNet.Utilities;assembly=MyNet.Utilities"
             xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.RosterPage"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.RosterPage"
             d:DataContext="{d:DesignInstance Type=vm:PlayersViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <DataTemplate x:Key="Teamup.DataTemplates.ListBoxItem.Player">
            <Border x:Name="border" BorderThickness="2">
                <Grid Width="190" Height="240">

                    <Grid Margin="{StaticResource MyNet.Margins.Medium}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  Informations  -->
                        <my:SimpleStackPanel>

                            <!--  ID container  -->
                            <DockPanel>

                                <!--  Photo  -->
                                <my:PictureControl x:Name="Picture"
                                                   Style="{StaticResource Teamup.Styles.PictureControl.Player.Large}"
                                                   Margin="{StaticResource MyNet.Margins.Default.Right}"
                                                   VerticalAlignment="Top"
                                                   DataContext="{Binding Item}"
                                                   DockPanel.Dock="Left" />

                                <my:SimpleStackPanel VerticalAlignment="Top" Orientation="Vertical" Spacing="{StaticResource MyNet.Margin.Default}">

                                    <!--  Name  -->
                                    <ctrl:PlayerButton ContextMenu="{x:Null}"
                                                       FontSize="{StaticResource MyNet.Font.Size.Caption}"
                                                       IsEnabled="{Binding Data.SelectedWrappers.Count, Converter={x:Static my:CountToBooleanConverter.NotMany}, Source={StaticResource Proxy}}"
                                                       Item="{Binding Item}"
                                                       Orientation="Vertical" />

                                    <!--  Country  -->
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="20"
                                               Margin="{StaticResource MyNet.Margins.Default.Right}"
                                               Source="{Binding Item.Country, Converter={x:Static my:CountryToFlagConverter.To24}}"
                                               ToolTip="{my:Translation Item.Country}"
                                               Visibility="{Binding Item.Country, Converter={x:Static my:NullToVisibilityConverter.HiddenIfNull}}" />
                                        <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{Binding Item.Country, Converter={x:Static my:CountryToStringConverter.ToAlpha3}}" />
                                    </StackPanel>
                                </my:SimpleStackPanel>

                            </DockPanel>

                            <!--  Age + Team container  -->
                            <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">

                                <!--  Category  -->
                                <Grid Width="38" Height="38">
                                    <my:PackIcon x:Name="CategoryIcon"
                                                 Width="38"
                                                 Height="38"
                                                 Kind="Shield" />
                                    <TextBlock x:Name="CategoryText"
                                               Padding="0"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontWeight="Bold"
                                               Text="{my:Translation Item.Category,
                                                                     Abbreviation=True,
                                                                     Casing=AllCaps}" />
                                </Grid>

                                <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Small}">

                                    <!--  Age  -->
                                    <my:GhostControl Ghost="{my:Resource UnknownAge}" ShowGhost="{Binding Item.Birthdate, Converter={x:Static my:NullToBooleanConverter.TrueIfNull}}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="{StaticResource MyNet.Margins.Default.Right}" Text="{my:Translation Item.Age, Format=AgeFormat}" />
                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="(" />
                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Translation Item.Birthdate, Format=ShortDatePattern}" />
                                            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text=")" />
                                        </StackPanel>
                                    </my:GhostControl>

                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}">

                                        <!--  Number  -->
                                        <TextBlock Margin="{StaticResource MyNet.Margins.Default.Right}"
                                                   FontFamily="{StaticResource MyNet.Font.Family.Jersey}"
                                                   FontSize="{StaticResource MyNet.Font.Size.Caption}"
                                                   Text="{Binding Item.Number}"
                                                   TextWrapping="NoWrap"
                                                   Visibility="{Binding Item.Number, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />

                                        <!--  Team  -->
                                        <TextBlock Text="{Binding Item.Team.Name}" />
                                    </my:SimpleStackPanel>

                                </my:SimpleStackPanel>
                            </my:SimpleStackPanel>

                            <!--  Club container  -->
                            <my:SimpleStackPanel Orientation="Vertical" Spacing="{StaticResource MyNet.Margin.Default}">

                                <!--  License  -->
                                <StackPanel Orientation="Horizontal">
                                    <my:PackIcon Width="18"
                                                 Height="18"
                                                 Margin="{StaticResource MyNet.Margins.Small.Right}"
                                                 Foreground="{DynamicResource MyNet.Brushes.Warning}"
                                                 Kind="WarningOctagon"
                                                 ToolTip="{my:Resource IsMutation}"
                                                 Visibility="{Binding Item.IsMutation, FallbackValue=Hidden, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                                    <TextBlock Text="{my:Translation Item.LicenseNumber, Format=LicenseNumberFormat}" />

                                    <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool.ClipBoard}" CommandParameter="{my:Translation Item.LicenseNumber, Format=LicenseNumberFormat}" />

                                </StackPanel>

                                <StackPanel Orientation="Horizontal">

                                    <!--  Laterality  -->
                                    <StackPanel Margin="{StaticResource MyNet.Margins.Default.Right}" Orientation="Horizontal" ToolTip="{my:Translation Item.Laterality}">
                                        <my:GeometryIcon x:Name="LeftFootIcon"
                                                         Width="30"
                                                         Height="30"
                                                         Margin="-5 2"
                                                         Data="{DynamicResource MyNet.Geometries.LeftFoot}"
                                                         Opacity="{StaticResource MyNet.Opacity.Disabled}" />
                                        <my:GeometryIcon x:Name="RightFootIcon"
                                                         Width="30"
                                                         Height="30"
                                                         Margin="-5 2"
                                                         Data="{DynamicResource MyNet.Geometries.RightFoot}"
                                                         Opacity="{StaticResource MyNet.Opacity.Disabled}" />
                                    </StackPanel>

                                    <!--  Positions  -->
                                    <StackPanel>
                                        <TextBlock Text="{Binding Item.Positions, Converter={x:Static c:RatedPositionsToStringConverter.NaturalCodes}}" TextWrapping="NoWrap" />
                                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{Binding Item.Positions, Converter={x:Static c:RatedPositionsToStringConverter.GoodCodes}}" TextWrapping="NoWrap" />
                                    </StackPanel>

                                </StackPanel>

                            </my:SimpleStackPanel>

                        </my:SimpleStackPanel>

                        <!--  Actions  -->
                        <DockPanel Grid.Row="2">

                            <my:SimpleStackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                <!--  Selection  -->
                                <CheckBox x:Name="Selection"
                                          Style="{StaticResource MyNet.Styles.CheckBox.Circle}"
                                          BorderBrush="{my:BrushBinding SelfPath=(TextElement.Foreground),
                                                                        Opacity={StaticResource MyNet.Opacity.Secondary}}"
                                          Focusable="False"
                                          IsChecked="{Binding IsSelected}"
                                          IsTabStop="False"
                                          Visibility="Hidden" />
                            </my:SimpleStackPanel>

                            <!--  Item ToolBar  -->
                            <v:PlayerToolBar x:Name="ToolBar"
                                             Padding="0"
                                             HorizontalAlignment="Right"
                                             DataContext="{Binding Item}"
                                             RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}"
                                             Visibility="Hidden" />

                        </DockPanel>

                    </Grid>

                    <!--  Injury  -->
                    <Canvas x:Name="InjuryCanvas"
                            Width="40"
                            Height="40"
                            Margin="-1 -1 0 0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            ToolTip="{Binding Item.Injury.Condition}"
                            Visibility="Collapsed">
                        <Path x:Name="InjuryPath" Data="M1,40V1H40" />

                        <my:PackIcon Canvas.Left="5"
                                     Canvas.Top="5"
                                     Foreground="White"
                                     Kind="Ambulance" />
                    </Canvas>
                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Item.Laterality}" Value="{x:Static enums:Laterality.LeftHander}">
                    <Setter TargetName="LeftFootIcon" Property="Opacity" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.Laterality}" Value="{x:Static enums:Laterality.RightHander}">
                    <Setter TargetName="RightFootIcon" Property="Opacity" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
                        <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.Gender}" Value="{x:Static utils:GenderType.Female}">
                    <Setter TargetName="CategoryIcon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Female}" />
                    <Setter TargetName="CategoryText" Property="Foreground" Value="{DynamicResource MyNet.Brushes.White}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.Gender}" Value="{x:Static utils:GenderType.Male}">
                    <Setter TargetName="CategoryIcon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Male}" />
                    <Setter TargetName="CategoryText" Property="Foreground" Value="{DynamicResource MyNet.Brushes.White}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.IsAbsent}" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Negative}" />
                    <Setter TargetName="border" Property="BorderThickness" Value="2" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.IsInjured}" Value="True">
                    <Setter TargetName="InjuryCanvas" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.Injury.Severity}" Value="{x:Static enums:InjurySeverity.Serious}">
                    <Setter TargetName="InjuryPath" Property="Fill" Value="{DynamicResource Teamup.Brushes.Injury.Serious}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.Injury.Serious}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.Injury.Severity}" Value="{x:Static enums:InjurySeverity.Moderate}">
                    <Setter TargetName="InjuryPath" Property="Fill" Value="{DynamicResource Teamup.Brushes.Injury.Moderate}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.Injury.Moderate}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.Injury.Severity}" Value="{x:Static enums:InjurySeverity.Minor}">
                    <Setter TargetName="InjuryPath" Property="Fill" Value="{DynamicResource Teamup.Brushes.Injury.Minor}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.Injury.Minor}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Item.Injury.Severity}" Value="{x:Static enums:InjurySeverity.Severe}">
                    <Setter TargetName="InjuryPath" Property="Fill" Value="{DynamicResource Teamup.Brushes.Injury.Severe}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Teamup.Brushes.Injury.Severe}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
                    <Setter TargetName="border" Property="BorderThickness" Value="2" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <ListBox Style="{StaticResource MyNet.Styles.ListBox.Cards}"
             my:ListAssist.SynchronizedList="{Binding}"
             my:ItemsControlAssist.GroupingProperty="{Binding CurrentGroups, Converter={x:Static my:GroupPropertiesToStringConverter.Default}, ConverterParameter='Item.'}"
             ItemTemplate="{StaticResource Teamup.DataTemplates.ListBoxItem.Player}"
             ItemsSource="{Binding Wrappers}">
        <ListBox.ItemContainerStyle>
            <Style BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Card}" TargetType="{x:Type ListBoxItem}">
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                <Setter Property="IsEnabled" Value="{Binding IsSelectable}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Item.IsAbsent}" Value="True">
                        <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListBox.ItemContainerStyle>
        <ListBox.GroupStyle>
            <GroupStyle>
                <GroupStyle.ContainerStyle>
                    <Style TargetType="{x:Type GroupItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Bordered}" Margin="{StaticResource MyNet.Margins.Large.Bottom}" Header="{my:Translation Name}">
                                        <ItemsPresenter />
                                    </GroupBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </GroupStyle.ContainerStyle>
            </GroupStyle>
        </ListBox.GroupStyle>
    </ListBox>
</UserControl>
