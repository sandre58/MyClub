<UserControl x:Class="MyClub.Teamup.Wpf.Views.TrainingPage.SessionsTab.TrainingSessionsCalendarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:MyClub.Teamup.Wpf.Converters"
             xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.TrainingPage.SessionsTab"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.TrainingPage.SessionsTab"
             d:DataContext="{d:DesignInstance Type=vm:TrainingSessionsViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <Style x:Key="Teamup.Styles.CalendarAppointment.Session" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysByMonth}" TargetType="{x:Type my:CalendarAppointment}">
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <DockPanel>

                            <!--  ToolBar  -->
                            <v:TrainingSessionToolBar x:Name="ToolBar"
                                                      Style="{StaticResource MyNet.Styles.ToolBar.Tools}"
                                                      HorizontalAlignment="Right"
                                                      DataContext="{Binding Item}"
                                                      DockPanel.Dock="Right"
                                                      RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}"
                                                      Visibility="Collapsed" />

                            <DockPanel>

                                <Grid Width="25">
                                    <CheckBox x:Name="Selection"
                                              Style="{StaticResource MyNet.Styles.CheckBox.Circle}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              BorderBrush="{my:BrushBinding SelfPath=(TextElement.Foreground),
                                                                            Opacity={StaticResource MyNet.Opacity.Secondary}}"
                                              IsChecked="{Binding IsSelected}"
                                              Visibility="Collapsed" />
                                    <my:PackIcon x:Name="Icon"
                                                 Width="22"
                                                 Height="22"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Kind="Clockwise" />
                                </Grid>

                                <StackPanel Margin="{StaticResource MyNet.Margins.Small.Left}">

                                    <!--  Date  -->
                                    <ctrl:TrainingSessionButton Content="{Binding}"
                                                                ContextMenu="{x:Null}"
                                                                IsEnabled="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}"
                                                                Item="{Binding Item}">
                                        <ctrl:TrainingSessionButton.ContentTemplate>
                                            <DataTemplate>
                                                <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
                                                    <TextBlock Text="{my:Translation Item.StartDate, Format=ShortTimePattern}" />
                                                    <TextBlock Text="-" />
                                                    <TextBlock Text="{my:Translation Item.EndDate, Format=ShortTimePattern}" />
                                                </my:SimpleStackPanel>
                                            </DataTemplate>
                                        </ctrl:TrainingSessionButton.ContentTemplate>
                                    </ctrl:TrainingSessionButton>

                                    <!--  Content  -->
                                    <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}">
                                        <my:DropDownButton Style="{StaticResource Teamup.Styles.DropDownButton.TrainingSession.Info}" PopupContent="{Binding Item}" />
                                        <TextBlock FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                                   Text="{Binding Item.Theme}"
                                                   TextTrimming="CharacterEllipsis"
                                                   TextWrapping="NoWrap"
                                                   Visibility="{Binding Item.Theme, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
                                        <TextBlock FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                                   FontStyle="Italic"
                                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                   Text="{my:Resource NoTheme}"
                                                   TextTrimming="CharacterEllipsis"
                                                   TextWrapping="NoWrap"
                                                   Visibility="{Binding Item.Theme, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
                                    </my:SimpleStackPanel>
                                </StackPanel>

                            </DockPanel>
                        </DockPanel>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Item.IsCancelled}" Value="True">
                                <Setter TargetName="Icon" Property="Kind" Value="Cancel" />
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Negative}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Item.IsPerformed}" Value="True">
                                <Setter TargetName="Icon" Property="Kind" Value="Check" />
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource MyNet.Brushes.Positive}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type my:CalendarAppointment}}}" Value="True">
                                <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
                                    <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Teamup.Styles.CalendarItem.Session" BasedOn="{StaticResource MyNet.Styles.CalendarItem.DaysByMonth}" TargetType="{x:Type my:CalendarItem}">
            <Setter Property="my:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent}" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Command="{Binding Data.AddCommand, Source={StaticResource Proxy}}"
                                  Header="{my:Resource AddSessions}"
                                  Icon="{my:ToolIcon Kind=Plus}"
                                  InputGestureText="Ctrl+N" />
                        <MenuItem Command="{Binding Data.RemoveSessionsInSelectedDatesCommand, Source={StaticResource Proxy}}"
                                  Header="{my:Resource RemoveSessions}"
                                  Icon="{my:ToolIcon Kind=Trash}"
                                  InputGestureText="Ctrl+Suppr" />
                        <Separator />
                        <MenuItem Command="{Binding Data.SelectSessionsInSelectedDatesCommand, Source={StaticResource Proxy}}" Header="{my:Resource SelectSessions}" Icon="{my:ToolIcon Kind=CheckboxesMarked}" />
                        <MenuItem Command="{Binding Data.UnselectSessionsInSelectedDatesCommand, Source={StaticResource Proxy}}" Header="{my:Resource UnselectSessions}" Icon="{my:ToolIcon Kind=CheckboxesBlank}" />
                        <Separator />
                        <MenuItem Command="{Binding Data.CancelSessionsInSelectedDatesCommand, Source={StaticResource Proxy}}"
                                  Header="{my:Resource CancelSessions}"
                                  Icon="{my:ToolIcon Kind=Cancel}"
                                  InputGestureText="Ctrl+Maj+R" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Border Height="5"
                                    Margin="-5"
                                    VerticalAlignment="Top"
                                    Visibility="{Binding Data.ShowCycles, Source={StaticResource Proxy}, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                <Border.Background>
                                    <MultiBinding Converter="{x:Static c:DateToPeriodColorConverter.Brush}" ConverterParameter="0.6">
                                        <Binding Path="" />
                                        <Binding Path="Data.Cycles" Source="{StaticResource Proxy}" UpdateSourceTrigger="PropertyChanged" />
                                    </MultiBinding>
                                </Border.Background>
                                <Border.ToolTip>
                                    <MultiBinding Converter="{x:Static c:DateToPeriodColorConverter.Label}">
                                        <Binding Path="" />
                                        <Binding Path="Data.Cycles" Source="{StaticResource Proxy}" UpdateSourceTrigger="PropertyChanged" />
                                    </MultiBinding>
                                </Border.ToolTip>
                            </Border>
                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Converter={x:Static my:DayNumberToStringConverter.ToTitle}}" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Data.ShowHolidays, Source={StaticResource Proxy}}" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <MultiBinding Converter="{x:Static c:DateToPeriodColorConverter.Brush}" ConverterParameter="0.25">
                                <Binding Path="" />
                                <Binding Path="Data.Holidays" Source="{StaticResource Proxy}" UpdateSourceTrigger="PropertyChanged" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <MultiBinding Converter="{x:Static c:DateToPeriodColorConverter.Label}">
                                <Binding Path="" />
                                <Binding Path="Data.Holidays" Source="{StaticResource Proxy}" UpdateSourceTrigger="PropertyChanged" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <Trigger Property="IsNow" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <!--  Items  -->
    <my:Card Margin="2" Padding="0" Background="{DynamicResource MyNet.Brushes.Application.Background.Secondary}">
        <my:CalendarDaysByMonth Style="{StaticResource MyNet.Styles.Calendar.DaysByMonth.Alternate}"
                                my:HeaderAssist.Background="{DynamicResource MyNet.Brushes.Control.Background}"
                                AddCommand="{Binding AddToDateCommand}"
                                Appointments="{Binding Wrappers}"
                                BorderThickness="0"
                                CalendarItemStyle="{StaticResource Teamup.Styles.CalendarItem.Session}"
                                DatesSelectionMode="MultipleRange"
                                DisplayDate="{Binding Display.Mode.DisplayDate}"
                                FirstDayOfWeek="{Binding Display.Mode.FirstDayOfWeek}"
                                ItemContainerStyle="{StaticResource Teamup.Styles.CalendarAppointment.Session}"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                SelectedDates="{Binding SelectedDates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionMode="Extended"
                                ShowHeader="False" />
    </my:Card>
</UserControl>
