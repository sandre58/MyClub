<UserControl x:Class="MyClub.Teamup.Wpf.Views.TrainingPage.SessionsTab.TrainingSessionsListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:MyClub.Teamup.Wpf.Converters"
             xmlns:ctrl="clr-namespace:MyClub.Teamup.Wpf.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.TrainingPage.SessionsTab"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.TrainingPage.SessionsTab"
             d:DataContext="{d:DesignInstance Type=vm:TrainingSessionsViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <!--  Items  -->
    <ListView Style="{StaticResource Teamup.Styles.ListView.Selectable}" my:ListAssist.SynchronizedList="{Binding}" ItemsSource="{Binding Wrappers}">

        <ListView.ItemContainerStyle>
            <Style BasedOn="{StaticResource Teamup.Styles.ListViewItem.Selectable}" TargetType="{x:Type ListViewItem}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Item.StartDate, Converter={x:Static c:DateIsInHolidaysConverter.Default}}" Value="True" />
                            <Condition Binding="{Binding Data.ShowHolidays, Source={StaticResource Proxy}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{my:BrushBinding Item.Holidays.Color, Opacity={StaticResource MyNet.Opacity.Secondary}}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
            <GridView>

                <!--  Is Selected  -->
                <GridViewColumn my:GridViewColumnAssist.CanBeHidden="False"
                                my:GridViewColumnAssist.CanSort="False"
                                my:GridViewColumnAssist.Width="60"
                                HeaderTemplate="{StaticResource Teamup.DataTemplates.ListView.SelectAll}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{StaticResource Teamup.Styles.ToggleButton.TrainingSession}"
                                          Width="35"
                                          Height="35"
                                          Margin="{StaticResource MyNet.Margins.Default.Vertical}"
                                          Content="{Binding Item}"
                                          IsChecked="{Binding IsSelected}"
                                          IsEnabled="{Binding IsSelectable}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Date  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="Date" my:GridViewColumnAssist.Width="250" Header="{my:Resource Date}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <ctrl:TrainingSessionButton ContextMenu="{x:Null}" IsEnabled="{Binding DataContext.SelectedWrappers.Count, Converter={x:Static my:CountToBooleanConverter.NotMany}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" Item="{Binding Item}">
                                    <ctrl:TrainingSessionButton.ContentTemplate>
                                        <DataTemplate>
                                            <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
                                                <TextBlock Text="{my:Translation Item.StartDate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ctrl:TrainingSessionButton}}, Casing=Title, Format=LongDatePattern}" TextWrapping="NoWrap" />
                                                <TextBlock Text="{my:Resource To}" TextWrapping="NoWrap" />
                                                <TextBlock Text="{my:Translation Item.StartDate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ctrl:TrainingSessionButton}}, Casing=Title, Format=ShortTimePattern}" TextWrapping="NoWrap" />
                                            </my:SimpleStackPanel>
                                        </DataTemplate>
                                    </ctrl:TrainingSessionButton.ContentTemplate>
                                </ctrl:TrainingSessionButton>
                            </Grid>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Place  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="Place"
                                my:GridViewColumnAssist.Width="200"
                                DisplayMemberBinding="{Binding Item.Place}"
                                Header="{my:Resource Place}" />

                <!--  Theme  -->
                <GridViewColumn my:GridViewColumnAssist.PropertyName="Theme" my:GridViewColumnAssist.Width="*" Header="{my:Resource Theme}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <my:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}">
                                <my:DropDownButton Style="{StaticResource Teamup.Styles.DropDownButton.TrainingSession.Info}" PopupContent="{Binding Item}" />
                                <TextBlock Text="{Binding Item.Theme}" TextWrapping="Wrap" />
                            </my:SimpleStackPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <!--  Actions  -->
                <GridViewColumn my:GridViewColumnAssist.CanBeHidden="False" my:GridViewColumnAssist.CanSort="False" my:GridViewColumnAssist.Width="90">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <v:TrainingSessionToolBar x:Name="ToolBar"
                                                      HorizontalAlignment="Right"
                                                      DataContext="{Binding Item}"
                                                      DockPanel.Dock="Right"
                                                      RemoveCommand="{Binding Data.RemoveCommand, Source={StaticResource Proxy}}"
                                                      Visibility="Collapsed" />
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" Value="True" />
                                        <Condition Binding="{Binding Data.SelectedWrappers.Count, Source={StaticResource Proxy}, Converter={x:Static my:CountToBooleanConverter.NotMany}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ToolBar" Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>
</UserControl>
