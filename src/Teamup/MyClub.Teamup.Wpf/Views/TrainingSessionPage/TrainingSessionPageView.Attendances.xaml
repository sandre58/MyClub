<UserControl x:Class="MyClub.Teamup.Wpf.Views.TrainingSessionPage.TrainingSessionPageAttendancesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:MyClub.Domain.Enums;assembly=MyClub.Domain"
             xmlns:enums2="clr-namespace:MyClub.Teamup.Domain.Enums;assembly=MyClub.Teamup.Domain"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:v="clr-namespace:MyClub.Teamup.Wpf.Views.TrainingSessionPage"
             xmlns:vm="clr-namespace:MyClub.Teamup.Wpf.ViewModels.TrainingSessionPage"
             d:DataContext="{d:DesignInstance Type=vm:TrainingSessionPageAttendancesViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <my:BindingProxy x:Key="ProxyAttendances" Data="{Binding}" />

        <Style x:Key="Teamup.Styles.Button.Attendances.Count" BasedOn="{StaticResource MyNet.Styles.Button.Outlined.Custom}" TargetType="{x:Type Button}">
            <Setter Property="my:ThemeAssist.CornerRadius" Value="17" />
            <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Small}" />
            <Setter Property="Command" Value="{Binding SelectAttendancesCommand}" />
            <Setter Property="my:IconAssist.Alignment" Value="Right" />
            <Setter Property="my:IconAssist.Margin" Value="{StaticResource MyNet.Margins.Default.Left}" />
            <Setter Property="Foreground" Value="{my:BrushBinding SelfPath=BorderBrush}" />
        </Style>
    </UserControl.Resources>

    <!--  Shortcuts  -->
    <my:InputAssist.InputBindings>
        <InputBindingCollection>
            <KeyBinding Key="Delete" Command="{Binding Data.RemoveSelectedItemsCommand, Source={StaticResource ProxyAttendances}}" />
        </InputBindingCollection>
    </my:InputAssist.InputBindings>

    <my:GhostControl Grid.Row="4" ShowGhost="{Binding WrappersSource.Count, Converter={x:Static my:CountToBooleanConverter.NotAny}}">
        <my:GhostControl.GhostTemplate>
            <DataTemplate>
                <my:SimpleStackPanel Width="350"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Spacing="{StaticResource MyNet.Margin.VeryLarge}">
                    <Button Style="{StaticResource MyNet.Styles.Button.Elevation}"
                            Height="Auto"
                            MinHeight="80"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            Command="{Binding Data.EditAttendancesCommand, Source={StaticResource ProxyAttendances}}"
                            ToolTip="Ctrl+Maj+E">
                        <Grid>
                            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean.Left}" Header="{my:Icon Kind=AccountMultipleAdd, Size=50}">
                                <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Small}">
                                    <TextBlock FontWeight="{StaticResource MyNet.Font.Weight.Header}" Text="{my:Resource EditAttendances, Casing=AllCaps}" />
                                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource EditAttendancesDescription}" TextWrapping="Wrap" />
                                </my:SimpleStackPanel>
                            </GroupBox>
                        </Grid>
                    </Button>
                    <Button Style="{StaticResource MyNet.Styles.Button.Elevation}"
                            Height="Auto"
                            MinHeight="80"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            Command="{Binding Data.InitializeAttendancesCommand, Source={StaticResource ProxyAttendances}}">
                        <Grid>
                            <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean.Left}" Header="{my:Icon Kind=AccountMultipleCheck, Size=50}">
                                <my:SimpleStackPanel Spacing="{StaticResource MyNet.Margin.Small}">
                                    <TextBlock FontWeight="{StaticResource MyNet.Font.Weight.Header}" Text="{my:Resource InitializeAttendances, Casing=AllCaps}" />
                                    <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{my:Resource InitializeAttendancesDescription}" TextWrapping="Wrap" />
                                </my:SimpleStackPanel>
                            </GroupBox>
                        </Grid>
                    </Button>
                </my:SimpleStackPanel>
            </DataTemplate>
        </my:GhostControl.GhostTemplate>
        <DockPanel>

            <!--  ToolBar  -->
            <my:CommandsBar Margin="{StaticResource MyNet.Margins.Medium.Bottom}" DockPanel.Dock="Top">

                <my:CommandsBar.RightCommands>
                    <ToolBar Style="{StaticResource MyNet.Styles.ToolBar.Transparent}">
                        <!--  Presents  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                my:IconAssist.Icon="{my:Icon Kind=CheckboxMarkedCircle}"
                                BorderBrush="{DynamicResource MyNet.Brushes.Positive}"
                                CommandParameter="{x:Static enums2:Attendance.Present}"
                                Content="{Binding CountPresents}"
                                ToolTip="{my:Resource Presents}"
                                Visibility="{Binding CountPresents, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                        <!--  Absents  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                my:IconAssist.Icon="{my:Icon Kind=Cancel}"
                                BorderBrush="{DynamicResource MyNet.Brushes.Negative}"
                                CommandParameter="{x:Static enums2:Attendance.Absent}"
                                Content="{Binding CountAbsents}"
                                ToolTip="{my:Resource Absents}"
                                Visibility="{Binding CountAbsents, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                        <!--  Apologized  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                my:IconAssist.Icon="{my:Icon Kind=MessageProcessing}"
                                BorderBrush="{DynamicResource MyNet.Brushes.Warning}"
                                CommandParameter="{x:Static enums2:Attendance.Apology}"
                                Content="{Binding CountApologized}"
                                ToolTip="{my:Resource Apologized}"
                                Visibility="{Binding CountApologized, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                        <!--  Injured  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                my:IconAssist.Icon="{my:Icon Kind=Ambulance}"
                                BorderBrush="{DynamicResource Teamup.Brushes.Attendance.Injured}"
                                CommandParameter="{x:Static enums2:Attendance.Injured}"
                                Content="{Binding CountInjured}"
                                ToolTip="{my:Resource InjuredPlural}"
                                Visibility="{Binding CountInjured, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                        <!--  InHolidays  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                my:IconAssist.Icon="{my:Icon Kind=Beach}"
                                BorderBrush="{DynamicResource Teamup.Brushes.Attendance.InHolidays}"
                                CommandParameter="{x:Static enums2:Attendance.InHolidays}"
                                Content="{Binding CountInHolidays}"
                                ToolTip="{my:Resource InHolidays}"
                                Visibility="{Binding CountInHolidays, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                        <!--  InSelections  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                my:IconAssist.Icon="{my:Icon Kind=Star}"
                                BorderBrush="{DynamicResource Teamup.Brushes.Attendance.InSelection}"
                                CommandParameter="{x:Static enums2:Attendance.InSelection}"
                                Content="{Binding CountInSelection}"
                                ToolTip="{my:Resource InSelections}"
                                Visibility="{Binding CountInSelection, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                        <!--  Resting  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                VerticalAlignment="Center"
                                my:IconAssist.Icon="{my:Icon Kind=Sleep,
                                                             Size=16}"
                                BorderBrush="{DynamicResource Teamup.Brushes.Attendance.Resting}"
                                CommandParameter="{x:Static enums2:Attendance.Resting}"
                                Content="{Binding CountResting}"
                                ToolTip="{my:Resource Resting}"
                                Visibility="{Binding CountResting, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

                        <!--  Unknown  -->
                        <Button Style="{StaticResource Teamup.Styles.Button.Attendances.Count}"
                                VerticalAlignment="Center"
                                my:IconAssist.Icon="{my:Icon Kind=QuestionMarkCircle,
                                                             Size=16}"
                                BorderBrush="{DynamicResource MyNet.Brushes.None}"
                                CommandParameter="{x:Static enums2:Attendance.Unknown}"
                                Content="{Binding CountUnknown}"
                                ToolTip="{my:Resource Unknown}"
                                Visibility="{Binding CountUnknown, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource Teamup.DataTemplates.List.Count.Selectable}" />
                        <my:ExtendedSortingView DataContext="{Binding Sorting}" />
                        <Separator Style="{StaticResource MyNet.Styles.Separator.Vertical}" Margin="{StaticResource MyNet.Margins.Default.Vertical}" />
                        <my:DisplayView DataContext="{Binding Display}" />
                    </ToolBar>
                </my:CommandsBar.RightCommands>

                <my:SelectionCommandsBar SelectedCount="{Binding SelectedWrappers.Count}" UnselectAllCommand="{Binding ClearSelectionCommand}">
                    <Button Command="{Binding SetSelectedAttendancesToPresentCommand}"
                            Content="{my:ToolIcon Kind=CheckboxMarkedCircle}"
                            Foreground="{DynamicResource MyNet.Brushes.Positive}"
                            ToolTip="{my:Resource AttendancePresent}" />
                    <Button Command="{Binding SetSelectedAttendancesToAbsentCommand}"
                            Content="{my:ToolIcon Kind=Cancel}"
                            Foreground="{DynamicResource MyNet.Brushes.Negative}"
                            ToolTip="{my:Resource AttendanceAbsent}" />
                    <Button Command="{Binding SetSelectedAttendancesToApologyCommand}"
                            Content="{my:ToolIcon Kind=MessageProcessing}"
                            Foreground="{DynamicResource MyNet.Brushes.Warning}"
                            ToolTip="{my:Resource AttendanceApology}" />
                    <Button Command="{Binding SetSelectedAttendancesToInjuredCommand}"
                            Content="{my:ToolIcon Kind=Ambulance}"
                            Foreground="{DynamicResource Teamup.Brushes.Attendance.Injured}"
                            ToolTip="{my:Resource AttendanceInjured}" />
                    <Button Command="{Binding SetSelectedAttendancesToInHolidaysCommand}"
                            Content="{my:ToolIcon Kind=Beach}"
                            Foreground="{DynamicResource Teamup.Brushes.Attendance.InHolidays}"
                            ToolTip="{my:Resource AttendanceInHolidays}" />
                    <Button Command="{Binding SetSelectedAttendancesToInSelectionCommand}"
                            Content="{my:ToolIcon Kind=Star}"
                            Foreground="{DynamicResource Teamup.Brushes.Attendance.InSelection}"
                            ToolTip="{my:Resource AttendanceInSelection}" />
                    <Button Command="{Binding SetSelectedAttendancesToRestingCommand}"
                            Content="{my:ToolIcon Kind=Sleep}"
                            Foreground="{DynamicResource Teamup.Brushes.Attendance.Resting}"
                            ToolTip="{my:Resource AttendanceResting}" />
                    <Button Command="{Binding SetSelectedAttendancesToUnknownCommand}" Content="{my:ToolIcon Kind=QuestionMarkCircle}" ToolTip="{my:Resource AttendanceUnknown}" />
                    <Button Style="{StaticResource MyNet.Styles.Button.Remove}" Command="{Binding RemoveSelectedItemsCommand}" />
                </my:SelectionCommandsBar>

            </my:CommandsBar>

            <!--  Content  -->
            <my:TransitioningContent>
                <my:TransitioningContent.Style>
                    <Style BasedOn="{StaticResource MyNet.Styles.TransitioningContent}" TargetType="{x:Type my:TransitioningContent}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Display.Mode.Key}" Value="DisplayModeGrid">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <v:TrainingSessionPageAttendancesGridView />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Display.Mode.Key}" Value="DisplayModeList">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <v:TrainingSessionPageAttendancesListView />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WrappersSource.Count}" Value="0">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <ContentControl ContentTemplate="{StaticResource Teamup.DataTemplates.Ghost.NoData.Large}" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </my:TransitioningContent.Style>
            </my:TransitioningContent>
        </DockPanel>
    </my:GhostControl>
</UserControl>
